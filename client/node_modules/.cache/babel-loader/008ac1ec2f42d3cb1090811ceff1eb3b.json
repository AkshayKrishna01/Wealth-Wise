{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aishwarya\\\\Desktop\\\\PRACTICE\\\\newwexpo\\\\expo - Copy\\\\client\\\\src\\\\components\\\\Linegraph\\\\Line.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Navigation from \"../NavBar\";\nimport styles from \"./style.module.css\";\nimport Line from \"../Linegraph/Line\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CombinedExpense() {\n  _s();\n\n  const [graphData, setGraphData] = useState([]);\n  const apiUrl = \"http://localhost:8080/api/expense\";\n\n  const getAuthHeaders = () => {\n    const token = localStorage.getItem(\"token\");\n    return {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    };\n  };\n\n  useEffect(() => {\n    fetchGraphData();\n  }, []);\n\n  const fetchGraphData = () => {\n    fetch(`${apiUrl}/graph/daily`, {\n      method: \"GET\",\n      headers: getAuthHeaders()\n    }).then(res => res.json()).then(data => {\n      console.log(\"Fetched Graph Data:\", data); // Debugging\n\n      setGraphData(data);\n    }).catch(err => console.error(\"Error fetching graph data\", err));\n  };\n\n  const chartData = {\n    labels: graphData.map(d => d._id),\n    datasets: [{\n      label: \"Daily Expense\",\n      data: graphData.map(d => d.totalAmount),\n      fill: false,\n      borderColor: \"#ff6384\",\n      tension: 0.1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.graphContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Daily Expense Graph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), graphData.length > 0 ? /*#__PURE__*/_jsxDEV(Line, {\n          data: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No data available for the graph.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CombinedExpense, \"pmamvzrrixu6Uz+4Mr1ZIumSAC8=\");\n\n_c = CombinedExpense;\n\nvar _c;\n\n$RefreshReg$(_c, \"CombinedExpense\");","map":{"version":3,"sources":["C:/Users/Aishwarya/Desktop/PRACTICE/newwexpo/expo - Copy/client/src/components/Linegraph/Line.js"],"names":["useEffect","useState","Navigation","styles","Line","CombinedExpense","graphData","setGraphData","apiUrl","getAuthHeaders","token","localStorage","getItem","fetchGraphData","fetch","method","headers","then","res","json","data","console","log","catch","err","error","chartData","labels","map","d","_id","datasets","label","totalAmount","fill","borderColor","tension","container","graphContainer","length"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,WAAvB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AAEA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AAGxC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAMO,MAAM,GAAG,mCAAf;;AAEA,QAAMC,cAAc,GAAG,MAAM;AAC3B,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,WAAO;AACL,sBAAgB,kBADX;AAEL,uBAAkB,UAASF,KAAM;AAF5B,KAAP;AAID,GAND;;AAQAV,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,cAAc;AACf,GAFQ,EAEN,EAFM,CAAT;;AAMA,QAAMA,cAAc,GAAG,MAAM;AAC3BC,IAAAA,KAAK,CAAE,GAAEN,MAAO,cAAX,EAA0B;AAAEO,MAAAA,MAAM,EAAE,KAAV;AAAiBC,MAAAA,OAAO,EAAEP,cAAc;AAAxC,KAA1B,CAAL,CACGQ,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,IAAnC,EADc,CAC4B;;AAC1Cb,MAAAA,YAAY,CAACa,IAAD,CAAZ;AACD,KALH,EAMGG,KANH,CAMUC,GAAD,IAASH,OAAO,CAACI,KAAR,CAAc,2BAAd,EAA2CD,GAA3C,CANlB;AAOD,GARD;;AAUA,QAAME,SAAS,GAAG;AAChBC,IAAAA,MAAM,EAAErB,SAAS,CAACsB,GAAV,CAAeC,CAAD,IAAOA,CAAC,CAACC,GAAvB,CADQ;AAEhBC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,eADT;AAEEZ,MAAAA,IAAI,EAAEd,SAAS,CAACsB,GAAV,CAAeC,CAAD,IAAOA,CAAC,CAACI,WAAvB,CAFR;AAGEC,MAAAA,IAAI,EAAE,KAHR;AAIEC,MAAAA,WAAW,EAAE,SAJf;AAKEC,MAAAA,OAAO,EAAE;AALX,KADQ;AAFM,GAAlB;AAaA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEjC,MAAM,CAACkC,SAAvB;AAAA,6BAIE;AAAK,QAAA,SAAS,EAAElC,MAAM,CAACmC,cAAvB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGhC,SAAS,CAACiC,MAAV,GAAmB,CAAnB,gBACC,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEb;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA7DuBrB,e;;KAAAA,e","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Navigation from \"../NavBar\";\r\nimport styles from \"./style.module.css\";\r\nimport Line from \"../Linegraph/Line\";\r\n\r\nexport default function CombinedExpense() {\r\n\r\n\r\n  const [graphData, setGraphData] = useState([]);\r\n\r\n  const apiUrl = \"http://localhost:8080/api/expense\";\r\n\r\n  const getAuthHeaders = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    return {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Authorization\": `Bearer ${token}`,\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchGraphData();\r\n  }, []);\r\n\r\n\r\n\r\n  const fetchGraphData = () => {\r\n    fetch(`${apiUrl}/graph/daily`, { method: \"GET\", headers: getAuthHeaders() })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(\"Fetched Graph Data:\", data); // Debugging\r\n        setGraphData(data);\r\n      })\r\n      .catch((err) => console.error(\"Error fetching graph data\", err));\r\n  };\r\n\r\n  const chartData = {\r\n    labels: graphData.map((d) => d._id),\r\n    datasets: [\r\n      {\r\n        label: \"Daily Expense\",\r\n        data: graphData.map((d) => d.totalAmount),\r\n        fill: false,\r\n        borderColor: \"#ff6384\",\r\n        tension: 0.1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.container}>\r\n        {/* Form and Table Code Here */}\r\n\r\n        {/* Daily Expense Graph */}\r\n        <div className={styles.graphContainer}>\r\n          <h3>Daily Expense Graph</h3>\r\n          {graphData.length > 0 ? (\r\n            <Line data={chartData} />\r\n          ) : (\r\n            <p>No data available for the graph.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}