{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aishwarya\\\\Desktop\\\\PRACTICE\\\\newwexpo\\\\expo - Copy\\\\client\\\\src\\\\components\\\\Budgetplan\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./styles.module.css\";\nimport Navigation from \"../NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BudgetPlan = () => {\n  _s();\n\n  const [budgets, setBudgets] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\"); // Form state for creating a new budget plan\n\n  const [name, setName] = useState(\"\");\n  const [total, setTotal] = useState(\"\");\n  const [spent, setSpent] = useState(\"\");\n  const [items, setItems] = useState(\"\");\n  const [icon, setIcon] = useState(\"\"); // Edit form state\n\n  const [editId, setEditId] = useState(null);\n  const [editName, setEditName] = useState(\"\");\n  const [editTotal, setEditTotal] = useState(\"\");\n  const [editSpent, setEditSpent] = useState(\"\");\n  const [editItems, setEditItems] = useState(\"\");\n  const [editIcon, setEditIcon] = useState(\"\");\n  const apiUrl = \"http://localhost:8080/api\"; // Helper to get auth headers\n\n  const getAuthHeaders = () => ({\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n  });\n\n  const clearMessages = () => {\n    setTimeout(() => {\n      setMessage(\"\");\n      setError(\"\");\n    }, 3000);\n  };\n\n  useEffect(() => {\n    fetchBudgets();\n  }, []);\n\n  const fetchBudgets = async () => {\n    try {\n      setError(\"\");\n      const res = await fetch(`${apiUrl}/budgetplan`, {\n        headers: getAuthHeaders()\n      });\n      if (!res.ok) throw new Error(\"Failed to fetch budget plans\");\n      setBudgets(await res.json());\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const handleSubmit = async () => {\n    if (!name || !total) {\n      setError(\"Name and Total are required\");\n      return;\n    }\n\n    try {\n      const res = await fetch(`${apiUrl}/budgetplan`, {\n        method: \"POST\",\n        headers: getAuthHeaders(),\n        body: JSON.stringify({\n          name,\n          total: Number(total),\n          spent: Number(spent) || 0,\n          items: Number(items) || 0,\n          icon: icon || \"ðŸ’°\"\n        })\n      });\n      if (!res.ok) throw new Error(\"Failed to create budget plan\");\n      setMessage(\"Budget plan created successfully!\");\n      setName(\"\");\n      setTotal(\"\");\n      setSpent(\"\");\n      setItems(\"\");\n      setIcon(\"\");\n      fetchBudgets();\n      clearMessages();\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const handleDelete = async id => {\n    if (!window.confirm(\"Are you sure you want to delete this budget plan?\")) return;\n\n    try {\n      const res = await fetch(`${apiUrl}/budgetplan/${id}`, {\n        method: \"DELETE\",\n        headers: getAuthHeaders()\n      });\n      if (!res.ok) throw new Error(\"Failed to delete budget plan\");\n      setMessage(\"Budget plan deleted successfully\");\n      fetchBudgets();\n      clearMessages();\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const handleEdit = plan => {\n    setEditId(plan._id);\n    setEditName(plan.name);\n    setEditTotal(plan.total);\n    setEditSpent(plan.spent);\n    setEditItems(plan.items);\n    setEditIcon(plan.icon);\n  };\n\n  const handleUpdate = async () => {\n    if (!editName || !editTotal) {\n      setError(\"Name and Total are required\");\n      return;\n    }\n\n    try {\n      const res = await fetch(`${apiUrl}/budgetplan/${editId}`, {\n        method: \"PUT\",\n        headers: getAuthHeaders(),\n        body: JSON.stringify({\n          name: editName,\n          total: Number(editTotal),\n          spent: Number(editSpent) || 0,\n          items: Number(editItems) || 0,\n          icon: editIcon || \"ðŸ’°\"\n        })\n      });\n      if (!res.ok) throw new Error(\"Failed to update budget plan\");\n      setMessage(\"Budget plan updated successfully\");\n      fetchBudgets();\n      setEditId(null);\n      clearMessages();\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Budget Plans\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.success_msg,\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 23\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.error_msg,\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Total\",\n            value: total,\n            onChange: e => setTotal(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Spent\",\n            value: spent,\n            onChange: e => setSpent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Items\",\n            value: items,\n            onChange: e => setItems(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Icon\",\n            value: icon,\n            onChange: e => setIcon(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.btnSuccess,\n          onClick: handleSubmit,\n          children: \"Create Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), budgets.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No budget plans found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 33\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.budgetGrid,\n        children: budgets.map(plan => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.budgetCard,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.budgetHeader,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: plan.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: plan.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"$\", plan.total]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [plan.items, \" Item(s)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.progressBar,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.progress,\n              style: {\n                width: plan.total > 0 ? `${plan.spent / plan.total * 100}%` : \"0%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"$\", plan.spent, \" Spent | $\", plan.total - plan.spent, \" Remaining\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.btnEdit,\n            onClick: () => handleEdit(plan),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.btnDelete,\n            onClick: () => handleDelete(plan._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this)]\n        }, plan._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(BudgetPlan, \"8v850cOqwHS0z1ZiLw6BZul5amM=\");\n\n_c = BudgetPlan;\nexport default BudgetPlan;\n\nvar _c;\n\n$RefreshReg$(_c, \"BudgetPlan\");","map":{"version":3,"sources":["C:/Users/Aishwarya/Desktop/PRACTICE/newwexpo/expo - Copy/client/src/components/Budgetplan/index.jsx"],"names":["React","useState","useEffect","styles","Navigation","BudgetPlan","budgets","setBudgets","error","setError","message","setMessage","name","setName","total","setTotal","spent","setSpent","items","setItems","icon","setIcon","editId","setEditId","editName","setEditName","editTotal","setEditTotal","editSpent","setEditSpent","editItems","setEditItems","editIcon","setEditIcon","apiUrl","getAuthHeaders","Authorization","localStorage","getItem","clearMessages","setTimeout","fetchBudgets","res","fetch","headers","ok","Error","json","err","handleSubmit","method","body","JSON","stringify","Number","handleDelete","id","window","confirm","handleEdit","plan","_id","handleUpdate","container","formContainer","success_msg","error_msg","formGroup","e","target","value","btnSuccess","length","budgetGrid","map","budgetCard","budgetHeader","progressBar","progress","width","btnEdit","btnDelete"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styles from \"./styles.module.css\";\nimport Navigation from \"../NavBar\";\n\nconst BudgetPlan = () => {\n  const [budgets, setBudgets] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  // Form state for creating a new budget plan\n  const [name, setName] = useState(\"\");\n  const [total, setTotal] = useState(\"\");\n  const [spent, setSpent] = useState(\"\");\n  const [items, setItems] = useState(\"\");\n  const [icon, setIcon] = useState(\"\");\n\n  // Edit form state\n  const [editId, setEditId] = useState(null);\n  const [editName, setEditName] = useState(\"\");\n  const [editTotal, setEditTotal] = useState(\"\");\n  const [editSpent, setEditSpent] = useState(\"\");\n  const [editItems, setEditItems] = useState(\"\");\n  const [editIcon, setEditIcon] = useState(\"\");\n\n  const apiUrl = \"http://localhost:8080/api\";\n\n  // Helper to get auth headers\n  const getAuthHeaders = () => ({\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n  });\n\n  const clearMessages = () => {\n    setTimeout(() => {\n      setMessage(\"\");\n      setError(\"\");\n    }, 3000);\n  };\n\n  useEffect(() => {\n    fetchBudgets();\n  }, []);\n\n  const fetchBudgets = async () => {\n    try {\n      setError(\"\");\n      const res = await fetch(`${apiUrl}/budgetplan`, { headers: getAuthHeaders() });\n      if (!res.ok) throw new Error(\"Failed to fetch budget plans\");\n      setBudgets(await res.json());\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const handleSubmit = async () => {\n    if (!name || !total) {\n      setError(\"Name and Total are required\");\n      return;\n    }\n    try {\n      const res = await fetch(`${apiUrl}/budgetplan`, {\n        method: \"POST\",\n        headers: getAuthHeaders(),\n        body: JSON.stringify({\n          name,\n          total: Number(total),\n          spent: Number(spent) || 0,\n          items: Number(items) || 0,\n          icon: icon || \"ðŸ’°\",\n        }),\n      });\n      if (!res.ok) throw new Error(\"Failed to create budget plan\");\n\n      setMessage(\"Budget plan created successfully!\");\n      setName(\"\");\n      setTotal(\"\");\n      setSpent(\"\");\n      setItems(\"\");\n      setIcon(\"\");\n      fetchBudgets();\n      clearMessages();\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const handleDelete = async (id) => {\n    if (!window.confirm(\"Are you sure you want to delete this budget plan?\")) return;\n    try {\n      const res = await fetch(`${apiUrl}/budgetplan/${id}`, {\n        method: \"DELETE\",\n        headers: getAuthHeaders(),\n      });\n      if (!res.ok) throw new Error(\"Failed to delete budget plan\");\n\n      setMessage(\"Budget plan deleted successfully\");\n      fetchBudgets();\n      clearMessages();\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const handleEdit = (plan) => {\n    setEditId(plan._id);\n    setEditName(plan.name);\n    setEditTotal(plan.total);\n    setEditSpent(plan.spent);\n    setEditItems(plan.items);\n    setEditIcon(plan.icon);\n  };\n\n  const handleUpdate = async () => {\n    if (!editName || !editTotal) {\n      setError(\"Name and Total are required\");\n      return;\n    }\n    try {\n      const res = await fetch(`${apiUrl}/budgetplan/${editId}`, {\n        method: \"PUT\",\n        headers: getAuthHeaders(),\n        body: JSON.stringify({\n          name: editName,\n          total: Number(editTotal),\n          spent: Number(editSpent) || 0,\n          items: Number(editItems) || 0,\n          icon: editIcon || \"ðŸ’°\",\n        }),\n      });\n      if (!res.ok) throw new Error(\"Failed to update budget plan\");\n\n      setMessage(\"Budget plan updated successfully\");\n      fetchBudgets();\n      setEditId(null);\n      clearMessages();\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <>\n      <Navigation />\n      <div className={styles.container}>\n        <div className={styles.formContainer}>\n          <h1>Budget Plans</h1>\n          {message && <div className={styles.success_msg}>{message}</div>}\n          {error && <div className={styles.error_msg}>{error}</div>}\n\n          <div className={styles.formGroup}>\n            <input type=\"text\" placeholder=\"Name\" value={name} onChange={(e) => setName(e.target.value)} />\n            <input type=\"number\" placeholder=\"Total\" value={total} onChange={(e) => setTotal(e.target.value)} />\n            <input type=\"number\" placeholder=\"Spent\" value={spent} onChange={(e) => setSpent(e.target.value)} />\n            <input type=\"number\" placeholder=\"Items\" value={items} onChange={(e) => setItems(e.target.value)} />\n            <input type=\"text\" placeholder=\"Icon\" value={icon} onChange={(e) => setIcon(e.target.value)} />\n          </div>\n          <button className={styles.btnSuccess} onClick={handleSubmit}>\n            Create Plan\n          </button>\n        </div>\n\n        {budgets.length === 0 ? <p>No budget plans found.</p> : (\n          <div className={styles.budgetGrid}>\n            {budgets.map((plan) => (\n              <div key={plan._id} className={styles.budgetCard}>\n                <div className={styles.budgetHeader}>\n                  <span>{plan.icon}</span>\n                  <span>{plan.name}</span>\n                  <span>${plan.total}</span>\n                </div>\n                <p>{plan.items} Item(s)</p>\n                <div className={styles.progressBar}>\n                  <div className={styles.progress} style={{ width: plan.total > 0 ? `${(plan.spent / plan.total) * 100}%` : \"0%\" }}></div>\n                </div>\n                <p>${plan.spent} Spent | ${plan.total - plan.spent} Remaining</p>\n                <button className={styles.btnEdit} onClick={() => handleEdit(plan)}>Edit</button>\n                <button className={styles.btnDelete} onClick={() => handleDelete(plan._id)}>Delete</button>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default BudgetPlan;\n"]},"metadata":{},"sourceType":"module"}