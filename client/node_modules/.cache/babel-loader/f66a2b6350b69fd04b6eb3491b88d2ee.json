{"ast":null,"code":"var _s = $RefreshSig$();\n\n// frontend (index.jsx)\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./styles.module.css\";\nimport Navigation from \"../NavBar\";\nimport axios from \"axios\";\n\nconst BudgetPlan = () => {\n  _s();\n\n  const [budgets, setBudgets] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\"); // ... (Form and Editing state - no changes needed)\n\n  const apiUrl = \"http://localhost:8080/api\";\n  useEffect(() => {\n    fetchBudgets();\n  }, []);\n\n  const fetchBudgets = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const res = await axios.get(`${apiUrl}/budgetplan`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setBudgets(res.data);\n    } catch (err) {\n      var _err$response, _err$response$data;\n\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message || \"Failed to fetch budgets\"); // More robust error handling\n    }\n  };\n\n  const handleSubmit = async () => {\n    const planName = name; // Rename 'name' to 'planName' to avoid global conflict\n\n    if (!planName || !total) {\n      setError(\"Name and Total are required\");\n      return;\n    }\n\n    try {\n      const token = localStorage.getItem('token');\n      const res = await axios.post(`${apiUrl}/budgetplan`, {\n        name: planName,\n        // Use the renamed variable\n        total: Number(total),\n        spent: Number(spent) || 0,\n        items: Number(items) || 0,\n        icon: icon || \"ðŸ’°\"\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setMessage(\"Budget plan created successfully!\");\n      setName(\"\");\n      setTotal(\"\");\n      setSpent(\"\");\n      setItems(\"\");\n      setIcon(\"\");\n      fetchBudgets();\n      setTimeout(() => setMessage(\"\"), 3000);\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || err.message || \"Failed to create budget\");\n    }\n  };\n\n  const handleDelete = async id => {\n    if (window.confirm(\"Are you sure you want to delete this budget plan?\")) {\n      try {\n        const token = localStorage.getItem('token');\n        await axios.delete(`${apiUrl}/budgetplan/${id}`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        setMessage(\"Budget plan deleted successfully\");\n        fetchBudgets();\n        setTimeout(() => setMessage(\"\"), 3000);\n      } catch (err) {\n        var _err$response3, _err$response3$data;\n\n        setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || err.message || \"Failed to delete budget\");\n      }\n    }\n  };\n\n  const handleUpdate = async () => {\n    const planName = editName; // Rename for consistency\n\n    if (!planName || !editTotal) {\n      setError(\"Name and Total are required\");\n      return;\n    }\n\n    try {\n      const token = localStorage.getItem('token');\n      const res = await axios.put(`${apiUrl}/budgetplan/${editId}`, {\n        name: planName,\n        // Use renamed variable\n        total: Number(editTotal),\n        spent: Number(editSpent) || 0,\n        items: Number(editItems) || 0,\n        icon: editIcon || \"ðŸ’°\"\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setMessage(\"Budget plan updated successfully\");\n      setEditId(null);\n      fetchBudgets();\n      setTimeout(() => setMessage(\"\"), 3000);\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || err.message || \"Failed to update budget\");\n    }\n  }; // ... (rest of the component - no changes needed in JSX)\n\n};\n\n_s(BudgetPlan, \"5LQ7O6zSnx3IwZJ1SQ1g5K8+27E=\");\n\n_c = BudgetPlan;\nexport default BudgetPlan; // backend (your route file, e.g., budget.js) - No changes needed from the previous corrected version.  Make absolutely sure you have the authentication middleware protecting *all* routes, and that you are using the `user_id` to filter in your database queries.  That's the most crucial part.\n\nvar _c;\n\n$RefreshReg$(_c, \"BudgetPlan\");","map":{"version":3,"sources":["C:/Users/Aishwarya/Desktop/PRACTICE/newwexpo/expo - Copy/client/src/components/Budgetplan/index.jsx"],"names":["React","useState","useEffect","styles","Navigation","axios","BudgetPlan","budgets","setBudgets","error","setError","message","setMessage","apiUrl","fetchBudgets","token","localStorage","getItem","res","get","headers","data","err","response","handleSubmit","planName","name","total","post","Number","spent","items","icon","setName","setTotal","setSpent","setItems","setIcon","setTimeout","handleDelete","id","window","confirm","delete","handleUpdate","editName","editTotal","put","editId","editSpent","editItems","editIcon","setEditId"],"mappings":"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","sourcesContent":["// frontend (index.jsx)\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./styles.module.css\";\nimport Navigation from \"../NavBar\";\nimport axios from \"axios\";\n\nconst BudgetPlan = () => {\n  const [budgets, setBudgets] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  // ... (Form and Editing state - no changes needed)\n\n  const apiUrl = \"http://localhost:8080/api\";\n\n  useEffect(() => {\n    fetchBudgets();\n  }, []);\n\n  const fetchBudgets = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const res = await axios.get(`${apiUrl}/budgetplan`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setBudgets(res.data);\n    } catch (err) {\n      setError(err.response?.data?.message || err.message || \"Failed to fetch budgets\"); // More robust error handling\n    }\n  };\n\n  const handleSubmit = async () => {\n    const planName = name; // Rename 'name' to 'planName' to avoid global conflict\n    if (!planName || !total) {\n      setError(\"Name and Total are required\");\n      return;\n    }\n    try {\n      const token = localStorage.getItem('token');\n      const res = await axios.post(`${apiUrl}/budgetplan`, {\n        name: planName, // Use the renamed variable\n        total: Number(total),\n        spent: Number(spent) || 0,\n        items: Number(items) || 0,\n        icon: icon || \"ðŸ’°\",\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      setMessage(\"Budget plan created successfully!\");\n      setName(\"\");\n      setTotal(\"\");\n      setSpent(\"\");\n      setItems(\"\");\n      setIcon(\"\");\n      fetchBudgets();\n      setTimeout(() => setMessage(\"\"), 3000);\n    } catch (err) {\n      setError(err.response?.data?.message || err.message || \"Failed to create budget\");\n    }\n  };\n\n\n  const handleDelete = async (id) => {\n    if (window.confirm(\"Are you sure you want to delete this budget plan?\")) {\n      try {\n        const token = localStorage.getItem('token');\n        await axios.delete(`${apiUrl}/budgetplan/${id}`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        setMessage(\"Budget plan deleted successfully\");\n        fetchBudgets();\n        setTimeout(() => setMessage(\"\"), 3000);\n      } catch (err) {\n        setError(err.response?.data?.message || err.message || \"Failed to delete budget\");\n      }\n    }\n  };\n\n  const handleUpdate = async () => {\n    const planName = editName; // Rename for consistency\n    if (!planName || !editTotal) {\n      setError(\"Name and Total are required\");\n      return;\n    }\n    try {\n      const token = localStorage.getItem('token');\n      const res = await axios.put(`${apiUrl}/budgetplan/${editId}`, {\n        name: planName, // Use renamed variable\n        total: Number(editTotal),\n        spent: Number(editSpent) || 0,\n        items: Number(editItems) || 0,\n        icon: editIcon || \"ðŸ’°\",\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      setMessage(\"Budget plan updated successfully\");\n      setEditId(null);\n      fetchBudgets();\n      setTimeout(() => setMessage(\"\"), 3000);\n    } catch (err) {\n      setError(err.response?.data?.message || err.message || \"Failed to update budget\");\n    }\n  };\n\n  // ... (rest of the component - no changes needed in JSX)\n\n};\n\nexport default BudgetPlan;\n\n\n// backend (your route file, e.g., budget.js) - No changes needed from the previous corrected version.  Make absolutely sure you have the authentication middleware protecting *all* routes, and that you are using the `user_id` to filter in your database queries.  That's the most crucial part."]},"metadata":{},"sourceType":"module"}