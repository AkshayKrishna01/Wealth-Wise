{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./styles.module.css\"; // If you are not using any styles in this component, you should remove the import\n\nimport Navigation from \"../NavBar\"; // If you are not using the Navigation component, you should remove the import\n\nimport axios from \"axios\";\n\nconst BudgetPlan = () => {\n  _s();\n\n  const [budgets, setBudgets] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\"); // ... (Form and Editing state - no changes needed)\n  // ... (apiUrl - no changes needed)\n\n  useEffect(() => {\n    fetchBudgets();\n  }, []);\n\n  const fetchBudgets = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const res = await axios.get(`${apiUrl}/budgetplan`, {\n        // Use res if you need to access response details\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setBudgets(res.data);\n    } catch (err) {\n      var _err$response, _err$response$data;\n\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message || \"Failed to fetch budgets\");\n    }\n  };\n\n  const handleSubmit = async () => {\n    const planName = name;\n\n    if (!planName || !total) {\n      setError(\"Name and Total are required\");\n      return;\n    }\n\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post(`${apiUrl}/budgetplan`, {\n        // No need to store the result in 'res' if not used\n        name: planName,\n        total: Number(total),\n        spent: Number(spent) || 0,\n        items: Number(items) || 0,\n        icon: icon || \"ðŸ’°\"\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setMessage(\"Budget plan created successfully!\");\n      setName(\"\");\n      setTotal(\"\");\n      setSpent(\"\");\n      setItems(\"\");\n      setIcon(\"\");\n      fetchBudgets();\n      setTimeout(() => setMessage(\"\"), 3000);\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || err.message || \"Failed to create budget\");\n    }\n  };\n\n  const handleDelete = async id => {\n    if (window.confirm(\"Are you sure you want to delete this budget plan?\")) {\n      try {\n        const token = localStorage.getItem('token');\n        await axios.delete(`${apiUrl}/budgetplan/${id}`, {\n          // No need to store the result in 'res' if not used\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        setMessage(\"Budget plan deleted successfully\");\n        fetchBudgets();\n        setTimeout(() => setMessage(\"\"), 3000);\n      } catch (err) {\n        var _err$response3, _err$response3$data;\n\n        setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || err.message || \"Failed to delete budget\");\n      }\n    }\n  };\n\n  const handleUpdate = async () => {\n    const planName = editName;\n\n    if (!planName || !editTotal) {\n      setError(\"Name and Total are required\");\n      return;\n    }\n\n    try {\n      const token = localStorage.getItem('token');\n      await axios.put(`${apiUrl}/budgetplan/${editId}`, {\n        // No need to store the result in 'res' if not used\n        name: planName,\n        total: Number(editTotal),\n        spent: Number(editSpent) || 0,\n        items: Number(editItems) || 0,\n        icon: editIcon || \"ðŸ’°\"\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setMessage(\"Budget plan updated successfully\");\n      setEditId(null);\n      fetchBudgets();\n      setTimeout(() => setMessage(\"\"), 3000);\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || err.message || \"Failed to update budget\");\n    }\n  }; // ... (rest of the component - no changes needed in JSX)\n\n};\n\n_s(BudgetPlan, \"5LQ7O6zSnx3IwZJ1SQ1g5K8+27E=\");\n\n_c = BudgetPlan;\nexport default BudgetPlan;\n\nvar _c;\n\n$RefreshReg$(_c, \"BudgetPlan\");","map":{"version":3,"sources":["C:/Users/Aishwarya/Desktop/PRACTICE/newwexpo/expo - Copy/client/src/components/Budgetplan/index.jsx"],"names":["React","useState","useEffect","styles","Navigation","axios","BudgetPlan","budgets","setBudgets","error","setError","message","setMessage","fetchBudgets","token","localStorage","getItem","res","get","apiUrl","headers","data","err","response","handleSubmit","planName","name","total","post","Number","spent","items","icon","setName","setTotal","setSpent","setItems","setIcon","setTimeout","handleDelete","id","window","confirm","delete","handleUpdate","editName","editTotal","put","editId","editSpent","editItems","editIcon","setEditId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styles from \"./styles.module.css\";  // If you are not using any styles in this component, you should remove the import\nimport Navigation from \"../NavBar\"; // If you are not using the Navigation component, you should remove the import\nimport axios from \"axios\";\n\nconst BudgetPlan = () => {\n  const [budgets, setBudgets] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  // ... (Form and Editing state - no changes needed)\n\n  // ... (apiUrl - no changes needed)\n\n  useEffect(() => {\n    fetchBudgets();\n  }, []);\n\n  const fetchBudgets = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const res = await axios.get(`${apiUrl}/budgetplan`, { // Use res if you need to access response details\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setBudgets(res.data);\n    } catch (err) {\n      setError(err.response?.data?.message || err.message || \"Failed to fetch budgets\");\n    }\n  };\n\n  const handleSubmit = async () => {\n    const planName = name;\n    if (!planName || !total) {\n      setError(\"Name and Total are required\");\n      return;\n    }\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post(`${apiUrl}/budgetplan`, { // No need to store the result in 'res' if not used\n        name: planName,\n        total: Number(total),\n        spent: Number(spent) || 0,\n        items: Number(items) || 0,\n        icon: icon || \"ðŸ’°\",\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      setMessage(\"Budget plan created successfully!\");\n      setName(\"\");\n      setTotal(\"\");\n      setSpent(\"\");\n      setItems(\"\");\n      setIcon(\"\");\n      fetchBudgets();\n      setTimeout(() => setMessage(\"\"), 3000);\n    } catch (err) {\n      setError(err.response?.data?.message || err.message || \"Failed to create budget\");\n    }\n  };\n\n  const handleDelete = async (id) => {\n    if (window.confirm(\"Are you sure you want to delete this budget plan?\")) {\n      try {\n        const token = localStorage.getItem('token');\n        await axios.delete(`${apiUrl}/budgetplan/${id}`, { // No need to store the result in 'res' if not used\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        setMessage(\"Budget plan deleted successfully\");\n        fetchBudgets();\n        setTimeout(() => setMessage(\"\"), 3000);\n      } catch (err) {\n        setError(err.response?.data?.message || err.message || \"Failed to delete budget\");\n      }\n    }\n  };\n\n  const handleUpdate = async () => {\n      const planName = editName;\n      if (!planName || !editTotal) {\n        setError(\"Name and Total are required\");\n        return;\n      }\n      try {\n        const token = localStorage.getItem('token');\n        await axios.put(`${apiUrl}/budgetplan/${editId}`, { // No need to store the result in 'res' if not used\n          name: planName,\n          total: Number(editTotal),\n          spent: Number(editSpent) || 0,\n          items: Number(editItems) || 0,\n          icon: editIcon || \"ðŸ’°\",\n        }, {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n\n        setMessage(\"Budget plan updated successfully\");\n        setEditId(null);\n        fetchBudgets();\n        setTimeout(() => setMessage(\"\"), 3000);\n      } catch (err) {\n        setError(err.response?.data?.message || err.message || \"Failed to update budget\");\n      }\n    };\n\n\n  // ... (rest of the component - no changes needed in JSX)\n\n};\n\nexport default BudgetPlan;"]},"metadata":{},"sourceType":"module"}