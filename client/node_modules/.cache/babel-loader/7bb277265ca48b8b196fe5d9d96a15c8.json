{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aishwarya\\\\Desktop\\\\PRACTICE\\\\expo\\\\client\\\\src\\\\components\\\\Income\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport \"./in.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Income() {\n  _s();\n\n  const [IncomeSource, setIncomeSource] = useState(\"\");\n  const [Amount, setAmount] = useState(\"\");\n  const [reference, setReference] = useState(\"\");\n  const [incomes, setIncomes] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [editId, setEditId] = useState(null);\n  const [editIncomeSource, setEditIncomeSource] = useState(\"\");\n  const [editAmount, setEditAmount] = useState(\"\");\n  const [editReference, setEditReference] = useState(\"\");\n  const apiUrl = \"http://localhost:8080\";\n\n  const handleSubmit = async () => {\n    setError(\"\");\n\n    if (IncomeSource.trim() && Amount.trim()) {\n      try {\n        const res = await fetch(apiUrl + \"/incomeAdd\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            IncomeSource,\n            Amount,\n            reference\n          })\n        });\n        const newIncome = await res.json();\n        setIncomes([...incomes, newIncome]);\n        setMessage(\"Income added successfully\");\n        setIncomeSource(\"\");\n        setAmount(\"\");\n        setReference(\"\");\n        setTimeout(() => setMessage(\"\"), 3000);\n      } catch {\n        setError(\"Unable to create income entry\");\n      }\n    }\n  };\n\n  useEffect(() => {\n    getItems();\n  }, []);\n\n  const getItems = async () => {\n    try {\n      const res = await fetch(apiUrl + \"/incomeAdd\");\n      const data = await res.json();\n      setIncomes(data);\n    } catch {\n      setError(\"Unable to fetch income data\");\n    }\n  };\n\n  const handleDelete = async id => {\n    if (window.confirm(\"Are you sure you want to delete this?\")) {\n      try {\n        await fetch(apiUrl + \"/incomeAdd/\" + id, {\n          method: \"DELETE\"\n        });\n        setIncomes(incomes.filter(item => item._id !== id));\n      } catch {\n        setError(\"Unable to delete income entry\");\n      }\n    }\n  };\n\n  const handleEdit = item => {\n    setEditId(item._id);\n    setEditIncomeSource(item.IncomeSource);\n    setEditAmount(item.Amount);\n    setEditReference(item.reference);\n  };\n\n  const handleUpdate = async () => {\n    setError(\"\");\n\n    try {\n      const res = await fetch(apiUrl + \"/incomeAdd/\" + editId, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          IncomeSource: editIncomeSource,\n          Amount: editAmount,\n          reference: editReference\n        })\n      });\n      const updatedIncome = await res.json();\n      setIncomes(incomes.map(item => item._id === editId ? updatedIncome : item));\n      setMessage(\"Income updated successfully\");\n      setTimeout(() => setMessage(\"\"), 3000);\n      setEditId(null);\n    } catch {\n      setError(\"Unable to update income entry\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add Income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-success\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Income Source\",\n          value: IncomeSource,\n          onChange: e => setIncomeSource(e.target.value),\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Amount\",\n          value: Amount,\n          onChange: e => setAmount(e.target.value),\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Reference (optional)\",\n          value: reference,\n          onChange: e => setReference(e.target.value),\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-dark\",\n          onClick: handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Income List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group\",\n          children: incomes.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item d-flex justify-content-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [item.IncomeSource, \" - \", item.Amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-warning\",\n                onClick: () => handleEdit(item),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: () => handleDelete(item._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this)]\n          }, item._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Income, \"hFG+uySFXBj7Jh/cRMnX7XshDO0=\");\n\n_c = Income;\n\nvar _c;\n\n$RefreshReg$(_c, \"Income\");","map":{"version":3,"sources":["C:/Users/Aishwarya/Desktop/PRACTICE/expo/client/src/components/Income/index.jsx"],"names":["useEffect","useState","Income","IncomeSource","setIncomeSource","Amount","setAmount","reference","setReference","incomes","setIncomes","error","setError","message","setMessage","editId","setEditId","editIncomeSource","setEditIncomeSource","editAmount","setEditAmount","editReference","setEditReference","apiUrl","handleSubmit","trim","res","fetch","method","headers","body","JSON","stringify","newIncome","json","setTimeout","getItems","data","handleDelete","id","window","confirm","filter","item","_id","handleEdit","handleUpdate","updatedIncome","map","e","target","value"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./in.css\";\n\nexport default function Income() {\n    const [IncomeSource, setIncomeSource] = useState(\"\");\n    const [Amount, setAmount] = useState(\"\");\n    const [reference, setReference] = useState(\"\");\n    const [incomes, setIncomes] = useState([]);\n    const [error, setError] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    const [editId, setEditId] = useState(null);\n    const [editIncomeSource, setEditIncomeSource] = useState(\"\");\n    const [editAmount, setEditAmount] = useState(\"\");\n    const [editReference, setEditReference] = useState(\"\");\n\n    const apiUrl = \"http://localhost:8080\";\n\n    const handleSubmit = async () => {\n        setError(\"\");\n        if (IncomeSource.trim() && Amount.trim()) {\n            try {\n                const res = await fetch(apiUrl + \"/incomeAdd\", {\n                    method: \"POST\",\n                    headers: { \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify({ IncomeSource, Amount, reference })\n                });\n                const newIncome = await res.json();\n                setIncomes([...incomes, newIncome]);\n                setMessage(\"Income added successfully\");\n                setIncomeSource(\"\");\n                setAmount(\"\");\n                setReference(\"\");\n                setTimeout(() => setMessage(\"\"), 3000);\n            } catch {\n                setError(\"Unable to create income entry\");\n            }\n        }\n    };\n\n    useEffect(() => {\n        getItems();\n    }, []);\n\n    const getItems = async () => {\n        try {\n            const res = await fetch(apiUrl + \"/incomeAdd\");\n            const data = await res.json();\n            setIncomes(data);\n        } catch {\n            setError(\"Unable to fetch income data\");\n        }\n    };\n\n    const handleDelete = async (id) => {\n        if (window.confirm(\"Are you sure you want to delete this?\")) {\n            try {\n                await fetch(apiUrl + \"/incomeAdd/\" + id, { method: \"DELETE\" });\n                setIncomes(incomes.filter((item) => item._id !== id));\n            } catch {\n                setError(\"Unable to delete income entry\");\n            }\n        }\n    };\n\n    const handleEdit = (item) => {\n        setEditId(item._id);\n        setEditIncomeSource(item.IncomeSource);\n        setEditAmount(item.Amount);\n        setEditReference(item.reference);\n    };\n\n    const handleUpdate = async () => {\n        setError(\"\");\n        try {\n            const res = await fetch(apiUrl + \"/incomeAdd/\" + editId, {\n                method: \"PUT\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ IncomeSource: editIncomeSource, Amount: editAmount, reference: editReference })\n            });\n            const updatedIncome = await res.json();\n            setIncomes(incomes.map((item) => (item._id === editId ? updatedIncome : item)));\n            setMessage(\"Income updated successfully\");\n            setTimeout(() => setMessage(\"\"), 3000);\n            setEditId(null);\n        } catch {\n            setError(\"Unable to update income entry\");\n        }\n    };\n\n    return (\n        <div>\n            <div className=\"container\">\n                <div className=\"form-container\">\n                    <h3>Add Income</h3>\n                    {message && <p className=\"text-success\">{message}</p>}\n                    <input placeholder=\"Income Source\" value={IncomeSource} onChange={(e) => setIncomeSource(e.target.value)} className=\"form-control\" />\n                    <input placeholder=\"Amount\" value={Amount} onChange={(e) => setAmount(e.target.value)} className=\"form-control\" />\n                    <input placeholder=\"Reference (optional)\" value={reference} onChange={(e) => setReference(e.target.value)} className=\"form-control\" />\n                    <button className=\"btn btn-dark\" onClick={handleSubmit}>Submit</button>\n                    {error && <p className=\"text-danger\">{error}</p>}\n                </div>\n\n                <div className=\"list-container\">\n                    <h3>Income List</h3>\n                    <ul className=\"list-group\">\n                        {incomes.map((item) => (\n                            <li key={item._id} className=\"list-group-item d-flex justify-content-between\">\n                                <span>{item.IncomeSource} - {item.Amount}</span>\n                                <div>\n                                    <button className=\"btn btn-warning\" onClick={() => handleEdit(item)}>Edit</button>\n                                    <button className=\"btn btn-danger\" onClick={() => handleDelete(item._id)}>Delete</button>\n                                </div>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}