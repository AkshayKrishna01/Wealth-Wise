{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aishwarya\\\\Desktop\\\\PRACTICE\\\\newwexpo\\\\expo - Copy\\\\client\\\\src\\\\components\\\\Bargraph\\\\bargraph.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport styles from \"./style.module.css\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\"; // Register necessary ChartJS components for a Bar chart\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nexport default function BudgetBarChart() {\n  _s();\n\n  const [budgets, setBudgets] = useState([]);\n  const [error, setError] = useState(\"\"); // API base URL\n\n  const apiUrl = \"http://localhost:8080/api\";\n\n  const getAuthHeaders = () => {\n    const token = localStorage.getItem(\"token\");\n    return {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    };\n  };\n\n  useEffect(() => {\n    fetchBudgets();\n  }, []);\n\n  const fetchBudgets = async () => {\n    try {\n      const res = await fetch(`${apiUrl}/budgetplan`, {\n        headers: getAuthHeaders()\n      });\n\n      if (!res.ok) {\n        throw new Error(\"Failed to fetch budget data\");\n      }\n\n      const data = await res.json();\n      setBudgets(data);\n    } catch (err) {\n      setError(err.message);\n    }\n  }; // Define all possible budget categories (source names)\n\n\n  const possibleCategories = [\"transportation\", \"utilities\", \"entertainment\", \"shopping\", \"groceries\", \"other\"]; // Always show these as x-axis labels\n\n  const labels = possibleCategories; // For each category, if a matching budget exists, use its spent and remaining values; otherwise, use 0\n\n  const spentData = possibleCategories.map(category => {\n    const budget = budgets.find(b => b.name.toLowerCase() === category.toLowerCase());\n    return budget ? budget.spent : 0;\n  });\n  const remainingData = possibleCategories.map(category => {\n    const budget = budgets.find(b => b.name.toLowerCase() === category.toLowerCase());\n    return budget ? budget.total - budget.spent : 0;\n  });\n  const chartData = {\n    labels,\n    datasets: [{\n      label: \"Spent\",\n      data: spentData,\n      backgroundColor: \"#ffcc00\",\n      // darker yellow for spending\n      borderColor: \"#e6a800\",\n      borderWidth: 1,\n      stack: \"stack1\"\n    }, {\n      label: \"Remaining Budget\",\n      data: remainingData,\n      backgroundColor: \"#ffeb99\",\n      // lighter yellow for remaining\n      borderColor: \"#ffcc00\",\n      borderWidth: 1,\n      stack: \"stack1\"\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    // allow custom height\n    plugins: {\n      title: {\n        display: true,\n        text: \"Budget vs Spending Chart\"\n      },\n      tooltip: {\n        enabled: true\n      },\n      legend: {\n        position: \"top\"\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        stacked: true\n      },\n      x: {\n        stacked: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.chartContainer,\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.error_msg,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"400px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: chartOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BudgetBarChart, \"yfPInYXAidNeufkHbzV4Bm1X/Tg=\");\n\n_c = BudgetBarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BudgetBarChart\");","map":{"version":3,"sources":["C:/Users/Aishwarya/Desktop/PRACTICE/newwexpo/expo - Copy/client/src/components/Bargraph/bargraph.js"],"names":["useState","useEffect","styles","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","register","BudgetBarChart","budgets","setBudgets","error","setError","apiUrl","getAuthHeaders","token","localStorage","getItem","fetchBudgets","res","fetch","headers","ok","Error","data","json","err","message","possibleCategories","labels","spentData","map","category","budget","find","b","name","toLowerCase","spent","remainingData","total","chartData","datasets","label","backgroundColor","borderColor","borderWidth","stack","chartOptions","responsive","maintainAspectRatio","plugins","title","display","text","tooltip","enabled","legend","position","scales","y","beginAtZero","stacked","x","chartContainer","error_msg","height"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport styles from \"./style.module.css\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\n\r\n// Register necessary ChartJS components for a Bar chart\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nexport default function BudgetBarChart() {\r\n  const [budgets, setBudgets] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // API base URL\r\n  const apiUrl = \"http://localhost:8080/api\";\r\n\r\n  const getAuthHeaders = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    return {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Authorization\": `Bearer ${token}`,\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchBudgets();\r\n  }, []);\r\n\r\n  const fetchBudgets = async () => {\r\n    try {\r\n      const res = await fetch(`${apiUrl}/budgetplan`, {\r\n        headers: getAuthHeaders(),\r\n      });\r\n      if (!res.ok) {\r\n        throw new Error(\"Failed to fetch budget data\");\r\n      }\r\n      const data = await res.json();\r\n      setBudgets(data);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  // Define all possible budget categories (source names)\r\n  const possibleCategories = [\"transportation\", \"utilities\", \"entertainment\", \"shopping\", \"groceries\", \"other\"];\r\n\r\n  // Always show these as x-axis labels\r\n  const labels = possibleCategories;\r\n\r\n  // For each category, if a matching budget exists, use its spent and remaining values; otherwise, use 0\r\n  const spentData = possibleCategories.map((category) => {\r\n    const budget = budgets.find(\r\n      (b) => b.name.toLowerCase() === category.toLowerCase()\r\n    );\r\n    return budget ? budget.spent : 0;\r\n  });\r\n\r\n  const remainingData = possibleCategories.map((category) => {\r\n    const budget = budgets.find(\r\n      (b) => b.name.toLowerCase() === category.toLowerCase()\r\n    );\r\n    return budget ? (budget.total - budget.spent) : 0;\r\n  });\r\n\r\n  const chartData = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: \"Spent\",\r\n        data: spentData,\r\n        backgroundColor: \"#ffcc00\", // darker yellow for spending\r\n        borderColor: \"#e6a800\",\r\n        borderWidth: 1,\r\n        stack: \"stack1\",\r\n      },\r\n      {\r\n        label: \"Remaining Budget\",\r\n        data: remainingData,\r\n        backgroundColor: \"#ffeb99\", // lighter yellow for remaining\r\n        borderColor: \"#ffcc00\",\r\n        borderWidth: 1,\r\n        stack: \"stack1\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false, // allow custom height\r\n    plugins: {\r\n      title: {\r\n        display: true,\r\n        text: \"Budget vs Spending Chart\",\r\n      },\r\n      tooltip: {\r\n        enabled: true,\r\n      },\r\n      legend: {\r\n        position: \"top\",\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        stacked: true,\r\n      },\r\n      x: {\r\n        stacked: true,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className={styles.chartContainer}>\r\n      {error && <p className={styles.error_msg}>{error}</p>}\r\n      {/* Wrap the Bar chart in a div with a fixed height */}\r\n      <div style={{ height: \"400px\" }}>\r\n        <Bar data={chartData} options={chartOptions} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}