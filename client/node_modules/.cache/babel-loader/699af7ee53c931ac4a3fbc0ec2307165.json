{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aishwarya\\\\Desktop\\\\PRACTICE\\\\newwexpo\\\\expo - Copy\\\\client\\\\src\\\\components\\\\Bargraph\\\\bargraph.js\",\n    _s = $RefreshSig$();\n\n// ExpenseCategoryChart.jsx\nimport { useState, useEffect } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\"; // Register necessary Chart.js components\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nexport default function ExpenseCategoryChart() {\n  _s();\n\n  const [expenses, setExpenses] = useState([]);\n  const [error, setError] = useState(\"\"); // Backend API URL (assuming your expense routes are mounted at /api/expense)\n\n  const apiUrl = \"http://localhost:8080/api\";\n  useEffect(() => {\n    fetchExpenses();\n  }, []);\n\n  const fetchExpenses = async () => {\n    try {\n      const res = await fetch(`${apiUrl}/expense`);\n\n      if (!res.ok) {\n        throw new Error(\"Failed to fetch expenses\");\n      }\n\n      const data = await res.json();\n      setExpenses(data);\n    } catch (err) {\n      console.error(\"Error fetching expenses:\", err);\n      setError(err.message || \"Failed to fetch expenses\");\n    }\n  }; // Define the expense categories (i.e. plan names)\n\n\n  const categories = [\"transportation\", \"entertainment\", \"utilities\", \"shopping\", \"groceries\", \"other\"]; // For each category, sum the spending (expense.amount) of matching expense entries\n\n  const categorySpending = categories.map(category => {\n    return expenses.filter(exp => exp.expense === category).reduce((sum, exp) => sum + exp.amount, 0);\n  });\n  const chartData = {\n    labels: categories.map(cat => cat.charAt(0).toUpperCase() + cat.slice(1)),\n    datasets: [{\n      label: \"Spending by Category\",\n      data: categorySpending,\n      backgroundColor: \"rgba(75,192,192,0.6)\",\n      borderColor: \"rgba(75,192,192,1)\",\n      borderWidth: 1\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      title: {\n        display: true,\n        text: \"Spending by Expense Category\"\n      },\n      legend: {\n        position: \"top\"\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExpenseCategoryChart, \"Sh9M8s/WlxvERYptKn198liF/BM=\");\n\n_c = ExpenseCategoryChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseCategoryChart\");","map":{"version":3,"sources":["C:/Users/Aishwarya/Desktop/PRACTICE/newwexpo/expo - Copy/client/src/components/Bargraph/bargraph.js"],"names":["useState","useEffect","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","register","ExpenseCategoryChart","expenses","setExpenses","error","setError","apiUrl","fetchExpenses","res","fetch","ok","Error","data","json","err","console","message","categories","categorySpending","map","category","filter","exp","expense","reduce","sum","amount","chartData","labels","cat","charAt","toUpperCase","slice","datasets","label","backgroundColor","borderColor","borderWidth","chartOptions","responsive","plugins","title","display","text","legend","position","scales","y","beginAtZero"],"mappings":"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","sourcesContent":["// ExpenseCategoryChart.jsx\r\nimport { useState, useEffect } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\n\r\n// Register necessary Chart.js components\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nexport default function ExpenseCategoryChart() {\r\n  const [expenses, setExpenses] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  // Backend API URL (assuming your expense routes are mounted at /api/expense)\r\n  const apiUrl = \"http://localhost:8080/api\";\r\n\r\n  useEffect(() => {\r\n    fetchExpenses();\r\n  }, []);\r\n\r\n  const fetchExpenses = async () => {\r\n    try {\r\n      const res = await fetch(`${apiUrl}/expense`);\r\n      if (!res.ok) {\r\n        throw new Error(\"Failed to fetch expenses\");\r\n      }\r\n      const data = await res.json();\r\n      setExpenses(data);\r\n    } catch (err) {\r\n      console.error(\"Error fetching expenses:\", err);\r\n      setError(err.message || \"Failed to fetch expenses\");\r\n    }\r\n  };\r\n\r\n  // Define the expense categories (i.e. plan names)\r\n  const categories = [\r\n    \"transportation\",\r\n    \"entertainment\",\r\n    \"utilities\",\r\n    \"shopping\",\r\n    \"groceries\",\r\n    \"other\",\r\n  ];\r\n\r\n  // For each category, sum the spending (expense.amount) of matching expense entries\r\n  const categorySpending = categories.map((category) => {\r\n    return expenses\r\n      .filter((exp) => exp.expense === category)\r\n      .reduce((sum, exp) => sum + exp.amount, 0);\r\n  });\r\n\r\n  const chartData = {\r\n    labels: categories.map(\r\n      (cat) => cat.charAt(0).toUpperCase() + cat.slice(1)\r\n    ),\r\n    datasets: [\r\n      {\r\n        label: \"Spending by Category\",\r\n        data: categorySpending,\r\n        backgroundColor: \"rgba(75,192,192,0.6)\",\r\n        borderColor: \"rgba(75,192,192,1)\",\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      title: {\r\n        display: true,\r\n        text: \"Spending by Expense Category\",\r\n      },\r\n      legend: { position: \"top\" },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {error && <p>{error}</p>}\r\n      <Bar data={chartData} options={chartOptions} />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}