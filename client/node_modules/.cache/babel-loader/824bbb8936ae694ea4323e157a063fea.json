{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aishwarya\\\\Desktop\\\\PRACTICE\\\\newwexpo\\\\expo - Copy\\\\client\\\\src\\\\components\\\\Budgetplan\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./styles.module.css\";\nimport Navigation from \"../NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BudgetPlan = () => {\n  _s();\n\n  const [budgets, setBudgets] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false); // Form state for creating a new budget plan\n\n  const [name, setName] = useState(\"\");\n  const [total, setTotal] = useState(\"\");\n  const [spent, setSpent] = useState(\"\");\n  const [items, setItems] = useState(\"\");\n  const [icon, setIcon] = useState(\"\"); // Edit state\n\n  const [editId, setEditId] = useState(null);\n  const [editName, setEditName] = useState(\"\");\n  const [editTotal, setEditTotal] = useState(\"\");\n  const [editSpent, setEditSpent] = useState(\"\");\n  const [editItems, setEditItems] = useState(\"\");\n  const [editIcon, setEditIcon] = useState(\"\");\n  const apiUrl = \"http://localhost:8080/api\"; // Helper to get the auth token from localStorage\n\n  const getAuthHeaders = () => {\n    const token = localStorage.getItem(\"token\");\n    return {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    };\n  }; // Fetch all budget plans\n\n\n  useEffect(() => {\n    fetchBudgets();\n  }, []);\n\n  const fetchBudgets = async () => {\n    setLoading(true);\n\n    try {\n      const res = await fetch(`${apiUrl}/budgetplan`, {\n        headers: getAuthHeaders()\n      });\n\n      if (!res.ok) {\n        if (res.status === 401) {\n          // Redirect to login if token is invalid\n          window.location.href = \"/login\";\n        }\n\n        throw new Error(\"Failed to fetch budget plans\");\n      }\n\n      const data = await res.json();\n      setBudgets(data);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }; // Create a new budget plan\n\n\n  const handleSubmit = async () => {\n    if (!name || !total) {\n      setError(\"Name and Total are required\");\n      return;\n    }\n\n    if (Number(total) < 0 || Number(spent) < 0 || Number(items) < 0) {\n      setError(\"Values cannot be negative\");\n      return;\n    }\n\n    try {\n      const res = await fetch(`${apiUrl}/budgetplan`, {\n        method: \"POST\",\n        headers: getAuthHeaders(),\n        body: JSON.stringify({\n          name,\n          total: Number(total),\n          spent: Number(spent) || 0,\n          items: Number(items) || 0,\n          icon: icon || \"ðŸ’°\"\n        })\n      });\n      if (!res.ok) throw new Error(\"Failed to create budget plan\");\n      setMessage(\"Budget plan created successfully!\"); // Clear form fields\n\n      setName(\"\");\n      setTotal(\"\");\n      setSpent(\"\");\n      setItems(\"\");\n      setIcon(\"\");\n      fetchBudgets();\n      setTimeout(() => setMessage(\"\"), 3000);\n    } catch (err) {\n      setError(err.message);\n    }\n  }; // Delete a budget plan\n\n\n  const handleDelete = async id => {\n    if (window.confirm(\"Are you sure you want to delete this budget plan?\")) {\n      try {\n        const res = await fetch(`${apiUrl}/budgetplan/${id}`, {\n          method: \"DELETE\",\n          headers: getAuthHeaders()\n        });\n        if (!res.ok) throw new Error(\"Failed to delete budget plan\");\n        setMessage(\"Budget plan deleted successfully\");\n        fetchBudgets();\n        setTimeout(() => setMessage(\"\"), 3000);\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }; // Edit a budget plan\n\n\n  const handleEdit = plan => {\n    setEditId(plan._id);\n    setEditName(plan.name);\n    setEditTotal(plan.total);\n    setEditSpent(plan.spent);\n    setEditItems(plan.items);\n    setEditIcon(plan.icon);\n  }; // Update a budget plan\n\n\n  const handleUpdate = async () => {\n    if (!editName || !editTotal) {\n      setError(\"Name and Total are required\");\n      return;\n    }\n\n    if (Number(editTotal) < 0 || Number(editSpent) < 0 || Number(editItems) < 0) {\n      setError(\"Values cannot be negative\");\n      return;\n    }\n\n    try {\n      const res = await fetch(`${apiUrl}/budgetplan/${editId}`, {\n        method: \"PUT\",\n        headers: getAuthHeaders(),\n        body: JSON.stringify({\n          name: editName,\n          total: Number(editTotal),\n          spent: Number(editSpent) || 0,\n          items: Number(editItems) || 0,\n          icon: editIcon || \"ðŸ’°\"\n        })\n      });\n      if (!res.ok) throw new Error(\"Failed to update budget plan\");\n      setMessage(\"Budget plan updated successfully\");\n      fetchBudgets();\n      setTimeout(() => setMessage(\"\"), 3000);\n      setEditId(null); // Reset edit form\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.title,\n        children: \"Budget Plans\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.message,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.error,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: total,\n            onChange: e => setTotal(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Spent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: spent,\n            onChange: e => setSpent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: items,\n            onChange: e => setItems(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: icon,\n            onChange: e => setIcon(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleSubmit,\n          disabled: loading,\n          children: loading ? \"Creating...\" : \"Create Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this) : budgets.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No budget plans found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles.list,\n        children: budgets.map(plan => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: styles.listItem,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: plan.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 17\n          }, this), \" - \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"$\", plan.total]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 44\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEdit(plan),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(plan._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this)]\n        }, plan._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this), editId && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.editForm,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Edit Budget Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: editName,\n          onChange: e => setEditName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: editTotal,\n          onChange: e => setEditTotal(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpdate,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditId(null),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BudgetPlan, \"yaa/72s0ukd1Bk9oGcnjYLAToeA=\");\n\n_c = BudgetPlan;\nexport default BudgetPlan;\n\nvar _c;\n\n$RefreshReg$(_c, \"BudgetPlan\");","map":{"version":3,"sources":["C:/Users/Aishwarya/Desktop/PRACTICE/newwexpo/expo - Copy/client/src/components/Budgetplan/index.jsx"],"names":["React","useState","useEffect","styles","Navigation","BudgetPlan","budgets","setBudgets","error","setError","message","setMessage","loading","setLoading","name","setName","total","setTotal","spent","setSpent","items","setItems","icon","setIcon","editId","setEditId","editName","setEditName","editTotal","setEditTotal","editSpent","setEditSpent","editItems","setEditItems","editIcon","setEditIcon","apiUrl","getAuthHeaders","token","localStorage","getItem","Authorization","fetchBudgets","res","fetch","headers","ok","status","window","location","href","Error","data","json","err","handleSubmit","Number","method","body","JSON","stringify","setTimeout","handleDelete","id","confirm","handleEdit","plan","_id","handleUpdate","wrapper","container","title","form","formGroup","e","target","value","length","list","map","listItem","editForm"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styles from \"./styles.module.css\";\nimport Navigation from \"../NavBar\";\n\nconst BudgetPlan = () => {\n  const [budgets, setBudgets] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  // Form state for creating a new budget plan\n  const [name, setName] = useState(\"\");\n  const [total, setTotal] = useState(\"\");\n  const [spent, setSpent] = useState(\"\");\n  const [items, setItems] = useState(\"\");\n  const [icon, setIcon] = useState(\"\");\n\n  // Edit state\n  const [editId, setEditId] = useState(null);\n  const [editName, setEditName] = useState(\"\");\n  const [editTotal, setEditTotal] = useState(\"\");\n  const [editSpent, setEditSpent] = useState(\"\");\n  const [editItems, setEditItems] = useState(\"\");\n  const [editIcon, setEditIcon] = useState(\"\");\n\n  const apiUrl = \"http://localhost:8080/api\";\n\n  // Helper to get the auth token from localStorage\n  const getAuthHeaders = () => {\n    const token = localStorage.getItem(\"token\");\n    return {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    };\n  };\n\n  // Fetch all budget plans\n  useEffect(() => {\n    fetchBudgets();\n  }, []);\n\n  const fetchBudgets = async () => {\n    setLoading(true);\n    try {\n      const res = await fetch(`${apiUrl}/budgetplan`, {\n        headers: getAuthHeaders(),\n      });\n      if (!res.ok) {\n        if (res.status === 401) {\n          // Redirect to login if token is invalid\n          window.location.href = \"/login\";\n        }\n        throw new Error(\"Failed to fetch budget plans\");\n      }\n      const data = await res.json();\n      setBudgets(data);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Create a new budget plan\n  const handleSubmit = async () => {\n    if (!name || !total) {\n      setError(\"Name and Total are required\");\n      return;\n    }\n    if (Number(total) < 0 || Number(spent) < 0 || Number(items) < 0) {\n      setError(\"Values cannot be negative\");\n      return;\n    }\n    try {\n      const res = await fetch(`${apiUrl}/budgetplan`, {\n        method: \"POST\",\n        headers: getAuthHeaders(),\n        body: JSON.stringify({\n          name,\n          total: Number(total),\n          spent: Number(spent) || 0,\n          items: Number(items) || 0,\n          icon: icon || \"ðŸ’°\",\n        }),\n      });\n      if (!res.ok) throw new Error(\"Failed to create budget plan\");\n      setMessage(\"Budget plan created successfully!\");\n      // Clear form fields\n      setName(\"\");\n      setTotal(\"\");\n      setSpent(\"\");\n      setItems(\"\");\n      setIcon(\"\");\n      fetchBudgets();\n      setTimeout(() => setMessage(\"\"), 3000);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Delete a budget plan\n  const handleDelete = async (id) => {\n    if (window.confirm(\"Are you sure you want to delete this budget plan?\")) {\n      try {\n        const res = await fetch(`${apiUrl}/budgetplan/${id}`, {\n          method: \"DELETE\",\n          headers: getAuthHeaders(),\n        });\n        if (!res.ok) throw new Error(\"Failed to delete budget plan\");\n        setMessage(\"Budget plan deleted successfully\");\n        fetchBudgets();\n        setTimeout(() => setMessage(\"\"), 3000);\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  };\n\n  // Edit a budget plan\n  const handleEdit = (plan) => {\n    setEditId(plan._id);\n    setEditName(plan.name);\n    setEditTotal(plan.total);\n    setEditSpent(plan.spent);\n    setEditItems(plan.items);\n    setEditIcon(plan.icon);\n  };\n\n  // Update a budget plan\n  const handleUpdate = async () => {\n    if (!editName || !editTotal) {\n      setError(\"Name and Total are required\");\n      return;\n    }\n    if (Number(editTotal) < 0 || Number(editSpent) < 0 || Number(editItems) < 0) {\n      setError(\"Values cannot be negative\");\n      return;\n    }\n    try {\n      const res = await fetch(`${apiUrl}/budgetplan/${editId}`, {\n        method: \"PUT\",\n        headers: getAuthHeaders(),\n        body: JSON.stringify({\n          name: editName,\n          total: Number(editTotal),\n          spent: Number(editSpent) || 0,\n          items: Number(editItems) || 0,\n          icon: editIcon || \"ðŸ’°\",\n        }),\n      });\n      if (!res.ok) throw new Error(\"Failed to update budget plan\");\n      setMessage(\"Budget plan updated successfully\");\n      fetchBudgets();\n      setTimeout(() => setMessage(\"\"), 3000);\n      setEditId(null); // Reset edit form\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <Navigation />\n      <div className={styles.container}>\n        <h1 className={styles.title}>Budget Plans</h1>\n        {message && <div className={styles.message}>{message}</div>}\n        {error && <div className={styles.error}>{error}</div>}\n\n        {/* Create Budget Plan Form */}\n        <form className={styles.form}>\n          <div className={styles.formGroup}>\n            <label>Name</label>\n            <input\n              type=\"text\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </div>\n          <div className={styles.formGroup}>\n            <label>Total</label>\n            <input\n              type=\"number\"\n              value={total}\n              onChange={(e) => setTotal(e.target.value)}\n            />\n          </div>\n          <div className={styles.formGroup}>\n            <label>Spent</label>\n            <input\n              type=\"number\"\n              value={spent}\n              onChange={(e) => setSpent(e.target.value)}\n            />\n          </div>\n          <div className={styles.formGroup}>\n            <label>Items</label>\n            <input\n              type=\"number\"\n              value={items}\n              onChange={(e) => setItems(e.target.value)}\n            />\n          </div>\n          <div className={styles.formGroup}>\n            <label>Icon</label>\n            <input\n              type=\"text\"\n              value={icon}\n              onChange={(e) => setIcon(e.target.value)}\n            />\n          </div>\n          <button type=\"button\" onClick={handleSubmit} disabled={loading}>\n            {loading ? \"Creating...\" : \"Create Plan\"}\n          </button>\n        </form>\n\n        {/* Budget Plans List */}\n        {loading ? (\n          <p>Loading...</p>\n        ) : budgets.length === 0 ? (\n          <p>No budget plans found.</p>\n        ) : (\n          <ul className={styles.list}>\n            {budgets.map((plan) => (\n              <li key={plan._id} className={styles.listItem}>\n                <span>{plan.name}</span> - <span>${plan.total}</span>\n                <button onClick={() => handleEdit(plan)}>Edit</button>\n                <button onClick={() => handleDelete(plan._id)}>Delete</button>\n              </li>\n            ))}\n          </ul>\n        )}\n\n        {/* Edit Budget Plan Form */}\n        {editId && (\n          <div className={styles.editForm}>\n            <h2>Edit Budget Plan</h2>\n            <input\n              type=\"text\"\n              value={editName}\n              onChange={(e) => setEditName(e.target.value)}\n            />\n            <input\n              type=\"number\"\n              value={editTotal}\n              onChange={(e) => setEditTotal(e.target.value)}\n            />\n            <button onClick={handleUpdate}>Save</button>\n            <button onClick={() => setEditId(null)}>Cancel</button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default BudgetPlan;"]},"metadata":{},"sourceType":"module"}