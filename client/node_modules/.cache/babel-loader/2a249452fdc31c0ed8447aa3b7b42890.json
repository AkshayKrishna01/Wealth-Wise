{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aishwarya\\\\Desktop\\\\PRACTICE\\\\newwexpo\\\\expo - Copy\\\\client\\\\src\\\\components\\\\piechart\\\\Pie.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport \"./style.css\";\nimport { Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(Tooltip, Legend, ArcElement);\n\nconst PieChart = () => {\n  _s();\n\n  const [incomes, setIncomes] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [expenses, setExpenses] = useState([]);\n  const apiUrl = \"http://localhost:8080\"; // Helper to get the auth headers from localStorage\n\n  const getAuthHeaders = () => {\n    const token = localStorage.getItem(\"token\");\n    return {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    };\n  };\n\n  useEffect(() => {\n    getItems();\n    fetchExpenses();\n  }, []);\n  const apiUr = \"http://localhost:8080/api/expense\"; // Helper to get auth headers (JWT from localStorage)\n  // Fetch all expenses and graph data when component mounts\n  // Fetch expenses from backend with auth headers\n\n  const fetchExpenses = () => {\n    fetch(apiUr, {\n      method: \"GET\",\n      headers: getAuthHeaders()\n    }).then(res => res.json()).then(data => setExpenses(data)).catch(() => setError(\"Failed to fetch expenses\"));\n  };\n\n  const getItems = () => {\n    fetch(`${apiUrl}/income`, {\n      method: \"GET\",\n      headers: getAuthHeaders()\n    }).then(res => res.json()).then(res => setIncomes(res)).catch(() => setError(\"Failed to fetch incomes\"));\n  };\n\n  const totalIncome = incomes.reduce((sum, item) => sum + item.Amount, 0);\n  const totalExpense = expenses.reduce((sum, item) => sum + item.amount, 0);\n  const remainingBalance = totalIncome - totalExpense;\n  const PieChartData = {\n    labels: [\"Remaining\", \"Expense\"],\n    datasets: [{\n      label: \"Money spent\",\n      data: [totalExpense, remainingBalance],\n      backgroundColor: [\"black\", \"beige\"],\n      hoverOffset: 4\n    }]\n  };\n  const options = {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"piesize\",\n    children: /*#__PURE__*/_jsxDEV(Pie, {\n      options: options,\n      data: PieChartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 36\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 11\n  }, this);\n};\n\n_s(PieChart, \"JwJ1IFNyKiItQDvXJ8X7XVlq8Lk=\");\n\n_c = PieChart;\nexport default PieChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"PieChart\");","map":{"version":3,"sources":["C:/Users/Aishwarya/Desktop/PRACTICE/newwexpo/expo - Copy/client/src/components/piechart/Pie.jsx"],"names":["useEffect","useState","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","register","PieChart","incomes","setIncomes","error","setError","expenses","setExpenses","apiUrl","getAuthHeaders","token","localStorage","getItem","getItems","fetchExpenses","apiUr","fetch","method","headers","then","res","json","data","catch","totalIncome","reduce","sum","item","Amount","totalExpense","amount","remainingBalance","PieChartData","labels","datasets","label","backgroundColor","hoverOffset","options"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport \"./style.css\"\r\nimport { Pie } from 'react-chartjs-2';\r\nimport {\r\n    Chart as ChartJS,\r\n    ArcElement,\r\n    Tooltip,\r\n    Legend\r\n} from 'chart.js';\r\n\r\nChartJS.register(\r\n    Tooltip,\r\n    Legend,\r\n    ArcElement\r\n);\r\n\r\nconst PieChart=()=>{\r\n    const [incomes, setIncomes] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n    const [expenses, setExpenses] = useState([]);\r\n      const apiUrl = \"http://localhost:8080\";\r\n  \r\n  // Helper to get the auth headers from localStorage\r\n  const getAuthHeaders = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    return {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Authorization\": `Bearer ${token}`,\r\n    };\r\n  };\r\n  \r\n    useEffect(() => {\r\n      getItems();\r\n      fetchExpenses()\r\n    }, []);\r\n    const apiUr = \"http://localhost:8080/api/expense\";\r\n  \r\n    // Helper to get auth headers (JWT from localStorage)\r\n  \r\n  \r\n    // Fetch all expenses and graph data when component mounts\r\n    \r\n  \r\n    // Fetch expenses from backend with auth headers\r\n    const fetchExpenses = () => {\r\n      fetch(apiUr, { method: \"GET\", headers: getAuthHeaders() })\r\n        .then((res) => res.json())\r\n        .then((data) => setExpenses(data))\r\n        .catch(() => setError(\"Failed to fetch expenses\"));\r\n    };\r\n  \r\n    \r\n    const getItems = () => {\r\n      fetch(`${apiUrl}/income`, { method: \"GET\", headers: getAuthHeaders() })\r\n        .then((res) => res.json())\r\n        .then((res) => setIncomes(res))\r\n        .catch(() => setError(\"Failed to fetch incomes\"));\r\n    };\r\n    const totalIncome=incomes.reduce((sum, item) => sum + item.Amount, 0);\r\n    const totalExpense = expenses.reduce((sum, item) => sum + item.amount, 0);\r\n  \r\n      const remainingBalance = totalIncome - totalExpense; \r\n  \r\n const PieChartData={\r\n    labels:[\"Remaining\",\"Expense\"],\r\n    datasets:[{\r\n        label:\"Money spent\",\r\n        data:[totalExpense,remainingBalance],\r\n        backgroundColor:[\r\n            \"black\",\"beige\",\r\n        ],\r\n        hoverOffset:4,\r\n    },]\r\n}\r\n    const options={}\r\n    return<div className=\"piesize\"><Pie options={options} data={PieChartData}/></div>\r\n}\r\nexport default PieChart;"]},"metadata":{},"sourceType":"module"}