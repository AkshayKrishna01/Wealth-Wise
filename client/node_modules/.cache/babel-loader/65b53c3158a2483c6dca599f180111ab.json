{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aishwarya\\\\Desktop\\\\PRACTICE\\\\newwexpo\\\\expo - Copy\\\\client\\\\src\\\\components\\\\DashBoard\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport styles from \"./styles.module.css\";\nimport Footer from \"../footer/index\";\nimport Pie from \"../piechart/Pie\";\nimport Line from \"../Linegraph/Line\";\nimport Navigation from \"../NavBar/index\";\nimport Bar from \"../Bargraph/bargraph\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const [incomes, setIncomes] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [expenses, setExpenses] = useState([]);\n  const [budgets, setBudgets] = useState([]);\n  const [selectedBudget, setSelectedBudget] = useState(null); // State to track selected budget\n  // Updated base API URL with /api prefix\n\n  const apiUrl = \"http://localhost:8080\"; // Helper to get the auth headers from localStorage\n\n  const getAuthHeaders = () => {\n    const token = localStorage.getItem(\"token\");\n    return {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    };\n  };\n\n  useEffect(() => {\n    getItems();\n    fetchExpenses();\n    fetchBudgets();\n  }, []); // Fetch all budget plans for the authenticated user\n\n  const fetchBudgets = async () => {\n    try {\n      const res = await fetch(`${apiUrl}/api/budgetplan`, {\n        headers: getAuthHeaders()\n      });\n      if (!res.ok) throw new Error(\"Failed to fetch budget plans\");\n      const data = await res.json();\n      setBudgets(data);\n    } catch (err) {\n      setError(err.message);\n    }\n  }; // Fetch expenses from backend with auth headers\n\n\n  const fetchExpenses = () => {\n    fetch(`${apiUrl}/api/expense`, {\n      method: \"GET\",\n      headers: getAuthHeaders()\n    }).then(res => res.json()).then(data => setExpenses(data)).catch(() => setError(\"Failed to fetch expenses\"));\n  }; // Fetch incomes for the authenticated user\n\n\n  const getItems = () => {\n    fetch(`${apiUrl}/income`, {\n      method: \"GET\",\n      headers: getAuthHeaders()\n    }).then(res => res.json()).then(data => setIncomes(data)).catch(() => setError(\"Failed to fetch incomes\"));\n  };\n\n  const totalIncome = incomes.reduce((sum, item) => sum + item.Amount, 0);\n  const totalExpense = expenses.reduce((sum, item) => sum + item.amount, 0);\n  const remainingBalance = totalIncome - totalExpense; // Filter expenses based on the selected budget\n\n  const filteredExpenses = selectedBudget ? expenses.filter(expense => expense.expense === selectedBudget.name) : []; // Helper function to determine progress bar color\n\n  const getProgressBarColor = (spent, total) => {\n    if (spent < total) return \"#28a745\"; // Green for under budget\n\n    if (spent === total) return \"#ffc107\"; // Yellow for equal to budget\n\n    return \"#dc3545\"; // Red for exceeded budget\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.main_container,\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: styles.dashboardHeader,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"An overview of your financial status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: styles.overview,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.summaryCard,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Total Income\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.num,\n            children: [\"\\u20B9\", totalIncome]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.summaryCard,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Total Expense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.num2,\n            children: [\"\\u20B9\", totalExpense]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.summaryCard,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Remaining Balance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.num3,\n            children: [\"\\u20B9\", remainingBalance]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: styles.chartsSection,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.pie,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Expense Distribution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pie, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.chartWrapper,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Budget Breakdown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.chartWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Income vs Expense Trend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.showBudget,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Budget Plans\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.error_msg,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.budgetGrid,\n        children: budgets.map(plan => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.budgetCard,\n          onClick: () => setSelectedBudget(plan),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.budgetHeader,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.icon,\n              children: plan.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.budgetTitle,\n              children: plan.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.amount,\n              children: [\"\\u20B9\", plan.total]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [plan.items, \" Item(s)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.progressBar,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.progress,\n              style: {\n                width: plan.total > 0 ? `${plan.spent / plan.total * 100}%` : \"0%\",\n                backgroundColor: getProgressBarColor(plan.spent, plan.total) // Dynamic color\n\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.budgetInfo,\n            children: [\"\\u20B9\", plan.spent, \" Spent | \\u20B9\", plan.total - plan.spent, \" Remaining\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)]\n        }, plan._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), selectedBudget && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Expenses for \", selectedBudget.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.tableContainer,\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: styles.table,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Expense Source\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Reference\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: expense.expenseType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: expense.expense\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"\\u20B9\", expense.amount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: expense.reference || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(expense.date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 21\n              }, this)]\n            }, expense._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.foot,\n      children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"itawiPzDJa+pNKAD0WfvkNYfB7M=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/Aishwarya/Desktop/PRACTICE/newwexpo/expo - Copy/client/src/components/DashBoard/index.jsx"],"names":["useEffect","useState","styles","Footer","Pie","Line","Navigation","Bar","Main","incomes","setIncomes","error","setError","expenses","setExpenses","budgets","setBudgets","selectedBudget","setSelectedBudget","apiUrl","getAuthHeaders","token","localStorage","getItem","getItems","fetchExpenses","fetchBudgets","res","fetch","headers","ok","Error","data","json","err","message","method","then","catch","totalIncome","reduce","sum","item","Amount","totalExpense","amount","remainingBalance","filteredExpenses","filter","expense","name","getProgressBarColor","spent","total","main_container","dashboardHeader","overview","summaryCard","num","num2","num3","chartsSection","pie","chartWrapper","showBudget","error_msg","budgetGrid","map","plan","budgetCard","budgetHeader","icon","budgetTitle","items","progressBar","progress","width","backgroundColor","budgetInfo","_id","container","tableContainer","table","expenseType","reference","Date","date","toLocaleDateString","foot"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport styles from \"./styles.module.css\";\nimport Footer from \"../footer/index\";\nimport Pie from \"../piechart/Pie\";\nimport Line from \"../Linegraph/Line\";\nimport Navigation from \"../NavBar/index\";\nimport Bar from \"../Bargraph/bargraph\";\n\nconst Main = () => {\n  const [incomes, setIncomes] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [expenses, setExpenses] = useState([]);\n  const [budgets, setBudgets] = useState([]);\n  const [selectedBudget, setSelectedBudget] = useState(null); // State to track selected budget\n\n  // Updated base API URL with /api prefix\n  const apiUrl = \"http://localhost:8080\";\n\n  // Helper to get the auth headers from localStorage\n  const getAuthHeaders = () => {\n    const token = localStorage.getItem(\"token\");\n    return {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`,\n    };\n  };\n\n  useEffect(() => {\n    getItems();\n    fetchExpenses();\n    fetchBudgets();\n  }, []);\n\n  // Fetch all budget plans for the authenticated user\n  const fetchBudgets = async () => {\n    try {\n      const res = await fetch(`${apiUrl}/api/budgetplan`, { headers: getAuthHeaders() });\n      if (!res.ok) throw new Error(\"Failed to fetch budget plans\");\n      const data = await res.json();\n      setBudgets(data);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Fetch expenses from backend with auth headers\n  const fetchExpenses = () => {\n    fetch(`${apiUrl}/api/expense`, { method: \"GET\", headers: getAuthHeaders() })\n      .then((res) => res.json())\n      .then((data) => setExpenses(data))\n      .catch(() => setError(\"Failed to fetch expenses\"));\n  };\n\n  // Fetch incomes for the authenticated user\n  const getItems = () => {\n    fetch(`${apiUrl}/income`, { method: \"GET\", headers: getAuthHeaders() })\n      .then((res) => res.json())\n      .then((data) => setIncomes(data))\n      .catch(() => setError(\"Failed to fetch incomes\"));\n  };\n\n  const totalIncome = incomes.reduce((sum, item) => sum + item.Amount, 0);\n  const totalExpense = expenses.reduce((sum, item) => sum + item.amount, 0);\n  const remainingBalance = totalIncome - totalExpense;\n\n  // Filter expenses based on the selected budget\n  const filteredExpenses = selectedBudget\n    ? expenses.filter((expense) => expense.expense === selectedBudget.name)\n    : [];\n\n  // Helper function to determine progress bar color\n  const getProgressBarColor = (spent, total) => {\n    if (spent < total) return \"#28a745\"; // Green for under budget\n    if (spent === total) return \"#ffc107\"; // Yellow for equal to budget\n    return \"#dc3545\"; // Red for exceeded budget\n  };\n\n  return (\n    <div>\n      <Navigation />\n      <div className={styles.main_container}>\n        {/* Dashboard Header */}\n        <header className={styles.dashboardHeader}>\n          <h1>Dashboard</h1>\n          <p>An overview of your financial status</p>\n        </header>\n\n        {/* Overview Section */}\n        <section className={styles.overview}>\n          <div className={styles.summaryCard}>\n            <h2>Total Income</h2>\n            <p className={styles.num}>₹{totalIncome}</p>\n          </div>\n          <div className={styles.summaryCard}>\n            <h2>Total Expense</h2>\n            <p className={styles.num2}>₹{totalExpense}</p>\n          </div>\n          <div className={styles.summaryCard}>\n            <h2>Remaining Balance</h2>\n            <p className={styles.num3}>₹{remainingBalance}</p>\n          </div>\n        </section>\n\n        {/* Charts Section */}\n        <section className={styles.chartsSection}>\n          <div className={styles.pie}>\n            <h2>Expense Distribution</h2>\n            <Pie />\n          </div>\n\n          <div className={styles.chartWrapper}>\n            <h2>Budget Breakdown</h2>\n            <Bar />\n          </div>\n        </section>\n      </div>\n      <div className={styles.chartWrapper}>\n        <h2>Income vs Expense Trend</h2>\n        <Line />\n      </div>\n\n      {/* Budget Plans Section */}\n      <div className={styles.showBudget}>\n        <h2>My Budget Plans</h2>\n        {error && <div className={styles.error_msg}>{error}</div>}\n        <div className={styles.budgetGrid}>\n          {budgets.map((plan) => (\n            <div\n              key={plan._id}\n              className={styles.budgetCard}\n              onClick={() => setSelectedBudget(plan)}\n            >\n              <div className={styles.budgetHeader}>\n                <span className={styles.icon}>{plan.icon}</span>\n                <span className={styles.budgetTitle}>{plan.name}</span>\n                <span className={styles.amount}>₹{plan.total}</span>\n              </div>\n              <p>{plan.items} Item(s)</p>\n              <div className={styles.progressBar}>\n                <div\n                  className={styles.progress}\n                  style={{\n                    width: plan.total > 0 ? `${(plan.spent / plan.total) * 100}%` : \"0%\",\n                    backgroundColor: getProgressBarColor(plan.spent, plan.total), // Dynamic color\n                  }}\n                ></div>\n              </div>\n              <p className={styles.budgetInfo}>\n                ₹{plan.spent} Spent | ₹{plan.total - plan.spent} Remaining\n              </p>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Display Filtered Expenses */}\n      {selectedBudget && (\n        <div className={styles.container}>\n          <h2>Expenses for {selectedBudget.name}</h2>\n          <div className={styles.tableContainer}>\n            <table className={styles.table}>\n              <thead>\n                <tr>\n                  <th>Type</th>\n                  <th>Expense Source</th>\n                  <th>Amount</th>\n                  <th>Reference</th>\n                  <th>Date</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filteredExpenses.map((expense) => (\n                  <tr key={expense._id}>\n                    <td>{expense.expenseType}</td>\n                    <td>{expense.expense}</td>\n                    <td>₹{expense.amount}</td>\n                    <td>{expense.reference || \"N/A\"}</td>\n                    <td>{new Date(expense.date).toLocaleDateString()}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n\n      <div className={styles.foot}>\n        <Footer />\n      </div>\n    </div>\n  );\n};\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}