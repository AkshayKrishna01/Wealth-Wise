{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aishwarya\\\\Desktop\\\\PRACTICE\\\\expo\\\\client\\\\src\\\\components\\\\Income\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8080/api/income\"; // Update this if needed\n\nfunction Income() {\n  _s();\n\n  const [amount, setAmount] = useState(\"\");\n  const [source, setSource] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [incomes, setIncomes] = useState([]);\n  const token = localStorage.getItem(\"token\"); // Get JWT from localStorage\n\n  useEffect(() => {\n    if (!token) return;\n\n    const fetchIncome = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/income`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setIncomes(response.data);\n      } catch (error) {\n        console.error(\"Error fetching income:\", error);\n      }\n    };\n\n    fetchIncome();\n  }, [token]);\n\n  const handleAddIncome = async e => {\n    e.preventDefault();\n\n    if (!amount || !source || !date) {\n      alert(\"Please fill all fields\");\n      return;\n    }\n\n    try {\n      const response = await axios.post(`${API_URL}/incomeAdd`, {\n        amount,\n        source,\n        date\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      setIncomes([...incomes, response.data]); // Update state\n\n      setAmount(\"\");\n      setSource(\"\");\n      setDate(\"\");\n    } catch (error) {\n      console.error(\"Error adding income:\", error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Income Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Income\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddIncome,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Amount\",\n        value: amount,\n        onChange: e => setAmount(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Source\",\n        value: source,\n        onChange: e => setSource(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: date,\n        onChange: e => setDate(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Income\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Incomes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: incomes.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No incomes added yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this) : incomes.map(income => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [income.source, \" - \\u20B9\", income.amount, \" on \", new Date(income.date).toLocaleDateString()]\n      }, income._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Income, \"6R0NhFjsg2Nge9kjxSqn6x4uh78=\");\n\n_c = Income;\nexport default Income;\n\nvar _c;\n\n$RefreshReg$(_c, \"Income\");","map":{"version":3,"sources":["C:/Users/Aishwarya/Desktop/PRACTICE/expo/client/src/components/Income/index.jsx"],"names":["useState","useEffect","axios","API_URL","Income","amount","setAmount","source","setSource","date","setDate","incomes","setIncomes","token","localStorage","getItem","fetchIncome","response","get","headers","Authorization","data","error","console","handleAddIncome","e","preventDefault","alert","post","target","value","length","map","income","Date","toLocaleDateString","_id"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst API_URL = \"http://localhost:8080/api/income\"; // Update this if needed\n\nfunction Income() {\n  const [amount, setAmount] = useState(\"\");\n  const [source, setSource] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [incomes, setIncomes] = useState([]);\n\n  const token = localStorage.getItem(\"token\"); // Get JWT from localStorage\n\n  useEffect(() => {\n    if (!token) return;\n\n    const fetchIncome = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/income`, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        setIncomes(response.data);\n      } catch (error) {\n        console.error(\"Error fetching income:\", error);\n      }\n    };\n\n    fetchIncome();\n  }, [token]);\n\n  const handleAddIncome = async (e) => {\n    e.preventDefault();\n    if (!amount || !source || !date) {\n      alert(\"Please fill all fields\");\n      return;\n    }\n\n    try {\n      const response = await axios.post(\n        `${API_URL}/incomeAdd`,\n        { amount, source, date },\n        { headers: { Authorization: `Bearer ${token}`, \"Content-Type\": \"application/json\" } }\n      );\n\n      setIncomes([...incomes, response.data]); // Update state\n      setAmount(\"\");\n      setSource(\"\");\n      setDate(\"\");\n    } catch (error) {\n      console.error(\"Error adding income:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Income Tracker</h1>\n\n      <h2>Add Income</h2>\n      <form onSubmit={handleAddIncome}>\n        <input type=\"number\" placeholder=\"Amount\" value={amount} onChange={(e) => setAmount(e.target.value)} required />\n        <input type=\"text\" placeholder=\"Source\" value={source} onChange={(e) => setSource(e.target.value)} required />\n        <input type=\"date\" value={date} onChange={(e) => setDate(e.target.value)} required />\n        <button type=\"submit\">Add Income</button>\n      </form>\n\n      <h2>Your Incomes</h2>\n      <ul>\n        {incomes.length === 0 ? (\n          <p>No incomes added yet.</p>\n        ) : (\n          incomes.map((income) => (\n            <li key={income._id}>\n              {income.source} - ₹{income.amount} on {new Date(income.date).toLocaleDateString()}\n            </li>\n          ))\n        )}\n      </ul>\n    </div>\n  );\n}\n\nexport default Income;\n"]},"metadata":{},"sourceType":"module"}