{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aishwarya\\\\Desktop\\\\PRACTICE\\\\newwexpo\\\\expo\\\\client\\\\src\\\\components\\\\Budgetplan\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./styles.module.css\";\nimport Navigation from \"../NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BudgetPlan = () => {\n  _s();\n\n  const [budgets, setBudgets] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [total, setTotal] = useState(\"\");\n  const [spent, setSpent] = useState(\"\");\n  const [icon, setIcon] = useState(\"\");\n  const apiUrl = \"http://localhost:8080/api\";\n  useEffect(() => {\n    fetchBudgets();\n  }, []);\n\n  const fetchBudgets = async () => {\n    try {\n      const res = await fetch(`${apiUrl}/budgetplan`);\n      if (!res.ok) throw new Error(\"Failed to fetch budget plans\");\n      const data = await res.json();\n      setBudgets(data);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const handleSubmit = async () => {\n    if (!name || !total) {\n      setError(\"Name and Total are required\");\n      return;\n    }\n\n    try {\n      const newBudget = {\n        name,\n        total: Number(total),\n        spent: Number(spent) || 0,\n        icon: icon || \"ðŸ’°\"\n      };\n      const res = await fetch(`${apiUrl}/budgetplan`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newBudget)\n      });\n      if (!res.ok) throw new Error(\"Failed to create budget plan\");\n      setMessage(\"Budget plan created successfully!\");\n      setName(\"\", setTotal(\"\"), setSpent(\"\"), setIcon(\"\"));\n      fetchBudgets();\n      setTimeout(() => setMessage(\"\"), 3000);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const handleAddExpense = async (id, amount) => {\n    const budget = budgets.find(b => b._id === id);\n    if (!budget) return;\n    const newSpent = budget.spent + Number(amount);\n\n    if (newSpent > budget.total) {\n      alert(\"Warning: Budget exceeded!\");\n    }\n\n    try {\n      await fetch(`${apiUrl}/budgetplan/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({ ...budget,\n          spent: newSpent\n        })\n      });\n      fetchBudgets();\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Budget Plans\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.success_msg,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.error_msg,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create New Budget Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Plan Name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Total Amount\",\n          value: total,\n          onChange: e => setTotal(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Amount Spent\",\n          value: spent,\n          onChange: e => setSpent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Icon (optional)\",\n          value: icon,\n          onChange: e => setIcon(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          children: \"Create Budget\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.budgetList,\n        children: budgets.map(budget => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.budgetItem,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [budget.icon, \" \", budget.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total: $\", budget.total]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Spent: $\", budget.spent, \" \", budget.spent > budget.total && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.warning,\n              children: \"\\u26A0 Over Budget\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 73\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Add Expense\",\n            onBlur: e => handleAddExpense(budget._id, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, budget._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(BudgetPlan, \"mS+dTbPTDjH5lYh2VsdOLe59HM4=\");\n\n_c = BudgetPlan;\nexport default BudgetPlan;\n\nvar _c;\n\n$RefreshReg$(_c, \"BudgetPlan\");","map":{"version":3,"sources":["C:/Users/Aishwarya/Desktop/PRACTICE/newwexpo/expo/client/src/components/Budgetplan/index.jsx"],"names":["React","useState","useEffect","styles","Navigation","BudgetPlan","budgets","setBudgets","error","setError","message","setMessage","name","setName","total","setTotal","spent","setSpent","icon","setIcon","apiUrl","fetchBudgets","res","fetch","ok","Error","data","json","err","handleSubmit","newBudget","Number","method","headers","body","JSON","stringify","setTimeout","handleAddExpense","id","amount","budget","find","b","_id","newSpent","alert","container","success_msg","error_msg","formContainer","e","target","value","budgetList","map","budgetItem","warning"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styles from \"./styles.module.css\";\nimport Navigation from \"../NavBar\";\n\nconst BudgetPlan = () => {\n  const [budgets, setBudgets] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const [name, setName] = useState(\"\");\n  const [total, setTotal] = useState(\"\");\n  const [spent, setSpent] = useState(\"\");\n  const [icon, setIcon] = useState(\"\");\n\n  const apiUrl = \"http://localhost:8080/api\";\n\n  useEffect(() => {\n    fetchBudgets();\n  }, []);\n\n  const fetchBudgets = async () => {\n    try {\n      const res = await fetch(`${apiUrl}/budgetplan`);\n      if (!res.ok) throw new Error(\"Failed to fetch budget plans\");\n      const data = await res.json();\n      setBudgets(data);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const handleSubmit = async () => {\n    if (!name || !total) {\n      setError(\"Name and Total are required\");\n      return;\n    }\n    try {\n      const newBudget = {\n        name,\n        total: Number(total),\n        spent: Number(spent) || 0,\n        icon: icon || \"ðŸ’°\",\n      };\n      const res = await fetch(`${apiUrl}/budgetplan`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(newBudget),\n      });\n      if (!res.ok) throw new Error(\"Failed to create budget plan\");\n      setMessage(\"Budget plan created successfully!\");\n      setName(\"\", setTotal(\"\"), setSpent(\"\"), setIcon(\"\"));\n      fetchBudgets();\n      setTimeout(() => setMessage(\"\"), 3000);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const handleAddExpense = async (id, amount) => {\n    const budget = budgets.find((b) => b._id === id);\n    if (!budget) return;\n\n    const newSpent = budget.spent + Number(amount);\n    if (newSpent > budget.total) {\n      alert(\"Warning: Budget exceeded!\");\n    }\n\n    try {\n      await fetch(`${apiUrl}/budgetplan/${id}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ ...budget, spent: newSpent }),\n      });\n      fetchBudgets();\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <>\n      <Navigation />\n      <div className={styles.container}>\n        <h2>My Budget Plans</h2>\n        {message && <div className={styles.success_msg}>{message}</div>}\n        {error && <div className={styles.error_msg}>{error}</div>}\n        \n        <div className={styles.formContainer}>\n          <h3>Create New Budget Plan</h3>\n          <input type=\"text\" placeholder=\"Plan Name\" value={name} onChange={(e) => setName(e.target.value)} />\n          <input type=\"number\" placeholder=\"Total Amount\" value={total} onChange={(e) => setTotal(e.target.value)} />\n          <input type=\"number\" placeholder=\"Amount Spent\" value={spent} onChange={(e) => setSpent(e.target.value)} />\n          <input type=\"text\" placeholder=\"Icon (optional)\" value={icon} onChange={(e) => setIcon(e.target.value)} />\n          <button onClick={handleSubmit}>Create Budget</button>\n        </div>\n\n        <div className={styles.budgetList}>\n          {budgets.map((budget) => (\n            <div key={budget._id} className={styles.budgetItem}>\n              <h4>{budget.icon} {budget.name}</h4>\n              <p>Total: ${budget.total}</p>\n              <p>Spent: ${budget.spent} {budget.spent > budget.total && <span className={styles.warning}>âš  Over Budget</span>}</p>\n              <input type=\"number\" placeholder=\"Add Expense\" onBlur={(e) => handleAddExpense(budget._id, e.target.value)} />\n            </div>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default BudgetPlan;\n"]},"metadata":{},"sourceType":"module"}