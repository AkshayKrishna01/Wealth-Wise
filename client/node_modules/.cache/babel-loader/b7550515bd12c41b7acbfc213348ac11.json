{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aishwarya\\\\Desktop\\\\PRACTICE\\\\newwexpo\\\\expo - Copy\\\\client\\\\src\\\\components\\\\Expense\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Navigation from \"../NavBar\";\nimport styles from \"./style.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CombinedExpense() {\n  _s();\n\n  // Form state for adding/updating an expense\n  const [expenseType, setExpenseType] = useState(\"Monthly\");\n  const [expense, setExpense] = useState(\"transportation\"); // default source\n\n  const [amount, setAmount] = useState(\"\");\n  const [reference, setReference] = useState(\"\");\n  const [date, setDate] = useState(\"\"); // Data state\n\n  const [expenses, setExpenses] = useState([]);\n  const [graphData, setGraphData] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\"); // Editing state\n\n  const [editId, setEditId] = useState(null);\n  const [editExpenseType, setEditExpenseType] = useState(\"Monthly\");\n  const [editExpense, setEditExpense] = useState(\"transportation\");\n  const [editAmount, setEditAmount] = useState(\"\");\n  const [editReference, setEditReference] = useState(\"\");\n  const [editDate, setEditDate] = useState(\"\"); // API URL for expense routes\n\n  const apiUrl = \"http://localhost:8080/api/expense\"; // Helper to get auth headers (JWT from localStorage)\n\n  const getAuthHeaders = () => {\n    const token = localStorage.getItem(\"token\");\n    return {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    };\n  }; // Fetch all expenses and graph data when component mounts\n\n\n  useEffect(() => {\n    getItems();\n    fetchGraphData();\n  }, []); // Fetch expenses from backend with auth headers\n\n  const getItems = () => {\n    fetch(apiUrl, {\n      method: \"GET\",\n      headers: getAuthHeaders()\n    }).then(res => res.json()).then(data => setExpenses(data)).catch(() => setError(\"Failed to fetch expenses\"));\n  }; // Fetch aggregated daily expense data for the graph with auth headers\n  // Add a new expense with auth headers\n\n\n  const handleSubmit = () => {\n    setError(\"\");\n\n    if (!expense.trim() || !amount.trim() || !date.trim()) {\n      setError(\"Expense, Amount, and Date are required.\");\n      return;\n    }\n\n    const payload = {\n      expenseType,\n      expense,\n      amount: Number(amount),\n      reference,\n      date\n    };\n    fetch(apiUrl, {\n      method: \"POST\",\n      headers: getAuthHeaders(),\n      body: JSON.stringify(payload)\n    }).then(res => res.json()).then(() => {\n      setMessage(\"Expense added successfully\"); // Reset form fields\n\n      setExpenseType(\"Monthly\");\n      setExpense(\"transportation\");\n      setAmount(\"\");\n      setReference(\"\");\n      setDate(\"\");\n      setTimeout(() => setMessage(\"\"), 3000);\n      getItems();\n      fetchGraphData();\n    }).catch(() => setError(\"Unable to create expense entry\"));\n  }; // Delete an expense with auth headers\n\n\n  const handleDelete = id => {\n    if (window.confirm(\"Are you sure you want to delete this?\")) {\n      fetch(`${apiUrl}/${id}`, {\n        method: \"DELETE\",\n        headers: getAuthHeaders()\n      }).then(() => {\n        setMessage(\"Expense deleted successfully\");\n        setTimeout(() => setMessage(\"\"), 3000);\n        getItems();\n        fetchGraphData();\n      }).catch(() => setError(\"Unable to delete expense entry\"));\n    }\n  }; // Set editing state for an expense entry\n\n\n  const handleEdit = item => {\n    setEditId(item._id);\n    setEditExpenseType(item.expenseType);\n    setEditExpense(item.expense);\n    setEditAmount(item.amount);\n    setEditReference(item.reference);\n    setEditDate(item.date.substring(0, 10));\n  }; // Update an expense entry with auth headers\n\n\n  const handleUpdate = () => {\n    setError(\"\");\n\n    if (!editExpense.trim() || !editAmount.toString().trim() || !editDate.trim()) {\n      setError(\"Expense, Amount, and Date are required.\");\n      return;\n    }\n\n    const payload = {\n      expenseType: editExpenseType,\n      expense: editExpense,\n      amount: Number(editAmount),\n      reference: editReference,\n      date: editDate\n    };\n    fetch(`${apiUrl}/${editId}`, {\n      method: \"PUT\",\n      headers: getAuthHeaders(),\n      body: JSON.stringify(payload)\n    }).then(res => res.json()).then(() => {\n      setMessage(\"Expense updated successfully\");\n      setTimeout(() => setMessage(\"\"), 3000);\n      setEditId(null);\n      getItems();\n      fetchGraphData();\n    }).catch(() => setError(\"Unable to update expense entry\"));\n  }; // Calculate total expense amount\n\n\n  const totalExpense = expenses.reduce((sum, item) => sum + item.amount, 0); // Prepare data for the daily expense graph\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: editId ? \"Edit Expense\" : \"Add Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.success_msg,\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [editId ? /*#__PURE__*/_jsxDEV(\"select\", {\n            value: editExpenseType,\n            onChange: e => setEditExpenseType(e.target.value),\n            className: styles.formControl,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Monthly\",\n              children: \"Monthly\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Daily\",\n              children: \"Daily\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n            value: expenseType,\n            onChange: e => setExpenseType(e.target.value),\n            className: styles.formControl,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Monthly\",\n              children: \"Monthly\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Daily\",\n              children: \"Daily\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), editId ? /*#__PURE__*/_jsxDEV(\"select\", {\n            value: editExpense,\n            onChange: e => setEditExpense(e.target.value),\n            className: styles.formControl,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"transportation\",\n              children: \"transportation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"entertainment\",\n              children: \"entertainment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"utilities\",\n              children: \"utilities\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"shopping\",\n              children: \"shopping\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"groceries\",\n              children: \"groceries\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"anyother\",\n              children: \"anyother\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n            value: expense,\n            onChange: e => setExpense(e.target.value),\n            className: styles.formControl,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"transportation\",\n              children: \"transportation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"entertainment\",\n              children: \"entertainment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"utilities\",\n              children: \"utilities\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"shopping\",\n              children: \"shopping\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"groceries\",\n              children: \"groceries\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"anyother\",\n              children: \"anyother\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), editId ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Amount\",\n            value: editAmount,\n            onChange: e => setEditAmount(e.target.value),\n            className: styles.formControl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Amount\",\n            value: amount,\n            onChange: e => setAmount(e.target.value),\n            className: styles.formControl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), editId ? /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Reference (optional)\",\n            value: editReference,\n            onChange: e => setEditReference(e.target.value),\n            className: styles.formControl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Reference (optional)\",\n            value: reference,\n            onChange: e => setReference(e.target.value),\n            className: styles.formControl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this), editId ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: editDate,\n            onChange: e => setEditDate(e.target.value),\n            className: styles.formControl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: date,\n            onChange: e => setDate(e.target.value),\n            className: styles.formControl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), editId ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.buttonGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.btnSuccess,\n              onClick: handleUpdate,\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.btnSecondary,\n              onClick: () => setEditId(null),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.btnDark,\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.error_msg,\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.tableContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Expense List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: styles.table,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Expense Source\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Reference\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: expenses.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.expenseType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.expense\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", item.amount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.reference || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(item.date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: styles.btnWarning,\n                  onClick: () => handleEdit(item),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: styles.btnDanger,\n                  onClick: () => handleDelete(item._id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 19\n              }, this)]\n            }, item._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.totalExpense,\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Total Expense: $\", totalExpense.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CombinedExpense, \"FGRXQIcMeCFrDpwo1FOS4qtY5/I=\");\n\n_c = CombinedExpense;\n\nvar _c;\n\n$RefreshReg$(_c, \"CombinedExpense\");","map":{"version":3,"sources":["C:/Users/Aishwarya/Desktop/PRACTICE/newwexpo/expo - Copy/client/src/components/Expense/index.jsx"],"names":["useEffect","useState","Navigation","styles","CombinedExpense","expenseType","setExpenseType","expense","setExpense","amount","setAmount","reference","setReference","date","setDate","expenses","setExpenses","graphData","setGraphData","error","setError","message","setMessage","editId","setEditId","editExpenseType","setEditExpenseType","editExpense","setEditExpense","editAmount","setEditAmount","editReference","setEditReference","editDate","setEditDate","apiUrl","getAuthHeaders","token","localStorage","getItem","getItems","fetchGraphData","fetch","method","headers","then","res","json","data","catch","handleSubmit","trim","payload","Number","body","JSON","stringify","setTimeout","handleDelete","id","window","confirm","handleEdit","item","_id","substring","handleUpdate","toString","totalExpense","reduce","sum","container","formContainer","success_msg","formGroup","e","target","value","formControl","buttonGroup","btnSuccess","btnSecondary","btnDark","error_msg","tableContainer","table","map","Date","toLocaleDateString","btnWarning","btnDanger","toFixed"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";  \nimport Navigation from \"../NavBar\";\nimport styles from \"./style.module.css\";\n\nexport default function CombinedExpense() {\n  // Form state for adding/updating an expense\n  const [expenseType, setExpenseType] = useState(\"Monthly\");\n  const [expense, setExpense] = useState(\"transportation\"); // default source\n  const [amount, setAmount] = useState(\"\");\n  const [reference, setReference] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n\n  // Data state\n  const [expenses, setExpenses] = useState([]);\n  const [graphData, setGraphData] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  // Editing state\n  const [editId, setEditId] = useState(null);\n  const [editExpenseType, setEditExpenseType] = useState(\"Monthly\");\n  const [editExpense, setEditExpense] = useState(\"transportation\");\n  const [editAmount, setEditAmount] = useState(\"\");\n  const [editReference, setEditReference] = useState(\"\");\n  const [editDate, setEditDate] = useState(\"\");\n\n  // API URL for expense routes\n  const apiUrl = \"http://localhost:8080/api/expense\";\n\n  // Helper to get auth headers (JWT from localStorage)\n  const getAuthHeaders = () => {\n    const token = localStorage.getItem(\"token\");\n    return {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`,\n    };\n  };\n\n  // Fetch all expenses and graph data when component mounts\n  useEffect(() => {\n    getItems();\n    fetchGraphData();\n  }, []);\n\n  // Fetch expenses from backend with auth headers\n  const getItems = () => {\n    fetch(apiUrl, { method: \"GET\", headers: getAuthHeaders() })\n      .then((res) => res.json())\n      .then((data) => setExpenses(data))\n      .catch(() => setError(\"Failed to fetch expenses\"));\n  };\n\n  // Fetch aggregated daily expense data for the graph with auth headers\n  \n\n  // Add a new expense with auth headers\n  const handleSubmit = () => {\n    setError(\"\");\n    if (!expense.trim() || !amount.trim() || !date.trim()) {\n      setError(\"Expense, Amount, and Date are required.\");\n      return;\n    }\n    const payload = { expenseType, expense, amount: Number(amount), reference, date };\n\n    fetch(apiUrl, {\n      method: \"POST\",\n      headers: getAuthHeaders(),\n      body: JSON.stringify(payload),\n    })\n      .then((res) => res.json())\n      .then(() => {\n        setMessage(\"Expense added successfully\");\n        // Reset form fields\n        setExpenseType(\"Monthly\");\n        setExpense(\"transportation\");\n        setAmount(\"\");\n        setReference(\"\");\n        setDate(\"\");\n        setTimeout(() => setMessage(\"\"), 3000);\n        getItems();\n        fetchGraphData();\n      })\n      .catch(() => setError(\"Unable to create expense entry\"));\n  };\n\n  // Delete an expense with auth headers\n  const handleDelete = (id) => {\n    if (window.confirm(\"Are you sure you want to delete this?\")) {\n      fetch(`${apiUrl}/${id}`, { method: \"DELETE\", headers: getAuthHeaders() })\n        .then(() => {\n          setMessage(\"Expense deleted successfully\");\n          setTimeout(() => setMessage(\"\"), 3000);\n          getItems();\n          fetchGraphData();\n        })\n        .catch(() => setError(\"Unable to delete expense entry\"));\n    }\n  };\n\n  // Set editing state for an expense entry\n  const handleEdit = (item) => {\n    setEditId(item._id);\n    setEditExpenseType(item.expenseType);\n    setEditExpense(item.expense);\n    setEditAmount(item.amount);\n    setEditReference(item.reference);\n    setEditDate(item.date.substring(0, 10));\n  };\n\n  // Update an expense entry with auth headers\n  const handleUpdate = () => {\n    setError(\"\");\n    if (!editExpense.trim() || !editAmount.toString().trim() || !editDate.trim()) {\n      setError(\"Expense, Amount, and Date are required.\");\n      return;\n    }\n    const payload = {\n      expenseType: editExpenseType,\n      expense: editExpense,\n      amount: Number(editAmount),\n      reference: editReference,\n      date: editDate,\n    };\n\n    fetch(`${apiUrl}/${editId}`, {\n      method: \"PUT\",\n      headers: getAuthHeaders(),\n      body: JSON.stringify(payload),\n    })\n      .then((res) => res.json())\n      .then(() => {\n        setMessage(\"Expense updated successfully\");\n        setTimeout(() => setMessage(\"\"), 3000);\n        setEditId(null);\n        getItems();\n        fetchGraphData();\n      })\n      .catch(() => setError(\"Unable to update expense entry\"));\n  };\n\n  // Calculate total expense amount\n  const totalExpense = expenses.reduce((sum, item) => sum + item.amount, 0);\n\n  // Prepare data for the daily expense graph\n  \n\n  return (\n    <div>\n      <Navigation />\n      <div className={styles.container}>\n        {/* Form Container */}\n        <div className={styles.formContainer}>\n          <h3>{editId ? \"Edit Expense\" : \"Add Expense\"}</h3>\n          {message && <div className={styles.success_msg}>{message}</div>}\n          <div className={styles.formGroup}>\n            {/* Expense Type Dropdown */}\n            {editId ? (\n              <select\n                value={editExpenseType}\n                onChange={(e) => setEditExpenseType(e.target.value)}\n                className={styles.formControl}\n              >\n                <option value=\"Monthly\">Monthly</option>\n                <option value=\"Daily\">Daily</option>\n              </select>\n            ) : (\n              <select\n                value={expenseType}\n                onChange={(e) => setExpenseType(e.target.value)}\n                className={styles.formControl}\n              >\n                <option value=\"Monthly\">Monthly</option>\n                <option value=\"Daily\">Daily</option>\n              </select>\n            )}\n\n            {/* Expense Source Dropdown */}\n            {editId ? (\n              <select\n                value={editExpense}\n                onChange={(e) => setEditExpense(e.target.value)}\n                className={styles.formControl}\n              >\n                <option value=\"transportation\">transportation</option>\n                <option value=\"entertainment\">entertainment</option>\n                <option value=\"utilities\">utilities</option>\n                <option value=\"shopping\">shopping</option>\n                <option value=\"groceries\">groceries</option>\n                <option value=\"anyother\">anyother</option>\n              </select>\n            ) : (\n              <select\n                value={expense}\n                onChange={(e) => setExpense(e.target.value)}\n                className={styles.formControl}\n              >\n                <option value=\"transportation\">transportation</option>\n                <option value=\"entertainment\">entertainment</option>\n                <option value=\"utilities\">utilities</option>\n                <option value=\"shopping\">shopping</option>\n                <option value=\"groceries\">groceries</option>\n                <option value=\"anyother\">anyother</option>\n              </select>\n            )}\n\n            {editId ? (\n              <input\n                type=\"number\"\n                placeholder=\"Amount\"\n                value={editAmount}\n                onChange={(e) => setEditAmount(e.target.value)}\n                className={styles.formControl}\n              />\n            ) : (\n              <input\n                type=\"number\"\n                placeholder=\"Amount\"\n                value={amount}\n                onChange={(e) => setAmount(e.target.value)}\n                className={styles.formControl}\n              />\n            )}\n\n            {editId ? (\n              <input\n                placeholder=\"Reference (optional)\"\n                value={editReference}\n                onChange={(e) => setEditReference(e.target.value)}\n                className={styles.formControl}\n              />\n            ) : (\n              <input\n                placeholder=\"Reference (optional)\"\n                value={reference}\n                onChange={(e) => setReference(e.target.value)}\n                className={styles.formControl}\n              />\n            )}\n\n            {editId ? (\n              <input\n                type=\"date\"\n                value={editDate}\n                onChange={(e) => setEditDate(e.target.value)}\n                className={styles.formControl}\n              />\n            ) : (\n              <input\n                type=\"date\"\n                value={date}\n                onChange={(e) => setDate(e.target.value)}\n                className={styles.formControl}\n              />\n            )}\n\n            {editId ? (\n              <div className={styles.buttonGroup}>\n                <button className={styles.btnSuccess} onClick={handleUpdate}>\n                  Update\n                </button>\n                <button className={styles.btnSecondary} onClick={() => setEditId(null)}>\n                  Cancel\n                </button>\n              </div>\n            ) : (\n              <button className={styles.btnDark} onClick={handleSubmit}>\n                Submit\n              </button>\n            )}\n          </div>\n          {error && <div className={styles.error_msg}>{error}</div>}\n        </div>\n\n        {/* Expense Table */}\n        <div className={styles.tableContainer}>\n          <h3>Expense List</h3>\n          <table className={styles.table}>\n            <thead>\n              <tr>\n                <th>Type</th>\n                <th>Expense Source</th>\n                <th>Amount</th>\n                <th>Reference</th>\n                <th>Date</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {expenses.map((item) => (\n                <tr key={item._id}>\n                  <td>{item.expenseType}</td>\n                  <td>{item.expense}</td>\n                  <td>${item.amount}</td>\n                  <td>{item.reference || \"N/A\"}</td>\n                  <td>{new Date(item.date).toLocaleDateString()}</td>\n                  <td>\n                    <button className={styles.btnWarning} onClick={() => handleEdit(item)}>\n                      Edit\n                    </button>\n                    <button className={styles.btnDanger} onClick={() => handleDelete(item._id)}>\n                      Delete\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n\n        {/* Total Expense Display */}\n        <div className={styles.totalExpense}>\n          <h4>Total Expense: ${totalExpense.toFixed(2)}</h4>\n        </div>\n\n        {/* Daily Expense Graph */}\n        \n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}