{"ast":null,"code":"// // BudgetPlan.jsx (Frontend)\n// import React, { useState, useEffect } from \"react\";\n// import styles from \"./styles.module.css\";\n// import Navigation from \"../NavBar\";\n// const BudgetPlan = () => {\n//   const [budgets, setBudgets] = useState([]);\n//   const [error, setError] = useState(\"\");\n//   const [message, setMessage] = useState(\"\");\n//   // Form state for creating a new budget plan\n//   const [name, setName] = useState(\"\");\n//   const [total, setTotal] = useState(\"\");\n//   const [spent, setSpent] = useState(\"\");\n//   const [items, setItems] = useState(\"\");\n//   const [icon, setIcon] = useState(\"\");\n//   const [editId, setEditId] = useState(null);\n//   const [editName, setEditName] = useState(\"\");\n//   const [editTotal, setEditTotal] = useState(\"\");\n//   const [editSpent, setEditSpent] = useState(\"\");\n//   const [editItems, setEditItems] = useState(\"\");\n//   const [editIcon, setEditIcon] = useState(\"\");\n//   const apiUrl = \"http://localhost:8080/api\";\n//   // Helper to get the auth token from localStorage\n//   const getAuthHeaders = () => {\n//     const token = localStorage.getItem(\"token\");\n//     return {\n//       \"Content-Type\": \"application/json\",\n//       Authorization: `Bearer ${token}`,\n//     };\n//   };\n//   useEffect(() => {\n//     fetchBudgets();\n//   }, []);\n//   const fetchBudgets = async () => {\n//     try {\n//       const res = await fetch(`${apiUrl}/budgetplan`, {\n//         headers: getAuthHeaders(),\n//       });\n//       if (!res.ok) throw new Error(\"Failed to fetch budget plans\");\n//       const data = await res.json();\n//       setBudgets(data);\n//     } catch (err) {\n//       setError(err.message);\n//     }\n//   };\n//   const handleSubmit = async () => {\n//     if (!name || !total) {\n//       setError(\"Name and Total are required\");\n//       return;\n//     }\n//     try {\n//       const res = await fetch(`${apiUrl}/budgetplan`, {\n//         method: \"POST\",\n//         headers: getAuthHeaders(),\n//         body: JSON.stringify({\n//           name,\n//           total: Number(total),\n//           spent: Number(spent) || 0,\n//           items: Number(items) || 0,\n//           icon: icon || \"ðŸ’°\",\n//         }),\n//       });\n//       if (!res.ok) throw new Error(\"Failed to create budget plan\");\n//       setMessage(\"Budget plan created successfully!\");\n//       // Clear form fields\n//       setName(\"\");\n//       setTotal(\"\");\n//       setSpent(\"\");\n//       setItems(\"\");\n//       setIcon(\"\");\n//       fetchBudgets();\n//       setTimeout(() => setMessage(\"\"), 3000);\n//     } catch (err) {\n//       setError(err.message);\n//     }\n//   };\n//   const handleDelete = async (id) => {\n//     if (window.confirm(\"Are you sure you want to delete this budget plan?\")) {\n//       try {\n//         const res = await fetch(`${apiUrl}/budgetplan/${id}`, {\n//           method: \"DELETE\",\n//           headers: getAuthHeaders(),\n//         });\n//         if (!res.ok) throw new Error(\"Failed to delete budget plan\");\n//         setMessage(\"Budget plan deleted successfully\");\n//         fetchBudgets();\n//         setTimeout(() => setMessage(\"\"), 3000);\n//       } catch (err) {\n//         setError(err.message);\n//       }\n//     }\n//   };\n//   const handleEdit = (plan) => {\n//     setEditId(plan._id);\n//     setEditName(plan.name);\n//     setEditTotal(plan.total);\n//     setEditSpent(plan.spent);\n//     setEditItems(plan.items);\n//     setEditIcon(plan.icon);\n//   };\n//   const handleUpdate = async () => {\n//     if (!editName || !editTotal) {\n//       setError(\"Name and Total are required\");\n//       return;\n//     }\n//     try {\n//       const res = await fetch(`${apiUrl}/budgetplan/${editId}`, {\n//         method: \"PUT\",\n//         headers: getAuthHeaders(),\n//         body: JSON.stringify({\n//           name: editName,\n//           total: Number(editTotal),\n//           spent: Number(editSpent) || 0,\n//           items: Number(editItems) || 0,\n//           icon: editIcon || \"ðŸ’°\",\n//         }),\n//       });\n//       if (!res.ok) throw new Error(\"Failed to update budget plan\");\n//       setMessage(\"Budget plan updated successfully\");\n//       fetchBudgets();\n//       setTimeout(() => setMessage(\"\"), 3000);\n//       setEditId(null); // Reset edit form\n//     } catch (err) {\n//       setError(err.message);\n//     }\n//   };\n//   return (\n//     <div className={styles.wrapper}>\n//       <Navigation />\n//       <div className={styles.container}>\n//         <h1 className={styles.title}>Budget Plans</h1>\n//         {message && <div className={styles.message}>{message}</div>}\n//         {error && <div className={styles.error}>{error}</div>}\n//         <form>\n//           <div>\n//             <label>Name</label>\n//             <input\n//               type=\"text\"\n//               value={name}\n//               onChange={(e) => setName(e.target.value)}\n//             />\n//           </div>\n//           <div>\n//             <label>Total</label>\n//             <input\n//               type=\"number\"\n//               value={total}\n//               onChange={(e) => setTotal(e.target.value)}\n//             />\n//           </div>\n//           <div>\n//             <label>Spent</label>\n//             <input\n//               type=\"number\"\n//               value={spent}\n//               onChange={(e) => setSpent(e.target.value)}\n//             />\n//           </div>\n//           <div>\n//             <label>Items</label>\n//             <input\n//               type=\"number\"\n//               value={items}\n//               onChange={(e) => setItems(e.target.value)}\n//             />\n//           </div>\n//           <div>\n//             <label>Icon</label>\n//             <input\n//               type=\"text\"\n//               value={icon}\n//               onChange={(e) => setIcon(e.target.value)}\n//             />\n//           </div>\n//           <button type=\"button\" onClick={handleSubmit}>Create Plan</button>\n//         </form>\n//         {budgets.length === 0 && <p>No budget plans found.</p>}\n//         <ul>\n//           {budgets.map((plan) => (\n//             <li key={plan._id}>\n//               <span>{plan.name}</span> - <span>{plan.total}</span>\n//               <button onClick={() => handleEdit(plan)}>Edit</button>\n//               <button onClick={() => handleDelete(plan._id)}>Delete</button>\n//             </li>\n//           ))}\n//         </ul>\n//         {editId && (\n//           <div>\n//             <h2>Edit Budget Plan</h2>\n//             <input\n//               type=\"text\"\n//               value={editName}\n//               onChange={(e) => setEditName(e.target.value)}\n//             />\n//             <input\n//               type=\"number\"\n//               value={editTotal}\n//               onChange={(e) => setEditTotal(e.target.value)}\n//             />\n//             <button onClick={handleUpdate}>Save</button>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n// export default BudgetPlan;","map":{"version":3,"sources":["C:/Users/Aishwarya/Desktop/PRACTICE/newwexpo/expo - Copy/client/src/components/Budgetplan/index.jsx"],"names":[],"mappingssourcesContent":["// // BudgetPlan.jsx (Frontend)\n// import React, { useState, useEffect } from \"react\";\n// import styles from \"./styles.module.css\";\n// import Navigation from \"../NavBar\";\n\n// const BudgetPlan = () => {\n//   const [budgets, setBudgets] = useState([]);\n//   const [error, setError] = useState(\"\");\n//   const [message, setMessage] = useState(\"\");\n\n//   // Form state for creating a new budget plan\n//   const [name, setName] = useState(\"\");\n//   const [total, setTotal] = useState(\"\");\n//   const [spent, setSpent] = useState(\"\");\n//   const [items, setItems] = useState(\"\");\n//   const [icon, setIcon] = useState(\"\");\n\n//   const [editId, setEditId] = useState(null);\n//   const [editName, setEditName] = useState(\"\");\n//   const [editTotal, setEditTotal] = useState(\"\");\n//   const [editSpent, setEditSpent] = useState(\"\");\n//   const [editItems, setEditItems] = useState(\"\");\n//   const [editIcon, setEditIcon] = useState(\"\");\n\n//   const apiUrl = \"http://localhost:8080/api\";\n\n//   // Helper to get the auth token from localStorage\n//   const getAuthHeaders = () => {\n//     const token = localStorage.getItem(\"token\");\n//     return {\n//       \"Content-Type\": \"application/json\",\n//       Authorization: `Bearer ${token}`,\n//     };\n//   };\n\n//   useEffect(() => {\n//     fetchBudgets();\n//   }, []);\n\n//   const fetchBudgets = async () => {\n//     try {\n//       const res = await fetch(`${apiUrl}/budgetplan`, {\n//         headers: getAuthHeaders(),\n//       });\n//       if (!res.ok) throw new Error(\"Failed to fetch budget plans\");\n//       const data = await res.json();\n//       setBudgets(data);\n//     } catch (err) {\n//       setError(err.message);\n//     }\n//   };\n\n//   const handleSubmit = async () => {\n//     if (!name || !total) {\n//       setError(\"Name and Total are required\");\n//       return;\n//     }\n//     try {\n//       const res = await fetch(`${apiUrl}/budgetplan`, {\n//         method: \"POST\",\n//         headers: getAuthHeaders(),\n//         body: JSON.stringify({\n//           name,\n//           total: Number(total),\n//           spent: Number(spent) || 0,\n//           items: Number(items) || 0,\n//           icon: icon || \"ðŸ’°\",\n//         }),\n//       });\n//       if (!res.ok) throw new Error(\"Failed to create budget plan\");\n//       setMessage(\"Budget plan created successfully!\");\n//       // Clear form fields\n//       setName(\"\");\n//       setTotal(\"\");\n//       setSpent(\"\");\n//       setItems(\"\");\n//       setIcon(\"\");\n//       fetchBudgets();\n//       setTimeout(() => setMessage(\"\"), 3000);\n//     } catch (err) {\n//       setError(err.message);\n//     }\n//   };\n\n//   const handleDelete = async (id) => {\n//     if (window.confirm(\"Are you sure you want to delete this budget plan?\")) {\n//       try {\n//         const res = await fetch(`${apiUrl}/budgetplan/${id}`, {\n//           method: \"DELETE\",\n//           headers: getAuthHeaders(),\n//         });\n//         if (!res.ok) throw new Error(\"Failed to delete budget plan\");\n//         setMessage(\"Budget plan deleted successfully\");\n//         fetchBudgets();\n//         setTimeout(() => setMessage(\"\"), 3000);\n//       } catch (err) {\n//         setError(err.message);\n//       }\n//     }\n//   };\n\n//   const handleEdit = (plan) => {\n//     setEditId(plan._id);\n//     setEditName(plan.name);\n//     setEditTotal(plan.total);\n//     setEditSpent(plan.spent);\n//     setEditItems(plan.items);\n//     setEditIcon(plan.icon);\n//   };\n\n//   const handleUpdate = async () => {\n//     if (!editName || !editTotal) {\n//       setError(\"Name and Total are required\");\n//       return;\n//     }\n//     try {\n//       const res = await fetch(`${apiUrl}/budgetplan/${editId}`, {\n//         method: \"PUT\",\n//         headers: getAuthHeaders(),\n//         body: JSON.stringify({\n//           name: editName,\n//           total: Number(editTotal),\n//           spent: Number(editSpent) || 0,\n//           items: Number(editItems) || 0,\n//           icon: editIcon || \"ðŸ’°\",\n//         }),\n//       });\n//       if (!res.ok) throw new Error(\"Failed to update budget plan\");\n//       setMessage(\"Budget plan updated successfully\");\n//       fetchBudgets();\n//       setTimeout(() => setMessage(\"\"), 3000);\n//       setEditId(null); // Reset edit form\n//     } catch (err) {\n//       setError(err.message);\n//     }\n//   };\n\n//   return (\n//     <div className={styles.wrapper}>\n//       <Navigation />\n//       <div className={styles.container}>\n//         <h1 className={styles.title}>Budget Plans</h1>\n//         {message && <div className={styles.message}>{message}</div>}\n//         {error && <div className={styles.error}>{error}</div>}\n\n//         <form>\n//           <div>\n//             <label>Name</label>\n//             <input\n//               type=\"text\"\n//               value={name}\n//               onChange={(e) => setName(e.target.value)}\n//             />\n//           </div>\n//           <div>\n//             <label>Total</label>\n//             <input\n//               type=\"number\"\n//               value={total}\n//               onChange={(e) => setTotal(e.target.value)}\n//             />\n//           </div>\n//           <div>\n//             <label>Spent</label>\n//             <input\n//               type=\"number\"\n//               value={spent}\n//               onChange={(e) => setSpent(e.target.value)}\n//             />\n//           </div>\n//           <div>\n//             <label>Items</label>\n//             <input\n//               type=\"number\"\n//               value={items}\n//               onChange={(e) => setItems(e.target.value)}\n//             />\n//           </div>\n//           <div>\n//             <label>Icon</label>\n//             <input\n//               type=\"text\"\n//               value={icon}\n//               onChange={(e) => setIcon(e.target.value)}\n//             />\n//           </div>\n//           <button type=\"button\" onClick={handleSubmit}>Create Plan</button>\n//         </form>\n\n//         {budgets.length === 0 && <p>No budget plans found.</p>}\n\n//         <ul>\n//           {budgets.map((plan) => (\n//             <li key={plan._id}>\n//               <span>{plan.name}</span> - <span>{plan.total}</span>\n//               <button onClick={() => handleEdit(plan)}>Edit</button>\n//               <button onClick={() => handleDelete(plan._id)}>Delete</button>\n//             </li>\n//           ))}\n//         </ul>\n\n//         {editId && (\n//           <div>\n//             <h2>Edit Budget Plan</h2>\n//             <input\n//               type=\"text\"\n//               value={editName}\n//               onChange={(e) => setEditName(e.target.value)}\n//             />\n//             <input\n//               type=\"number\"\n//               value={editTotal}\n//               onChange={(e) => setEditTotal(e.target.value)}\n//             />\n//             <button onClick={handleUpdate}>Save</button>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default BudgetPlan;\n"]},"metadata":{},"sourceType":"module"}