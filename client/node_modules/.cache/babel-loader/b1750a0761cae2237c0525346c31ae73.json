{"ast":null,"code":"// import { useState, useEffect } from \"react\";\n// import { Bar } from \"react-chartjs-2\";\n// import { Chart as ChartJS } from \"chart.js\";\n// import { BarElement, CategoryScale, LinearScale, Title, Tooltip, Legend } from \"chart.js\";\n// // Register necessary Chart.js components\n// ChartJS.register(BarElement, CategoryScale, LinearScale, Title, Tooltip, Legend);\n// export default function BudgetChart() {\n//     const [budgets, setBudgets] = useState([]);\n//     const apiUrl = \"http://localhost:8080/api\"; // Your backend URL\n//     useEffect(() => {\n//         fetchBudgets();\n//     }, []);\n//     const fetchBudgets = async () => {\n//         try {\n//             const res = await fetch(`${apiUrl}/budgetplan`);\n//             if (!res.ok) {\n//                 throw new Error(\"Failed to fetch data\");\n//             }\n//             const budgetData = await res.json();\n//             console.log(\"Budget Data:\", budgetData); // Debugging log\n//             setBudgets(budgetData);\n//         } catch (err) {\n//             console.error(\"Error fetching data:\", err);\n//         }\n//     };\n//     // Process the budget data\n//     const labels = budgets.map((budget) => budget.name); // Budget names as labels\n//     const budgetData = budgets.map((budget) => budget.total); // Total budget for each category\n//     const expenseData = budgets.map((budget) => budget.spent); // Amount spent for each category\n//     const chartData = {\n//         labels,\n//         datasets: [\n//             {\n//                 label: \"Spent\",\n//                 data: expenseData,\n//                 backgroundColor: \"#ffcc00\", // Dark yellow for spending\n//                 borderColor: \"#e6a800\",     // Even darker yellow for border\n//                 borderWidth: 1,\n//                 stack: \"stack1\", // Stack group for spending\n//             },\n//             {\n//                 label: \"Remaining Budget\",\n//                 data: budgetData.map((total, index) => total - expenseData[index]), // Remaining budget\n//                 backgroundColor: \"#ffeb99\", // Light yellow for remaining budget\n//                 borderColor: \"#ffcc00\",     // Dark yellow for border\n//                 borderWidth: 1,\n//                 stack: \"stack1\", // Stack group for remaining budget\n//             },\n//         ],\n//     };\n//     return (\n//         <div className=\"container\">\n//             <h3>Budget vs Spending</h3>\n//             <Bar data={chartData} options={{\n//                 responsive: true,\n//                 plugins: {\n//                     title: {\n//                         display: true,\n//                         text: \"Budget vs Spending Chart\",\n//                     },\n//                     tooltip: {\n//                         enabled: true,\n//                     }\n//                 },\n//                 scales: {\n//                     y: {\n//                         beginAtZero: true,\n//                         stacked: true, // Enable stacking on Y-axis\n//                     },\n//                     x: {\n//                         stacked: true, // Enable stacking on X-axis\n//                     },\n//                 },\n//             }} />\n//         </div>\n//     );\n// }","map":{"version":3,"sources":["C:/Users/Aishwarya/Desktop/PRACTICE/newwexpo/expo - Copy/client/src/components/Bargraph/bargraph.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import { useState, useEffect } from \"react\";\r\n// import { Bar } from \"react-chartjs-2\";\r\n// import { Chart as ChartJS } from \"chart.js\";\r\n// import { BarElement, CategoryScale, LinearScale, Title, Tooltip, Legend } from \"chart.js\";\r\n\r\n// // Register necessary Chart.js components\r\n// ChartJS.register(BarElement, CategoryScale, LinearScale, Title, Tooltip, Legend);\r\n\r\n// export default function BudgetChart() {\r\n//     const [budgets, setBudgets] = useState([]);\r\n//     const apiUrl = \"http://localhost:8080/api\"; // Your backend URL\r\n\r\n//     useEffect(() => {\r\n//         fetchBudgets();\r\n//     }, []);\r\n\r\n//     const fetchBudgets = async () => {\r\n//         try {\r\n//             const res = await fetch(`${apiUrl}/budgetplan`);\r\n            \r\n//             if (!res.ok) {\r\n//                 throw new Error(\"Failed to fetch data\");\r\n//             }\r\n            \r\n//             const budgetData = await res.json();\r\n//             console.log(\"Budget Data:\", budgetData); // Debugging log\r\n\r\n//             setBudgets(budgetData);\r\n//         } catch (err) {\r\n//             console.error(\"Error fetching data:\", err);\r\n//         }\r\n//     };\r\n\r\n//     // Process the budget data\r\n//     const labels = budgets.map((budget) => budget.name); // Budget names as labels\r\n//     const budgetData = budgets.map((budget) => budget.total); // Total budget for each category\r\n//     const expenseData = budgets.map((budget) => budget.spent); // Amount spent for each category\r\n\r\n//     const chartData = {\r\n//         labels,\r\n//         datasets: [\r\n//             {\r\n//                 label: \"Spent\",\r\n//                 data: expenseData,\r\n//                 backgroundColor: \"#ffcc00\", // Dark yellow for spending\r\n//                 borderColor: \"#e6a800\",     // Even darker yellow for border\r\n//                 borderWidth: 1,\r\n//                 stack: \"stack1\", // Stack group for spending\r\n//             },\r\n//             {\r\n//                 label: \"Remaining Budget\",\r\n//                 data: budgetData.map((total, index) => total - expenseData[index]), // Remaining budget\r\n//                 backgroundColor: \"#ffeb99\", // Light yellow for remaining budget\r\n//                 borderColor: \"#ffcc00\",     // Dark yellow for border\r\n//                 borderWidth: 1,\r\n//                 stack: \"stack1\", // Stack group for remaining budget\r\n//             },\r\n//         ],\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"container\">\r\n//             <h3>Budget vs Spending</h3>\r\n//             <Bar data={chartData} options={{\r\n//                 responsive: true,\r\n//                 plugins: {\r\n//                     title: {\r\n//                         display: true,\r\n//                         text: \"Budget vs Spending Chart\",\r\n//                     },\r\n//                     tooltip: {\r\n//                         enabled: true,\r\n//                     }\r\n//                 },\r\n//                 scales: {\r\n//                     y: {\r\n//                         beginAtZero: true,\r\n//                         stacked: true, // Enable stacking on Y-axis\r\n//                     },\r\n//                     x: {\r\n//                         stacked: true, // Enable stacking on X-axis\r\n//                     },\r\n//                 },\r\n//             }} />\r\n//         </div>\r\n//     );\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}