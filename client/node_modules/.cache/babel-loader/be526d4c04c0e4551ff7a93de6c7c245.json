{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aishwarya\\\\Desktop\\\\PRACTICE\\\\expo\\\\client\\\\src\\\\components\\\\Main\\\\index.jsx\";\nimport React from \"react\";\nimport \"./app.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sections = [{\n  id: 5,\n  title: \"Strings [Basic and Medium]\",\n  progress: \"15/71\"\n}, {\n  id: 6,\n  title: \"Learn LinkedList [Single LL, Double LL, Medium, Hard Problems]\",\n  progress: \"15/31\"\n}, {\n  id: 7,\n  title: \"Recursion [PatternWise]\",\n  progress: \"0/25\"\n}, {\n  id: 8,\n  title: \"Bit Manipulation [Concepts & Problems]\",\n  progress: \"13/18\"\n}, {\n  id: 9,\n  title: \"Stack and Queues [Learning, Pre-In-Post-fix, Monotonic Stack, Implementation]\",\n  progress: \"5/30\"\n}, {\n  id: 10,\n  title: \"Sliding Window & Two Pointer Combined Problems\",\n  progress: \"0/12\"\n}, {\n  id: 11,\n  title: \"Heaps [Learning, Medium, Hard Problems]\",\n  progress: \"0/17\"\n}, {\n  id: 12,\n  title: \"Greedy Algorithms [Easy, Medium/Hard]\",\n  progress: \"0/16\"\n}];\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"DSA Sheets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Striver's A2Z Sheet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Striver's SDE Sheet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Striver's 79 Sheet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Blind 75 Sheet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: sections.map(section => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-title\",\n          children: section.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${parseInt(section.progress.split(\"/\")[0]) / parseInt(section.progress.split(\"/\")[1]) * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-text\",\n          children: section.progress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, section.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Aishwarya/Desktop/PRACTICE/expo/client/src/components/Main/index.jsx"],"names":["React","sections","id","title","progress","App","map","section","width","parseInt","split"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;AAEA,MAAMC,QAAQ,GAAG,CACf;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,4BAAhB;AAA8CC,EAAAA,QAAQ,EAAE;AAAxD,CADe,EAEf;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,gEAAhB;AAAkFC,EAAAA,QAAQ,EAAE;AAA5F,CAFe,EAGf;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,yBAAhB;AAA2CC,EAAAA,QAAQ,EAAE;AAArD,CAHe,EAIf;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,wCAAhB;AAA0DC,EAAAA,QAAQ,EAAE;AAApE,CAJe,EAKf;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,+EAAhB;AAAiGC,EAAAA,QAAQ,EAAE;AAA3G,CALe,EAMf;AAAEF,EAAAA,EAAE,EAAE,EAAN;AAAUC,EAAAA,KAAK,EAAE,gDAAjB;AAAmEC,EAAAA,QAAQ,EAAE;AAA7E,CANe,EAOf;AAAEF,EAAAA,EAAE,EAAE,EAAN;AAAUC,EAAAA,KAAK,EAAE,yCAAjB;AAA4DC,EAAAA,QAAQ,EAAE;AAAtE,CAPe,EAQf;AAAEF,EAAAA,EAAE,EAAE,EAAN;AAAUC,EAAAA,KAAK,EAAE,uCAAjB;AAA0DC,EAAAA,QAAQ,EAAE;AAApE,CARe,CAAjB;;AAWA,MAAMC,GAAG,GAAG,MAAM;AAChB,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACGJ,QAAQ,CAACK,GAAT,CAAcC,OAAD,iBACZ;AAAsB,QAAA,SAAS,EAAC,SAAhC;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,oBAAgCA,OAAO,CAACJ;AAAxC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,iCACE;AACE,YAAA,SAAS,EAAC,eADZ;AAEE,YAAA,KAAK,EAAE;AACLK,cAAAA,KAAK,EAAG,GAAGC,QAAQ,CAACF,OAAO,CAACH,QAAR,CAAiBM,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,CAAD,CAAR,GAA2CD,QAAQ,CAACF,OAAO,CAACH,QAAR,CAAiBM,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,CAAD,CAApD,GAAwF,GAAI;AADjG;AAFT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAUE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,oBAAgCH,OAAO,CAACH;AAAxC;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA,SAAUG,OAAO,CAACL,EAAlB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CA9BD;;KAAMG,G;AAgCN,eAAeA,GAAf","sourcesContent":["\nimport React from \"react\";\nimport \"./app.css\";\n\nconst sections = [\n  { id: 5, title: \"Strings [Basic and Medium]\", progress: \"15/71\" },\n  { id: 6, title: \"Learn LinkedList [Single LL, Double LL, Medium, Hard Problems]\", progress: \"15/31\" },\n  { id: 7, title: \"Recursion [PatternWise]\", progress: \"0/25\" },\n  { id: 8, title: \"Bit Manipulation [Concepts & Problems]\", progress: \"13/18\" },\n  { id: 9, title: \"Stack and Queues [Learning, Pre-In-Post-fix, Monotonic Stack, Implementation]\", progress: \"5/30\" },\n  { id: 10, title: \"Sliding Window & Two Pointer Combined Problems\", progress: \"0/12\" },\n  { id: 11, title: \"Heaps [Learning, Medium, Hard Problems]\", progress: \"0/17\" },\n  { id: 12, title: \"Greedy Algorithms [Easy, Medium/Hard]\", progress: \"0/16\" },\n];\n\nconst App = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"sidebar\">\n        <h2>DSA Sheets</h2>\n        <ul>\n          <li>Striver's A2Z Sheet</li>\n          <li>Striver's SDE Sheet</li>\n          <li>Striver's 79 Sheet</li>\n          <li>Blind 75 Sheet</li>\n        </ul>\n      </div>\n      <div className=\"main-content\">\n        {sections.map((section) => (\n          <div key={section.id} className=\"section\">\n            <div className=\"section-title\">{section.title}</div>\n            <div className=\"progress-bar\">\n              <div\n                className=\"progress-fill\"\n                style={{\n                  width: `${(parseInt(section.progress.split(\"/\")[0]) / parseInt(section.progress.split(\"/\")[1])) * 100}%`,\n                }}\n              ></div>\n            </div>\n            <div className=\"progress-text\">{section.progress}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}