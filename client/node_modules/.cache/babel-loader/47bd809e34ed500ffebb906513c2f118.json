{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aishwarya\\\\Desktop\\\\PRACTICE\\\\expo\\\\client\\\\src\\\\components\\\\DashBoard\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport styles from \"./styles.module.css\";\nimport Footer from \"../footer/index\";\nimport Cal from \"../Calendar/cal\";\nimport Pie from \"../piechart/Pie\";\nimport Navigation from \"../NavBar/index\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\"; // Register chart components\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\nconst Main = () => {\n  _s();\n\n  const apiUrl = \"http://localhost:8080\";\n  const [incomes, setIncomes] = useState([]);\n  const [expense, setExpense] = useState([]);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    getItems();\n    getExItems();\n  }, []);\n\n  const WeeklyExpenseChart = _ref => {\n    let {\n      expenses = []\n    } = _ref;\n\n    // Get ISO date strings for the current week's Monday to Sunday\n    const getCurrentWeekDates = () => {\n      const today = new Date();\n      const dayOfWeek = today.getDay(); // 0 (Sun) ... 6 (Sat)\n      // Calculate Monday: if today is Sunday (0), ((0 + 6) % 7) = 6 days back.\n\n      const monday = new Date(today);\n      monday.setDate(today.getDate() - (dayOfWeek + 6) % 7);\n      const weekDates = [];\n\n      for (let i = 0; i < 7; i++) {\n        const currentDate = new Date(monday);\n        currentDate.setDate(monday.getDate() + i);\n        weekDates.push(currentDate.toISOString().split(\"T\")[0]);\n      }\n\n      return weekDates;\n    }; // Compute labels and data for the current week\n\n\n    const getWeekData = () => {\n      const weekDates = getCurrentWeekDates(); // Sum expenses for each day of the week\n\n      const weekData = weekDates.map(dateStr => {\n        return expenses.reduce((sum, expense) => {\n          // Assume expense.date is an ISO string (or similar) and compare only the date portion.\n          const expenseDate = expense.date.split(\"T\")[0];\n          return expenseDate === dateStr ? sum + expense.amount : sum;\n        }, 0);\n      }); // Format labels as \"Day(dd|mm|yyyy)\"\n\n      const dayNames = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n      const weekLabels = weekDates.map((dateStr, index) => {\n        const d = new Date(dateStr);\n        const day = d.getDate();\n        const month = String(d.getMonth() + 1).padStart(2, \"0\");\n        const year = d.getFullYear();\n        return `${dayNames[index]}(${day}|${month}|${year})`;\n      });\n      return {\n        weekLabels,\n        weekData\n      };\n    };\n\n    const {\n      weekLabels,\n      weekData\n    } = getWeekData(); // Prepare the chart data\n\n    const chartData = {\n      labels: weekLabels,\n      datasets: [{\n        label: \"Weekly Spending\",\n        data: weekData,\n        borderColor: \"rgb(75,192,197)\",\n        backgroundColor: \"rgba(75,192,197,0.2)\",\n        tension: 0.4\n      }]\n    };\n\n    const getItems = () => {\n      fetch(`${apiUrl}/income`).then(res => res.json()).then(res => setIncomes(res)).catch(() => setError(\"Failed to fetch incomes\"));\n    };\n\n    const getExItems = () => {\n      fetch(`${apiUrl}/expense`).then(res => res.json()).then(res => setExpense(res)).catch(() => setError(\"Failed to fetch expenses\"));\n    }; // Ensure `amount` is properly accessed\n\n\n    const totalIncome = incomes.reduce((sum, item) => sum + item.Amount, 0);\n    const totalExpense = expense.reduce((sum, item) => sum + (item.amount || 0), 0);\n    const remainingBalance = totalIncome - totalExpense;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.main_container,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.con,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.money,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.Total,\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\"Total Income: \", /*#__PURE__*/_jsxDEV(\"sect\", {\n                  className: styles.num,\n                  children: [\"$\", totalIncome]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 47\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\"Total Expense: \", /*#__PURE__*/_jsxDEV(\"sect\", {\n                  className: styles.num2,\n                  children: [\"$\", totalExpense]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 48\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.remain,\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\"Remaining: \", /*#__PURE__*/_jsxDEV(\"sect\", {\n                  className: styles.num3,\n                  children: [\"$\", remainingBalance]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 44\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.piechart,\n            children: /*#__PURE__*/_jsxDEV(Pie, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.cal,\n            children: /*#__PURE__*/_jsxDEV(Cal, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.line,\n          children: [\"      \", /*#__PURE__*/_jsxDEV(Line, {\n            data: chartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 52\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.foot,\n          children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this);\n  };\n};\n\n_s(Main, \"zCRvZMRPzQN7sQVVchBa45pokqw=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/Aishwarya/Desktop/PRACTICE/expo/client/src/components/DashBoard/index.jsx"],"names":["useEffect","useState","styles","Footer","Cal","Pie","Navigation","React","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","register","Main","apiUrl","incomes","setIncomes","expense","setExpense","error","setError","getItems","getExItems","WeeklyExpenseChart","expenses","getCurrentWeekDates","today","Date","dayOfWeek","getDay","monday","setDate","getDate","weekDates","i","currentDate","push","toISOString","split","getWeekData","weekData","map","dateStr","reduce","sum","expenseDate","date","amount","dayNames","weekLabels","index","d","day","month","String","getMonth","padStart","year","getFullYear","chartData","labels","datasets","label","data","borderColor","backgroundColor","tension","fetch","then","res","json","catch","totalIncome","item","Amount","totalExpense","remainingBalance","main_container","con","money","Total","num","num2","remain","num3","piechart","cal","line","foot"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport styles from \"./styles.module.css\";\nimport Footer from \"../footer/index\";\nimport Cal from \"../Calendar/cal\";\nimport Pie from \"../piechart/Pie\";\nimport Navigation from \"../NavBar/index\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\n\n// Register chart components\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\nconst Main = () => {\n    const apiUrl = \"http://localhost:8080\";\n    const [incomes, setIncomes] = useState([]);\n    const [expense, setExpense] = useState([]);\n    const [error, setError] = useState(\"\");\n\n    useEffect(() => {\n        getItems();\n        getExItems();\n    }, []);\n    const WeeklyExpenseChart = ({ expenses = [] }) => {\n        // Get ISO date strings for the current week's Monday to Sunday\n        const getCurrentWeekDates = () => {\n          const today = new Date();\n          const dayOfWeek = today.getDay(); // 0 (Sun) ... 6 (Sat)\n          // Calculate Monday: if today is Sunday (0), ((0 + 6) % 7) = 6 days back.\n          const monday = new Date(today);\n          monday.setDate(today.getDate() - ((dayOfWeek + 6) % 7));\n      \n          const weekDates = [];\n          for (let i = 0; i < 7; i++) {\n            const currentDate = new Date(monday);\n            currentDate.setDate(monday.getDate() + i);\n            weekDates.push(currentDate.toISOString().split(\"T\")[0]);\n          }\n          return weekDates;\n        };\n      \n        // Compute labels and data for the current week\n        const getWeekData = () => {\n          const weekDates = getCurrentWeekDates();\n      \n          // Sum expenses for each day of the week\n          const weekData = weekDates.map((dateStr) => {\n            return expenses.reduce((sum, expense) => {\n              // Assume expense.date is an ISO string (or similar) and compare only the date portion.\n              const expenseDate = expense.date.split(\"T\")[0];\n              return expenseDate === dateStr ? sum + expense.amount : sum;\n            }, 0);\n          });\n      \n          // Format labels as \"Day(dd|mm|yyyy)\"\n          const dayNames = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n          const weekLabels = weekDates.map((dateStr, index) => {\n            const d = new Date(dateStr);\n            const day = d.getDate();\n            const month = String(d.getMonth() + 1).padStart(2, \"0\");\n            const year = d.getFullYear();\n            return `${dayNames[index]}(${day}|${month}|${year})`;\n          });\n      \n          return { weekLabels, weekData };\n        };\n      \n        const { weekLabels, weekData } = getWeekData();\n      \n        // Prepare the chart data\n        const chartData = {\n          labels: weekLabels,\n          datasets: [\n            {\n              label: \"Weekly Spending\",\n              data: weekData,\n              borderColor: \"rgb(75,192,197)\",\n              backgroundColor: \"rgba(75,192,197,0.2)\",\n              tension: 0.4,\n            },\n          ],\n        };\n    const getItems = () => {\n        fetch(`${apiUrl}/income`)\n            .then((res) => res.json())\n            .then((res) => setIncomes(res))\n            .catch(() => setError(\"Failed to fetch incomes\"));\n    };\n\n    const getExItems = () => {\n        fetch(`${apiUrl}/expense`)\n            .then((res) => res.json())\n            .then((res) => setExpense(res))\n            .catch(() => setError(\"Failed to fetch expenses\"));\n    };\n\n    // Ensure `amount` is properly accessed\n    const totalIncome = incomes.reduce((sum, item) => sum + item.Amount, 0);\n    const totalExpense = expense.reduce((sum, item) => sum + (item.amount || 0), 0);\n    const remainingBalance = totalIncome - totalExpense; \n\n    return (\n        <div>\n            <Navigation />\n            <div className={styles.main_container}>\n                <div className={styles.con}>\n                    <div className={styles.money}>\n                        <div className={styles.Total}>\n                            <h2>Total Income: <sect className={styles.num}>${totalIncome}</sect></h2>\n                            <h2>Total Expense: <sect className={styles.num2}>${totalExpense}</sect></h2>\n                        </div>\n                        <br />\n                        <div className={styles.remain}>\n                            <h2>Remaining: <sect className={styles.num3}>${remainingBalance}</sect></h2>\n                        </div>\n                    </div>\n                    <br />\n                    <div className={styles.piechart}><Pie /></div>\n                    <br />\n                    <div className={styles.cal}><Cal /></div>\n                </div>\n                <div className={styles.line}>      <Line data={chartData} />\n                </div>\n                <div className={styles.foot}><Footer /></div>\n            </div>\n        </div>\n    );\n};\n}\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}