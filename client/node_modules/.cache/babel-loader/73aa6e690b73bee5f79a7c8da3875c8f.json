{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aishwarya\\\\Desktop\\\\PRACTICE\\\\newwexpo\\\\expo - Copy\\\\client\\\\src\\\\components\\\\Expense\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Navigation from \"../NavBar\";\nimport styles from \"./style.module.css\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport default function CombinedExpense() {\n  _s();\n\n  // Form state for adding/updating an expense\n  const [expenseType, setExpenseType] = useState(\"Monthly\");\n  const [expense, setExpense] = useState(\"transportation\"); // default source\n\n  const [amount, setAmount] = useState(\"\");\n  const [reference, setReference] = useState(\"\");\n  const [date, setDate] = useState(\"\"); // Data state\n\n  const [expenses, setExpenses] = useState([]);\n  const [graphData, setGraphData] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\"); // Editing state\n\n  const [editId, setEditId] = useState(null);\n  const [editExpenseType, setEditExpenseType] = useState(\"Monthly\");\n  const [editExpense, setEditExpense] = useState(\"transportation\");\n  const [editAmount, setEditAmount] = useState(\"\");\n  const [editReference, setEditReference] = useState(\"\");\n  const [editDate, setEditDate] = useState(\"\"); // API URL for expense routes\n\n  const apiUrl = \"http://localhost:8080/api/expense\"; // Helper to get auth headers (JWT from localStorage)\n\n  const getAuthHeaders = () => {\n    const token = localStorage.getItem(\"token\");\n    return {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    };\n  }; // Fetch all expenses and graph data when component mounts\n\n\n  useEffect(() => {\n    getItems();\n    fetchGraphData();\n  }, []); // Fetch expenses from backend with auth headers\n\n  const getItems = () => {\n    fetch(apiUrl, {\n      method: \"GET\",\n      headers: getAuthHeaders()\n    }).then(res => res.json()).then(data => setExpenses(data)).catch(() => setError(\"Failed to fetch expenses\"));\n  }; // Fetch aggregated daily expense data for the graph with auth headers\n\n\n  const fetchGraphData = () => {\n    fetch(`${apiUrl}/graph/daily`, {\n      method: \"GET\",\n      headers: getAuthHeaders()\n    }).then(res => res.json()).then(data => setGraphData(data)).catch(err => console.error(\"Error fetching graph data\", err));\n  }; // Add a new expense with auth headers\n\n\n  const handleSubmit = () => {\n    setError(\"\");\n\n    if (!expense.trim() || !amount.trim() || !date.trim()) {\n      setError(\"Expense, Amount, and Date are required.\");\n      return;\n    }\n\n    const payload = {\n      expenseType,\n      expense,\n      amount: Number(amount),\n      reference,\n      date\n    };\n    fetch(apiUrl, {\n      method: \"POST\",\n      headers: getAuthHeaders(),\n      body: JSON.stringify(payload)\n    }).then(res => res.json()).then(() => {\n      setMessage(\"Expense added successfully\"); // Reset form fields\n\n      setExpenseType(\"Monthly\");\n      setExpense(\"transportation\");\n      setAmount(\"\");\n      setReference(\"\");\n      setDate(\"\");\n      setTimeout(() => setMessage(\"\"), 3000);\n      getItems();\n      fetchGraphData();\n    }).catch(() => setError(\"Unable to create expense entry\"));\n  }; // Delete an expense with auth headers\n\n\n  const handleDelete = id => {\n    if (window.confirm(\"Are you sure you want to delete this?\")) {\n      fetch(`${apiUrl}/${id}`, {\n        method: \"DELETE\",\n        headers: getAuthHeaders()\n      }).then(() => {\n        setMessage(\"Expense deleted successfully\");\n        setTimeout(() => setMessage(\"\"), 3000);\n        getItems();\n        fetchGraphData();\n      }).catch(() => setError(\"Unable to delete expense entry\"));\n    }\n  }; // Set editing state for an expense entry\n\n\n  const handleEdit = item => {\n    setEditId(item._id);\n    setEditExpenseType(item.expenseType);\n    setEditExpense(item.expense);\n    setEditAmount(item.amount);\n    setEditReference(item.reference);\n    setEditDate(item.date.substring(0, 10));\n  }; // Update an expense entry with auth headers\n\n\n  const handleUpdate = () => {\n    setError(\"\");\n\n    if (!editExpense.trim() || !editAmount.toString().trim() || !editDate.trim()) {\n      setError(\"Expense, Amount, and Date are required.\");\n      return;\n    }\n\n    const payload = {\n      expenseType: editExpenseType,\n      expense: editExpense,\n      amount: Number(editAmount),\n      reference: editReference,\n      date: editDate\n    };\n    fetch(`${apiUrl}/${editId}`, {\n      method: \"PUT\",\n      headers: getAuthHeaders(),\n      body: JSON.stringify(payload)\n    }).then(res => res.json()).then(() => {\n      setMessage(\"Expense updated successfully\");\n      setTimeout(() => setMessage(\"\"), 3000);\n      setEditId(null);\n      getItems();\n      fetchGraphData();\n    }).catch(() => setError(\"Unable to update expense entry\"));\n  }; // Calculate total expense amount\n\n\n  const totalExpense = expenses.reduce((sum, item) => sum + item.amount, 0); // Prepare data for the daily expense graph\n\n  const chartData = {\n    labels: graphData.map(d => d._id),\n    datasets: [{\n      label: \"Daily Expense\",\n      data: graphData.map(d => d.totalAmount),\n      fill: false,\n      borderColor: \"#ff6384\",\n      tension: 0.1\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: \"top\"\n      },\n      title: {\n        display: true,\n        text: \"Daily Expense Graph\"\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: editId ? \"Edit Expense\" : \"Add Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.success_msg,\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [editId ? /*#__PURE__*/_jsxDEV(\"select\", {\n            value: editExpenseType,\n            onChange: e => setEditExpenseType(e.target.value),\n            className: styles.formControl,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Monthly\",\n              children: \"Monthly\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Daily\",\n              children: \"Daily\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n            value: expenseType,\n            onChange: e => setExpenseType(e.target.value),\n            className: styles.formControl,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Monthly\",\n              children: \"Monthly\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Daily\",\n              children: \"Daily\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), editId ? /*#__PURE__*/_jsxDEV(\"select\", {\n            value: editExpense,\n            onChange: e => setEditExpense(e.target.value),\n            className: styles.formControl,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"transportation\",\n              children: \"transportation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"entertainment\",\n              children: \"entertainment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"utilities\",\n              children: \"utilities\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"shopping\",\n              children: \"shopping\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"groceries\",\n              children: \"groceries\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"anyother\",\n              children: \"anyother\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n            value: expense,\n            onChange: e => setExpense(e.target.value),\n            className: styles.formControl,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"transportation\",\n              children: \"transportation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"entertainment\",\n              children: \"entertainment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"utilities\",\n              children: \"utilities\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"shopping\",\n              children: \"shopping\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"groceries\",\n              children: \"groceries\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"anyother\",\n              children: \"anyother\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this), editId ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Amount\",\n            value: editAmount,\n            onChange: e => setEditAmount(e.target.value),\n            className: styles.formControl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Amount\",\n            value: amount,\n            onChange: e => setAmount(e.target.value),\n            className: styles.formControl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this), editId ? /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Reference (optional)\",\n            value: editReference,\n            onChange: e => setEditReference(e.target.value),\n            className: styles.formControl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Reference (optional)\",\n            value: reference,\n            onChange: e => setReference(e.target.value),\n            className: styles.formControl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this), editId ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: editDate,\n            onChange: e => setEditDate(e.target.value),\n            className: styles.formControl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: date,\n            onChange: e => setDate(e.target.value),\n            className: styles.formControl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this), editId ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.buttonGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.btnSuccess,\n              onClick: handleUpdate,\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.btnSecondary,\n              onClick: () => setEditId(null),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.btnDark,\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.error_msg,\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.tableContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Expense List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: styles.table,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Expense Source\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Reference\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: expenses.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.expenseType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.expense\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", item.amount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.reference || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(item.date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: styles.btnWarning,\n                  onClick: () => handleEdit(item),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: styles.btnDanger,\n                  onClick: () => handleDelete(item._id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 19\n              }, this)]\n            }, item._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.totalExpense,\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Total Expense: $\", totalExpense.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.graphContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Daily Expense Graph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: \"400px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            data: chartData,\n            options: chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CombinedExpense, \"FGRXQIcMeCFrDpwo1FOS4qtY5/I=\");\n\n_c = CombinedExpense;\n\nvar _c;\n\n$RefreshReg$(_c, \"CombinedExpense\");","map":{"version":3,"sources":["C:/Users/Aishwarya/Desktop/PRACTICE/newwexpo/expo - Copy/client/src/components/Expense/index.jsx"],"names":["useEffect","useState","Navigation","styles","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","register","CombinedExpense","expenseType","setExpenseType","expense","setExpense","amount","setAmount","reference","setReference","date","setDate","expenses","setExpenses","graphData","setGraphData","error","setError","message","setMessage","editId","setEditId","editExpenseType","setEditExpenseType","editExpense","setEditExpense","editAmount","setEditAmount","editReference","setEditReference","editDate","setEditDate","apiUrl","getAuthHeaders","token","localStorage","getItem","getItems","fetchGraphData","fetch","method","headers","then","res","json","data","catch","err","console","handleSubmit","trim","payload","Number","body","JSON","stringify","setTimeout","handleDelete","id","window","confirm","handleEdit","item","_id","substring","handleUpdate","toString","totalExpense","reduce","sum","chartData","labels","map","d","datasets","label","totalAmount","fill","borderColor","tension","chartOptions","responsive","maintainAspectRatio","plugins","legend","position","title","display","text","container","formContainer","success_msg","formGroup","e","target","value","formControl","buttonGroup","btnSuccess","btnSecondary","btnDark","error_msg","tableContainer","table","Date","toLocaleDateString","btnWarning","btnDanger","toFixed","graphContainer","height"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";  \nimport Navigation from \"../NavBar\";\nimport styles from \"./style.module.css\";\nimport { Line } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nexport default function CombinedExpense() {\n  // Form state for adding/updating an expense\n  const [expenseType, setExpenseType] = useState(\"Monthly\");\n  const [expense, setExpense] = useState(\"transportation\"); // default source\n  const [amount, setAmount] = useState(\"\");\n  const [reference, setReference] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n\n  // Data state\n  const [expenses, setExpenses] = useState([]);\n  const [graphData, setGraphData] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  // Editing state\n  const [editId, setEditId] = useState(null);\n  const [editExpenseType, setEditExpenseType] = useState(\"Monthly\");\n  const [editExpense, setEditExpense] = useState(\"transportation\");\n  const [editAmount, setEditAmount] = useState(\"\");\n  const [editReference, setEditReference] = useState(\"\");\n  const [editDate, setEditDate] = useState(\"\");\n\n  // API URL for expense routes\n  const apiUrl = \"http://localhost:8080/api/expense\";\n\n  // Helper to get auth headers (JWT from localStorage)\n  const getAuthHeaders = () => {\n    const token = localStorage.getItem(\"token\");\n    return {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`,\n    };\n  };\n\n  // Fetch all expenses and graph data when component mounts\n  useEffect(() => {\n    getItems();\n    fetchGraphData();\n  }, []);\n\n  // Fetch expenses from backend with auth headers\n  const getItems = () => {\n    fetch(apiUrl, { method: \"GET\", headers: getAuthHeaders() })\n      .then((res) => res.json())\n      .then((data) => setExpenses(data))\n      .catch(() => setError(\"Failed to fetch expenses\"));\n  };\n\n  // Fetch aggregated daily expense data for the graph with auth headers\n  const fetchGraphData = () => {\n    fetch(`${apiUrl}/graph/daily`, { method: \"GET\", headers: getAuthHeaders() })\n      .then((res) => res.json())\n      .then((data) => setGraphData(data))\n      .catch((err) => console.error(\"Error fetching graph data\", err));\n  };\n\n  // Add a new expense with auth headers\n  const handleSubmit = () => {\n    setError(\"\");\n    if (!expense.trim() || !amount.trim() || !date.trim()) {\n      setError(\"Expense, Amount, and Date are required.\");\n      return;\n    }\n    const payload = { expenseType, expense, amount: Number(amount), reference, date };\n\n    fetch(apiUrl, {\n      method: \"POST\",\n      headers: getAuthHeaders(),\n      body: JSON.stringify(payload),\n    })\n      .then((res) => res.json())\n      .then(() => {\n        setMessage(\"Expense added successfully\");\n        // Reset form fields\n        setExpenseType(\"Monthly\");\n        setExpense(\"transportation\");\n        setAmount(\"\");\n        setReference(\"\");\n        setDate(\"\");\n        setTimeout(() => setMessage(\"\"), 3000);\n        getItems();\n        fetchGraphData();\n      })\n      .catch(() => setError(\"Unable to create expense entry\"));\n  };\n\n  // Delete an expense with auth headers\n  const handleDelete = (id) => {\n    if (window.confirm(\"Are you sure you want to delete this?\")) {\n      fetch(`${apiUrl}/${id}`, { method: \"DELETE\", headers: getAuthHeaders() })\n        .then(() => {\n          setMessage(\"Expense deleted successfully\");\n          setTimeout(() => setMessage(\"\"), 3000);\n          getItems();\n          fetchGraphData();\n        })\n        .catch(() => setError(\"Unable to delete expense entry\"));\n    }\n  };\n\n  // Set editing state for an expense entry\n  const handleEdit = (item) => {\n    setEditId(item._id);\n    setEditExpenseType(item.expenseType);\n    setEditExpense(item.expense);\n    setEditAmount(item.amount);\n    setEditReference(item.reference);\n    setEditDate(item.date.substring(0, 10));\n  };\n\n  // Update an expense entry with auth headers\n  const handleUpdate = () => {\n    setError(\"\");\n    if (!editExpense.trim() || !editAmount.toString().trim() || !editDate.trim()) {\n      setError(\"Expense, Amount, and Date are required.\");\n      return;\n    }\n    const payload = {\n      expenseType: editExpenseType,\n      expense: editExpense,\n      amount: Number(editAmount),\n      reference: editReference,\n      date: editDate,\n    };\n\n    fetch(`${apiUrl}/${editId}`, {\n      method: \"PUT\",\n      headers: getAuthHeaders(),\n      body: JSON.stringify(payload),\n    })\n      .then((res) => res.json())\n      .then(() => {\n        setMessage(\"Expense updated successfully\");\n        setTimeout(() => setMessage(\"\"), 3000);\n        setEditId(null);\n        getItems();\n        fetchGraphData();\n      })\n      .catch(() => setError(\"Unable to update expense entry\"));\n  };\n\n  // Calculate total expense amount\n  const totalExpense = expenses.reduce((sum, item) => sum + item.amount, 0);\n\n  // Prepare data for the daily expense graph\n  const chartData = {\n    labels: graphData.map((d) => d._id),\n    datasets: [\n      {\n        label: \"Daily Expense\",\n        data: graphData.map((d) => d.totalAmount),\n        fill: false,\n        borderColor: \"#ff6384\",\n        tension: 0.1,\n      },\n    ],\n  };\n\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: { position: \"top\" },\n      title: { display: true, text: \"Daily Expense Graph\" },\n    },\n  };\n\n  return (\n    <div>\n      <Navigation />\n      <div className={styles.container}>\n        {/* Form Container */}\n        <div className={styles.formContainer}>\n          <h3>{editId ? \"Edit Expense\" : \"Add Expense\"}</h3>\n          {message && <div className={styles.success_msg}>{message}</div>}\n          <div className={styles.formGroup}>\n            {/* Expense Type Dropdown */}\n            {editId ? (\n              <select\n                value={editExpenseType}\n                onChange={(e) => setEditExpenseType(e.target.value)}\n                className={styles.formControl}\n              >\n                <option value=\"Monthly\">Monthly</option>\n                <option value=\"Daily\">Daily</option>\n              </select>\n            ) : (\n              <select\n                value={expenseType}\n                onChange={(e) => setExpenseType(e.target.value)}\n                className={styles.formControl}\n              >\n                <option value=\"Monthly\">Monthly</option>\n                <option value=\"Daily\">Daily</option>\n              </select>\n            )}\n\n            {/* Expense Source Dropdown */}\n            {editId ? (\n              <select\n                value={editExpense}\n                onChange={(e) => setEditExpense(e.target.value)}\n                className={styles.formControl}\n              >\n                <option value=\"transportation\">transportation</option>\n                <option value=\"entertainment\">entertainment</option>\n                <option value=\"utilities\">utilities</option>\n                <option value=\"shopping\">shopping</option>\n                <option value=\"groceries\">groceries</option>\n                <option value=\"anyother\">anyother</option>\n              </select>\n            ) : (\n              <select\n                value={expense}\n                onChange={(e) => setExpense(e.target.value)}\n                className={styles.formControl}\n              >\n                <option value=\"transportation\">transportation</option>\n                <option value=\"entertainment\">entertainment</option>\n                <option value=\"utilities\">utilities</option>\n                <option value=\"shopping\">shopping</option>\n                <option value=\"groceries\">groceries</option>\n                <option value=\"anyother\">anyother</option>\n              </select>\n            )}\n\n            {editId ? (\n              <input\n                type=\"number\"\n                placeholder=\"Amount\"\n                value={editAmount}\n                onChange={(e) => setEditAmount(e.target.value)}\n                className={styles.formControl}\n              />\n            ) : (\n              <input\n                type=\"number\"\n                placeholder=\"Amount\"\n                value={amount}\n                onChange={(e) => setAmount(e.target.value)}\n                className={styles.formControl}\n              />\n            )}\n\n            {editId ? (\n              <input\n                placeholder=\"Reference (optional)\"\n                value={editReference}\n                onChange={(e) => setEditReference(e.target.value)}\n                className={styles.formControl}\n              />\n            ) : (\n              <input\n                placeholder=\"Reference (optional)\"\n                value={reference}\n                onChange={(e) => setReference(e.target.value)}\n                className={styles.formControl}\n              />\n            )}\n\n            {editId ? (\n              <input\n                type=\"date\"\n                value={editDate}\n                onChange={(e) => setEditDate(e.target.value)}\n                className={styles.formControl}\n              />\n            ) : (\n              <input\n                type=\"date\"\n                value={date}\n                onChange={(e) => setDate(e.target.value)}\n                className={styles.formControl}\n              />\n            )}\n\n            {editId ? (\n              <div className={styles.buttonGroup}>\n                <button className={styles.btnSuccess} onClick={handleUpdate}>\n                  Update\n                </button>\n                <button className={styles.btnSecondary} onClick={() => setEditId(null)}>\n                  Cancel\n                </button>\n              </div>\n            ) : (\n              <button className={styles.btnDark} onClick={handleSubmit}>\n                Submit\n              </button>\n            )}\n          </div>\n          {error && <div className={styles.error_msg}>{error}</div>}\n        </div>\n\n        {/* Expense Table */}\n        <div className={styles.tableContainer}>\n          <h3>Expense List</h3>\n          <table className={styles.table}>\n            <thead>\n              <tr>\n                <th>Type</th>\n                <th>Expense Source</th>\n                <th>Amount</th>\n                <th>Reference</th>\n                <th>Date</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {expenses.map((item) => (\n                <tr key={item._id}>\n                  <td>{item.expenseType}</td>\n                  <td>{item.expense}</td>\n                  <td>${item.amount}</td>\n                  <td>{item.reference || \"N/A\"}</td>\n                  <td>{new Date(item.date).toLocaleDateString()}</td>\n                  <td>\n                    <button className={styles.btnWarning} onClick={() => handleEdit(item)}>\n                      Edit\n                    </button>\n                    <button className={styles.btnDanger} onClick={() => handleDelete(item._id)}>\n                      Delete\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n\n        {/* Total Expense Display */}\n        <div className={styles.totalExpense}>\n          <h4>Total Expense: ${totalExpense.toFixed(2)}</h4>\n        </div>\n\n        {/* Daily Expense Graph */}\n        <div className={styles.graphContainer}>\n          <h3>Daily Expense Graph</h3>\n          {/* Wrap the Line component in a div with a fixed height */}\n          <div style={{ height: \"400px\" }}>\n            <Line data={chartData} options={chartOptions} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}