{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aishwarya\\\\Desktop\\\\PRACTICE\\\\newwexpo\\\\expo\\\\client\\\\src\\\\components\\\\Expense\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Navigation from \"../NavBar\";\nimport styles from \"./style.module.css\"; // CSS Module for styling\n\nimport Line from \"../Linegraph/Line\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CombinedExpense() {\n  _s();\n\n  // Form state for adding/updating an expense\n  // Default expenseType now set to a budget category (e.g., \"Shopping\")\n  const [expenseType, setExpenseType] = useState(\"Shopping\");\n  const [expense, setExpense] = useState(\"Groceries\");\n  const [amount, setAmount] = useState(\"\");\n  const [reference, setReference] = useState(\"\");\n  const [date, setDate] = useState(\"\"); // Data state\n\n  const [expenses, setExpenses] = useState([]);\n  const [graphData, setGraphData] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\"); // Editing state\n\n  const [editId, setEditId] = useState(null);\n  const [editExpenseType, setEditExpenseType] = useState(\"Shopping\");\n  const [editExpense, setEditExpense] = useState(\"Groceries\");\n  const [editAmount, setEditAmount] = useState(\"\");\n  const [editReference, setEditReference] = useState(\"\");\n  const [editDate, setEditDate] = useState(\"\");\n  const apiUrl = \"http://localhost:8080/api/expense\"; // Fetch all expenses and graph data when component mounts\n\n  useEffect(() => {\n    getItems();\n    fetchGraphData();\n  }, []); // Fetch expenses from backend\n\n  const getItems = () => {\n    fetch(apiUrl, {\n      method: \"GET\"\n    }).then(res => res.json()).then(data => setExpenses(data)).catch(() => setError(\"Failed to fetch expenses\"));\n  }; // Fetch aggregated daily expense data for the graph\n\n\n  const fetchGraphData = () => {\n    fetch(`${apiUrl}/graph/daily`, {\n      method: \"GET\"\n    }).then(res => res.json()).then(data => setGraphData(data)).catch(err => console.error(\"Error fetching graph data\", err));\n  }; // Add a new expense\n\n\n  const handleSubmit = () => {\n    setError(\"\");\n\n    if (!expense.trim() || !amount.trim() || !date.trim()) {\n      setError(\"Expense, Amount, and Date are required.\");\n      return;\n    }\n\n    const payload = {\n      expenseType,\n      expense,\n      amount: Number(amount),\n      reference,\n      date\n    };\n    fetch(apiUrl, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(payload)\n    }).then(res => res.json()).then(() => {\n      setMessage(\"Expense added successfully\"); // Reset form fields\n\n      setExpenseType(\"Shopping\");\n      setExpense(\"Groceries\");\n      setAmount(\"\");\n      setReference(\"\");\n      setDate(\"\");\n      setTimeout(() => setMessage(\"\"), 3000);\n      getItems();\n      fetchGraphData();\n    }).catch(() => setError(\"Unable to create expense entry\"));\n  }; // Delete an expense\n\n\n  const handleDelete = id => {\n    if (window.confirm(\"Are you sure you want to delete this?\")) {\n      fetch(`${apiUrl}/${id}`, {\n        method: \"DELETE\"\n      }).then(() => {\n        setMessage(\"Expense deleted successfully\");\n        setTimeout(() => setMessage(\"\"), 3000);\n        getItems();\n        fetchGraphData();\n      }).catch(() => setError(\"Unable to delete expense entry\"));\n    }\n  }; // Set editing state for an expense entry\n\n\n  const handleEdit = item => {\n    setEditId(item._id);\n    setEditExpenseType(item.expenseType);\n    setEditExpense(item.expense);\n    setEditAmount(item.amount);\n    setEditReference(item.reference); // If the date is in ISO format, take only the date part (YYYY-MM-DD)\n\n    setEditDate(item.date.substring(0, 10));\n  }; // Update an expense entry\n\n\n  const handleUpdate = () => {\n    setError(\"\");\n\n    if (!editExpense.trim() || !editAmount.toString().trim() || !editDate.trim()) {\n      setError(\"Expense, Amount, and Date are required.\");\n      return;\n    }\n\n    const payload = {\n      expenseType: editExpenseType,\n      expense: editExpense,\n      amount: Number(editAmount),\n      reference: editReference,\n      date: editDate\n    };\n    fetch(`${apiUrl}/${editId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(payload)\n    }).then(res => res.json()).then(() => {\n      setMessage(\"Expense updated successfully\");\n      setTimeout(() => setMessage(\"\"), 3000);\n      setEditId(null);\n      getItems();\n      fetchGraphData();\n    }).catch(() => setError(\"Unable to update expense entry\"));\n  }; // Calculate total expense amount\n\n\n  const totalExpense = expenses.reduce((sum, item) => sum + item.amount, 0); // Prepare data for the daily expense graph\n\n  const chartData = {\n    labels: graphData.map(d => d._id),\n    datasets: [{\n      label: \"Daily Expense\",\n      data: graphData.map(d => d.totalAmount),\n      fill: false,\n      borderColor: \"#ff6384\",\n      tension: 0.1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: editId ? \"Edit Expense\" : \"Add Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.success_msg,\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [editId ? /*#__PURE__*/_jsxDEV(\"select\", {\n            value: editExpenseType,\n            onChange: e => setEditExpenseType(e.target.value),\n            className: styles.formControl,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Shopping\",\n              children: \"Shopping\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Home Decor\",\n              children: \"Home Decor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Garden\",\n              children: \"Garden\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Car\",\n              children: \"Car\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Youtube\",\n              children: \"Youtube\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n            value: expenseType,\n            onChange: e => setExpenseType(e.target.value),\n            className: styles.formControl,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Shopping\",\n              children: \"Shopping\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Home Decor\",\n              children: \"Home Decor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Garden\",\n              children: \"Garden\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Car\",\n              children: \"Car\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Youtube\",\n              children: \"Youtube\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), editId ? /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Expense Name\",\n            value: editExpense,\n            onChange: e => setEditExpense(e.target.value),\n            className: styles.formControl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Expense Name\",\n            value: expense,\n            onChange: e => setExpense(e.target.value),\n            className: styles.formControl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), editId ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Amount\",\n            value: editAmount,\n            onChange: e => setEditAmount(e.target.value),\n            className: styles.formControl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Amount\",\n            value: amount,\n            onChange: e => setAmount(e.target.value),\n            className: styles.formControl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), editId ? /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Reference (optional)\",\n            value: editReference,\n            onChange: e => setEditReference(e.target.value),\n            className: styles.formControl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Reference (optional)\",\n            value: reference,\n            onChange: e => setReference(e.target.value),\n            className: styles.formControl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), editId ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: editDate,\n            onChange: e => setEditDate(e.target.value),\n            className: styles.formControl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: date,\n            onChange: e => setDate(e.target.value),\n            className: styles.formControl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this), editId ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.buttonGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.btnSuccess,\n              onClick: handleUpdate,\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.btnSecondary,\n              onClick: () => setEditId(null),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.btnDark,\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.error_msg,\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.tableContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Expense List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: styles.table,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Expense Source\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Reference\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: expenses.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.expenseType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.expense\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", item.amount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.reference || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(item.date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: styles.btnWarning,\n                  onClick: () => handleEdit(item),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: styles.btnDanger,\n                  onClick: () => handleDelete(item._id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 19\n              }, this)]\n            }, item._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.totalExpense,\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Total Expense: $\", totalExpense.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.graphContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Daily Expense Graph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          data: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CombinedExpense, \"eepgTsIyceT0BbJbbICoF7JoKow=\");\n\n_c = CombinedExpense;\n\nvar _c;\n\n$RefreshReg$(_c, \"CombinedExpense\");","map":{"version":3,"sources":["C:/Users/Aishwarya/Desktop/PRACTICE/newwexpo/expo/client/src/components/Expense/index.jsx"],"names":["useEffect","useState","Navigation","styles","Line","CombinedExpense","expenseType","setExpenseType","expense","setExpense","amount","setAmount","reference","setReference","date","setDate","expenses","setExpenses","graphData","setGraphData","error","setError","message","setMessage","editId","setEditId","editExpenseType","setEditExpenseType","editExpense","setEditExpense","editAmount","setEditAmount","editReference","setEditReference","editDate","setEditDate","apiUrl","getItems","fetchGraphData","fetch","method","then","res","json","data","catch","err","console","handleSubmit","trim","payload","Number","headers","body","JSON","stringify","setTimeout","handleDelete","id","window","confirm","handleEdit","item","_id","substring","handleUpdate","toString","totalExpense","reduce","sum","chartData","labels","map","d","datasets","label","totalAmount","fill","borderColor","tension","container","formContainer","success_msg","formGroup","e","target","value","formControl","buttonGroup","btnSuccess","btnSecondary","btnDark","error_msg","tableContainer","table","Date","toLocaleDateString","btnWarning","btnDanger","toFixed","graphContainer"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\"; \nimport Navigation from \"../NavBar\";\nimport styles from \"./style.module.css\"; // CSS Module for styling\nimport Line from \"../Linegraph/Line\";\n\nexport default function CombinedExpense() {\n  // Form state for adding/updating an expense\n  // Default expenseType now set to a budget category (e.g., \"Shopping\")\n  const [expenseType, setExpenseType] = useState(\"Shopping\");\n  const [expense, setExpense] = useState(\"Groceries\");\n  const [amount, setAmount] = useState(\"\");\n  const [reference, setReference] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n\n  // Data state\n  const [expenses, setExpenses] = useState([]);\n  const [graphData, setGraphData] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  // Editing state\n  const [editId, setEditId] = useState(null);\n  const [editExpenseType, setEditExpenseType] = useState(\"Shopping\");\n  const [editExpense, setEditExpense] = useState(\"Groceries\");\n  const [editAmount, setEditAmount] = useState(\"\");\n  const [editReference, setEditReference] = useState(\"\");\n  const [editDate, setEditDate] = useState(\"\");\n\n  const apiUrl = \"http://localhost:8080/api/expense\";\n\n  // Fetch all expenses and graph data when component mounts\n  useEffect(() => {\n    getItems();\n    fetchGraphData();\n  }, []);\n\n  // Fetch expenses from backend\n  const getItems = () => {\n    fetch(apiUrl, { method: \"GET\" })\n      .then((res) => res.json())\n      .then((data) => setExpenses(data))\n      .catch(() => setError(\"Failed to fetch expenses\"));\n  };\n\n  // Fetch aggregated daily expense data for the graph\n  const fetchGraphData = () => {\n    fetch(`${apiUrl}/graph/daily`, { method: \"GET\" })\n      .then((res) => res.json())\n      .then((data) => setGraphData(data))\n      .catch((err) => console.error(\"Error fetching graph data\", err));\n  };\n\n  // Add a new expense\n  const handleSubmit = () => {\n    setError(\"\");\n    if (!expense.trim() || !amount.trim() || !date.trim()) {\n      setError(\"Expense, Amount, and Date are required.\");\n      return;\n    }\n    const payload = { expenseType, expense, amount: Number(amount), reference, date };\n\n    fetch(apiUrl, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(payload),\n    })\n      .then((res) => res.json())\n      .then(() => {\n        setMessage(\"Expense added successfully\");\n        // Reset form fields\n        setExpenseType(\"Shopping\");\n        setExpense(\"Groceries\");\n        setAmount(\"\");\n        setReference(\"\");\n        setDate(\"\");\n        setTimeout(() => setMessage(\"\"), 3000);\n        getItems();\n        fetchGraphData();\n      })\n      .catch(() => setError(\"Unable to create expense entry\"));\n  };\n\n  // Delete an expense\n  const handleDelete = (id) => {\n    if (window.confirm(\"Are you sure you want to delete this?\")) {\n      fetch(`${apiUrl}/${id}`, { method: \"DELETE\" })\n        .then(() => {\n          setMessage(\"Expense deleted successfully\");\n          setTimeout(() => setMessage(\"\"), 3000);\n          getItems();\n          fetchGraphData();\n        })\n        .catch(() => setError(\"Unable to delete expense entry\"));\n    }\n  };\n\n  // Set editing state for an expense entry\n  const handleEdit = (item) => {\n    setEditId(item._id);\n    setEditExpenseType(item.expenseType);\n    setEditExpense(item.expense);\n    setEditAmount(item.amount);\n    setEditReference(item.reference);\n    // If the date is in ISO format, take only the date part (YYYY-MM-DD)\n    setEditDate(item.date.substring(0, 10));\n  };\n\n  // Update an expense entry\n  const handleUpdate = () => {\n    setError(\"\");\n    if (!editExpense.trim() || !editAmount.toString().trim() || !editDate.trim()) {\n      setError(\"Expense, Amount, and Date are required.\");\n      return;\n    }\n    const payload = {\n      expenseType: editExpenseType,\n      expense: editExpense,\n      amount: Number(editAmount),\n      reference: editReference,\n      date: editDate,\n    };\n\n    fetch(`${apiUrl}/${editId}`, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(payload),\n    })\n      .then((res) => res.json())\n      .then(() => {\n        setMessage(\"Expense updated successfully\");\n        setTimeout(() => setMessage(\"\"), 3000);\n        setEditId(null);\n        getItems();\n        fetchGraphData();\n      })\n      .catch(() => setError(\"Unable to update expense entry\"));\n  };\n\n  // Calculate total expense amount\n  const totalExpense = expenses.reduce((sum, item) => sum + item.amount, 0);\n\n  // Prepare data for the daily expense graph\n  const chartData = {\n    labels: graphData.map((d) => d._id),\n    datasets: [\n      {\n        label: \"Daily Expense\",\n        data: graphData.map((d) => d.totalAmount),\n        fill: false,\n        borderColor: \"#ff6384\",\n        tension: 0.1,\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <Navigation />\n      <div className={styles.container}>\n        {/* Form Container */}\n        <div className={styles.formContainer}>\n          <h3>{editId ? \"Edit Expense\" : \"Add Expense\"}</h3>\n          {message && <div className={styles.success_msg}>{message}</div>}\n          <div className={styles.formGroup}>\n            {editId ? (\n              <select\n                value={editExpenseType}\n                onChange={(e) => setEditExpenseType(e.target.value)}\n                className={styles.formControl}\n              >\n                <option value=\"Shopping\">Shopping</option>\n                <option value=\"Home Decor\">Home Decor</option>\n                <option value=\"Garden\">Garden</option>\n                <option value=\"Car\">Car</option>\n                <option value=\"Youtube\">Youtube</option>\n              </select>\n            ) : (\n              <select\n                value={expenseType}\n                onChange={(e) => setExpenseType(e.target.value)}\n                className={styles.formControl}\n              >\n                <option value=\"Shopping\">Shopping</option>\n                <option value=\"Home Decor\">Home Decor</option>\n                <option value=\"Garden\">Garden</option>\n                <option value=\"Car\">Car</option>\n                <option value=\"Youtube\">Youtube</option>\n              </select>\n            )}\n\n            {editId ? (\n              <input\n                placeholder=\"Expense Name\"\n                value={editExpense}\n                onChange={(e) => setEditExpense(e.target.value)}\n                className={styles.formControl}\n              />\n            ) : (\n              <input\n                placeholder=\"Expense Name\"\n                value={expense}\n                onChange={(e) => setExpense(e.target.value)}\n                className={styles.formControl}\n              />\n            )}\n\n            {editId ? (\n              <input\n                type=\"number\"\n                placeholder=\"Amount\"\n                value={editAmount}\n                onChange={(e) => setEditAmount(e.target.value)}\n                className={styles.formControl}\n              />\n            ) : (\n              <input\n                type=\"number\"\n                placeholder=\"Amount\"\n                value={amount}\n                onChange={(e) => setAmount(e.target.value)}\n                className={styles.formControl}\n              />\n            )}\n\n            {editId ? (\n              <input\n                placeholder=\"Reference (optional)\"\n                value={editReference}\n                onChange={(e) => setEditReference(e.target.value)}\n                className={styles.formControl}\n              />\n            ) : (\n              <input\n                placeholder=\"Reference (optional)\"\n                value={reference}\n                onChange={(e) => setReference(e.target.value)}\n                className={styles.formControl}\n              />\n            )}\n\n            {editId ? (\n              <input\n                type=\"date\"\n                value={editDate}\n                onChange={(e) => setEditDate(e.target.value)}\n                className={styles.formControl}\n              />\n            ) : (\n              <input\n                type=\"date\"\n                value={date}\n                onChange={(e) => setDate(e.target.value)}\n                className={styles.formControl}\n              />\n            )}\n\n            {editId ? (\n              <div className={styles.buttonGroup}>\n                <button className={styles.btnSuccess} onClick={handleUpdate}>\n                  Update\n                </button>\n                <button className={styles.btnSecondary} onClick={() => setEditId(null)}>\n                  Cancel\n                </button>\n              </div>\n            ) : (\n              <button className={styles.btnDark} onClick={handleSubmit}>\n                Submit\n              </button>\n            )}\n          </div>\n          {error && <div className={styles.error_msg}>{error}</div>}\n        </div>\n\n        {/* Expense Table */}\n        <div className={styles.tableContainer}>\n          <h3>Expense List</h3>\n          <table className={styles.table}>\n            <thead>\n              <tr>\n                <th>Type</th>\n                <th>Expense Source</th>\n                <th>Amount</th>\n                <th>Reference</th>\n                <th>Date</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {expenses.map((item) => (\n                <tr key={item._id}>\n                  <td>{item.expenseType}</td>\n                  <td>{item.expense}</td>\n                  <td>${item.amount}</td>\n                  <td>{item.reference || \"N/A\"}</td>\n                  <td>{new Date(item.date).toLocaleDateString()}</td>\n                  <td>\n                    <button className={styles.btnWarning} onClick={() => handleEdit(item)}>\n                      Edit\n                    </button>\n                    <button className={styles.btnDanger} onClick={() => handleDelete(item._id)}>\n                      Delete\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n\n        {/* Total Expense Display */}\n        <div className={styles.totalExpense}>\n          <h4>Total Expense: ${totalExpense.toFixed(2)}</h4>\n        </div>\n\n        {/* Daily Expense Graph */}\n        <div className={styles.graphContainer}>\n          <h3>Daily Expense Graph</h3>\n          <Line data={chartData} />\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}