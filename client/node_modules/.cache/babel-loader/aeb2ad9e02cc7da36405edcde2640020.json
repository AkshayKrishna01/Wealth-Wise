{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aishwarya\\\\Desktop\\\\PRACTICE\\\\newwexpo\\\\expo\\\\client\\\\src\\\\components\\\\piechart\\\\Pie.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(Tooltip, Legend, ArcElement);\n\nconst PieChart = () => {\n  _s();\n\n  const apiUrl = \"http://localhost:8080\";\n  const [incomes, setIncomes] = useState([]);\n  const [expense, setExpense] = useState([]);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    getItems();\n    getExItems();\n  }, []);\n\n  const getItems = () => {\n    fetch(`${apiUrl}/income`).then(res => res.json()).then(res => setIncomes(res)).catch(() => setError(\"Failed to fetch incomes\"));\n  };\n\n  const getExItems = () => {\n    fetch(`${apiUrl}/api/expense`).then(res => res.json()).then(res => setExpense(res)).catch(() => setError(\"Failed to fetch expenses\"));\n  }; // Ensure `amount` is properly accessed\n\n\n  const totalIncome = incomes.reduce((sum, item) => sum + item.Amount, 0);\n  const totalExpense = expense.reduce((sum, item) => sum + (item.amount || 0), 0);\n  const remainingBalance = totalIncome - totalExpense;\n  const PieChartData = {\n    labels: [\"Remaining\", \"Expense\"],\n    datasets: [{\n      label: \"Money spent\",\n      data: [totalExpense, remainingBalance],\n      backgroundColor: [\"black\", \"grey\"],\n      hoverOffset: 4\n    }]\n  };\n  const options = {};\n  return /*#__PURE__*/_jsxDEV(Pie, {\n    options: options,\n    data: PieChartData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 11\n  }, this);\n};\n\n_s(PieChart, \"zCRvZMRPzQN7sQVVchBa45pokqw=\");\n\n_c = PieChart;\nexport default PieChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"PieChart\");","map":{"version":3,"sources":["C:/Users/Aishwarya/Desktop/PRACTICE/newwexpo/expo/client/src/components/piechart/Pie.jsx"],"names":["useEffect","useState","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","register","PieChart","apiUrl","incomes","setIncomes","expense","setExpense","error","setError","getItems","getExItems","fetch","then","res","json","catch","totalIncome","reduce","sum","item","Amount","totalExpense","amount","remainingBalance","PieChartData","labels","datasets","label","data","backgroundColor","hoverOffset","options"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,SAASC,GAAT,QAAoB,iBAApB;AACA,SACIC,KAAK,IAAIC,OADb,EAEIC,UAFJ,EAGIC,OAHJ,EAIIC,MAJJ,QAKO,UALP;;AAOAH,OAAO,CAACI,QAAR,CACIF,OADJ,EAEIC,MAFJ,EAGIF,UAHJ;;AAMA,MAAMI,QAAQ,GAAC,MAAI;AAAA;;AACf,QAAMC,MAAM,GAAG,uBAAf;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,QAAQ;AACRC,IAAAA,UAAU;AACb,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMD,QAAQ,GAAG,MAAM;AACnBE,IAAAA,KAAK,CAAE,GAAET,MAAO,SAAX,CAAL,CACKU,IADL,CACWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADnB,EAEKF,IAFL,CAEWC,GAAD,IAAST,UAAU,CAACS,GAAD,CAF7B,EAGKE,KAHL,CAGW,MAAMP,QAAQ,CAAC,yBAAD,CAHzB;AAIH,GALD;;AAOA,QAAME,UAAU,GAAG,MAAM;AACrBC,IAAAA,KAAK,CAAE,GAAET,MAAO,cAAX,CAAL,CACKU,IADL,CACWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADnB,EAEKF,IAFL,CAEWC,GAAD,IAASP,UAAU,CAACO,GAAD,CAF7B,EAGKE,KAHL,CAGW,MAAMP,QAAQ,CAAC,0BAAD,CAHzB;AAIH,GALD,CAlBe,CAyBf;;;AACA,QAAMQ,WAAW,GAAGb,OAAO,CAACc,MAAR,CAAe,CAACC,GAAD,EAAMC,IAAN,KAAeD,GAAG,GAAGC,IAAI,CAACC,MAAzC,EAAiD,CAAjD,CAApB;AACA,QAAMC,YAAY,GAAGhB,OAAO,CAACY,MAAR,CAAe,CAACC,GAAD,EAAMC,IAAN,KAAeD,GAAG,IAAIC,IAAI,CAACG,MAAL,IAAe,CAAnB,CAAjC,EAAwD,CAAxD,CAArB;AACA,QAAMC,gBAAgB,GAAGP,WAAW,GAAGK,YAAvC;AAEH,QAAMG,YAAY,GAAC;AAChBC,IAAAA,MAAM,EAAC,CAAC,WAAD,EAAa,SAAb,CADS;AAEhBC,IAAAA,QAAQ,EAAC,CAAC;AACNC,MAAAA,KAAK,EAAC,aADA;AAENC,MAAAA,IAAI,EAAC,CAACP,YAAD,EAAcE,gBAAd,CAFC;AAGNM,MAAAA,eAAe,EAAC,CACZ,OADY,EACJ,MADI,CAHV;AAMNC,MAAAA,WAAW,EAAC;AANN,KAAD;AAFO,GAAnB;AAWG,QAAMC,OAAO,GAAC,EAAd;AACA,sBAAM,QAAC,GAAD;AAAK,IAAA,OAAO,EAAEA,OAAd;AAAuB,IAAA,IAAI,EAAEP;AAA7B;AAAA;AAAA;AAAA;AAAA,UAAN;AACH,CA3CD;;GAAMvB,Q;;KAAAA,Q;AA4CN,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nimport { Pie } from 'react-chartjs-2';\r\nimport {\r\n    Chart as ChartJS,\r\n    ArcElement,\r\n    Tooltip,\r\n    Legend\r\n} from 'chart.js';\r\n\r\nChartJS.register(\r\n    Tooltip,\r\n    Legend,\r\n    ArcElement\r\n);\r\n\r\nconst PieChart=()=>{\r\n    const apiUrl = \"http://localhost:8080\";\r\n    const [incomes, setIncomes] = useState([]);\r\n    const [expense, setExpense] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        getItems();\r\n        getExItems();\r\n    }, []);\r\n\r\n    const getItems = () => {\r\n        fetch(`${apiUrl}/income`)\r\n            .then((res) => res.json())\r\n            .then((res) => setIncomes(res))\r\n            .catch(() => setError(\"Failed to fetch incomes\"));\r\n    };\r\n\r\n    const getExItems = () => {\r\n        fetch(`${apiUrl}/api/expense`)\r\n            .then((res) => res.json())\r\n            .then((res) => setExpense(res))\r\n            .catch(() => setError(\"Failed to fetch expenses\"));\r\n    };\r\n\r\n    // Ensure `amount` is properly accessed\r\n    const totalIncome = incomes.reduce((sum, item) => sum + item.Amount, 0);\r\n    const totalExpense = expense.reduce((sum, item) => sum + (item.amount || 0), 0);\r\n    const remainingBalance = totalIncome - totalExpense; \r\n    \r\n const PieChartData={\r\n    labels:[\"Remaining\",\"Expense\"],\r\n    datasets:[{\r\n        label:\"Money spent\",\r\n        data:[totalExpense,remainingBalance],\r\n        backgroundColor:[\r\n            \"black\",\"grey\",\r\n        ],\r\n        hoverOffset:4,\r\n    },]\r\n}\r\n    const options={}\r\n    return<Pie options={options} data={PieChartData}/>\r\n}\r\nexport default PieChart;"]},"metadata":{},"sourceType":"module"}