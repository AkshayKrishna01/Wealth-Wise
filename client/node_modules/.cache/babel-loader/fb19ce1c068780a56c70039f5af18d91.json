{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aishwarya\\\\Desktop\\\\PRACTICE\\\\newwexpo\\\\expo\\\\client\\\\src\\\\components\\\\Income\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Navigation from \"../NavBar\";\nimport \"./in.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Income() {\n  _s();\n\n  const [incomeSource, setIncomeSource] = useState(\"Salary\"); // Default to Salary\n\n  const [amount, setAmount] = useState(\"\");\n  const [reference, setReference] = useState(\"\");\n  const [incomes, setIncomes] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [editId, setEditId] = useState(null);\n  const [editIncomeSource, setEditIncomeSource] = useState(\"Salary\");\n  const [editAmount, setEditAmount] = useState(\"\");\n  const [editReference, setEditReference] = useState(\"\");\n  const apiUrl = \"http://localhost:8080\";\n  useEffect(() => {\n    getItems();\n  }, []);\n\n  const getItems = () => {\n    fetch(`${apiUrl}/income`, {\n      method: \"GET\"\n    }).then(res => res.json()).then(res => setIncomes(res)).catch(() => setError(\"Failed to fetch incomes\"));\n  };\n\n  const handleSubmit = () => {\n    setError(\"\");\n\n    if (!incomeSource.trim() || !amount.trim()) {\n      setError(\"Income Source and Amount are required.\");\n      return;\n    }\n\n    fetch(`${apiUrl}/income`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        IncomeSource: incomeSource,\n        Amount: Number(amount),\n        reference\n      })\n    }).then(res => res.json()).then(() => {\n      setMessage(\"Income added successfully\");\n      setIncomeSource(\"Salary\");\n      setAmount(\"\");\n      setReference(\"\");\n      setTimeout(() => setMessage(\"\"), 3000);\n      getItems(); // Refresh list\n    }).catch(() => setError(\"Unable to create income entry\"));\n  };\n\n  const handleDelete = id => {\n    if (window.confirm(\"Are you sure you want to delete this?\")) {\n      fetch(`${apiUrl}/income/${id}`, {\n        method: \"DELETE\"\n      }).then(() => {\n        setMessage(\"Income deleted successfully\");\n        setTimeout(() => setMessage(\"\"), 3000);\n        getItems(); // Refresh list\n      }).catch(() => setError(\"Unable to delete income entry\"));\n    }\n  };\n\n  const handleEdit = item => {\n    setEditId(item._id);\n    setEditIncomeSource(item.IncomeSource);\n    setEditAmount(item.Amount);\n    setEditReference(item.reference);\n  };\n\n  const handleUpdate = () => {\n    setError(\"\");\n\n    if (!editIncomeSource.trim() || !editAmount.trim()) {\n      setError(\"Income Source and Amount are required.\");\n      return;\n    }\n\n    fetch(`${apiUrl}/income/${editId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        IncomeSource: editIncomeSource,\n        Amount: Number(editAmount),\n        reference: editReference\n      })\n    }).then(res => res.json()).then(() => {\n      setMessage(\"Income updated successfully\");\n      setTimeout(() => setMessage(\"\"), 3000);\n      setEditId(null);\n      getItems(); // Refresh list\n    }).catch(() => setError(\"Unable to update income entry\"));\n  }; // **Calculate Total Income**\n\n\n  const totalIncome = incomes.reduce((sum, item) => sum + item.Amount, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: editId ? \"Edit Income\" : \"Add Income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-success\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: editId ? editIncomeSource : incomeSource,\n            onChange: e => editId ? setEditIncomeSource(e.target.value) : setIncomeSource(e.target.value),\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Salary\",\n              children: \"Salary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Freelance\",\n              children: \"Freelance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Business\",\n              children: \"Business\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Investments\",\n              children: \"Investments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Other\",\n              children: \"Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Amount\",\n            value: editId ? editAmount : amount,\n            onChange: e => editId ? setEditAmount(e.target.value) : setAmount(e.target.value),\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Reference (optional)\",\n            value: editId ? editReference : reference,\n            onChange: e => editId ? setEditReference(e.target.value) : setReference(e.target.value),\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), editId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: handleUpdate,\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: () => setEditId(null),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-dark\",\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Income List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-bordered\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Income Source\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Amount ($)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Reference\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: incomes.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.IncomeSource\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", item.Amount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.reference || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-warning\",\n                  onClick: () => handleEdit(item),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-danger\",\n                  onClick: () => handleDelete(item._id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 37\n              }, this)]\n            }, item._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"total-income\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Total Income: $\", totalIncome.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Income, \"U9OMIzOsyASrBZzC/OpEeGS6bUs=\");\n\n_c = Income;\n\nvar _c;\n\n$RefreshReg$(_c, \"Income\");","map":{"version":3,"sources":["C:/Users/Aishwarya/Desktop/PRACTICE/newwexpo/expo/client/src/components/Income/index.jsx"],"names":["useEffect","useState","Navigation","Income","incomeSource","setIncomeSource","amount","setAmount","reference","setReference","incomes","setIncomes","error","setError","message","setMessage","editId","setEditId","editIncomeSource","setEditIncomeSource","editAmount","setEditAmount","editReference","setEditReference","apiUrl","getItems","fetch","method","then","res","json","catch","handleSubmit","trim","headers","body","JSON","stringify","IncomeSource","Amount","Number","setTimeout","handleDelete","id","window","confirm","handleEdit","item","_id","handleUpdate","totalIncome","reduce","sum","e","target","value","map","toFixed"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport Navigation from \"../NavBar\";\nimport \"./in.css\";\n\nexport default function Income() {\n    const [incomeSource, setIncomeSource] = useState(\"Salary\"); // Default to Salary\n    const [amount, setAmount] = useState(\"\");\n    const [reference, setReference] = useState(\"\");\n    const [incomes, setIncomes] = useState([]);\n    const [error, setError] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    const [editId, setEditId] = useState(null);\n    const [editIncomeSource, setEditIncomeSource] = useState(\"Salary\");\n    const [editAmount, setEditAmount] = useState(\"\");\n    const [editReference, setEditReference] = useState(\"\");\n\n    const apiUrl = \"http://localhost:8080\";\n\n    useEffect(() => {\n        getItems();\n    }, []);\n\n    const getItems = () => {\n        fetch(`${apiUrl}/income`, { method: \"GET\" })\n            .then((res) => res.json())\n            .then((res) => setIncomes(res))\n            .catch(() => setError(\"Failed to fetch incomes\"));\n    };\n\n    const handleSubmit = () => {\n        setError(\"\");\n\n        if (!incomeSource.trim() || !amount.trim()) {\n            setError(\"Income Source and Amount are required.\");\n            return;\n        }\n\n        fetch(`${apiUrl}/income`, {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ IncomeSource: incomeSource, Amount: Number(amount), reference }),\n        })\n            .then((res) => res.json())\n            .then(() => {\n                setMessage(\"Income added successfully\");\n                setIncomeSource(\"Salary\");\n                setAmount(\"\");\n                setReference(\"\");\n                setTimeout(() => setMessage(\"\"), 3000);\n                getItems(); // Refresh list\n            })\n            .catch(() => setError(\"Unable to create income entry\"));\n    };\n\n    const handleDelete = (id) => {\n        if (window.confirm(\"Are you sure you want to delete this?\")) {\n            fetch(`${apiUrl}/income/${id}`, { method: \"DELETE\" })\n                .then(() => {\n                    setMessage(\"Income deleted successfully\");\n                    setTimeout(() => setMessage(\"\"), 3000);\n                    getItems(); // Refresh list\n                })\n                .catch(() => setError(\"Unable to delete income entry\"));\n        }\n    };\n\n    const handleEdit = (item) => {\n        setEditId(item._id);\n        setEditIncomeSource(item.IncomeSource);\n        setEditAmount(item.Amount);\n        setEditReference(item.reference);\n    };\n\n    const handleUpdate = () => {\n        setError(\"\");\n\n        if (!editIncomeSource.trim() || !editAmount.trim()) {\n            setError(\"Income Source and Amount are required.\");\n            return;\n        }\n\n        fetch(`${apiUrl}/income/${editId}`, {\n            method: \"PUT\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ IncomeSource: editIncomeSource, Amount: Number(editAmount), reference: editReference }),\n        })\n            .then((res) => res.json())\n            .then(() => {\n                setMessage(\"Income updated successfully\");\n                setTimeout(() => setMessage(\"\"), 3000);\n                setEditId(null);\n                getItems(); // Refresh list\n            })\n            .catch(() => setError(\"Unable to update income entry\"));\n    };\n\n    // **Calculate Total Income**\n    const totalIncome = incomes.reduce((sum, item) => sum + item.Amount, 0);\n\n    return (\n        <div>\n            <Navigation />\n            <div className=\"container\">\n                <div className=\"form-container\">\n                    <h3>{editId ? \"Edit Income\" : \"Add Income\"}</h3>\n                    {message && <p className=\"text-success\">{message}</p>}\n                    <div className=\"form-group\">\n                        {/* Dropdown for Income Source */}\n                        <select\n                            value={editId ? editIncomeSource : incomeSource}\n                            onChange={(e) => (editId ? setEditIncomeSource(e.target.value) : setIncomeSource(e.target.value))}\n                            className=\"form-control\"\n                        >\n                            <option value=\"Salary\">Salary</option>\n                            <option value=\"Freelance\">Freelance</option>\n                            <option value=\"Business\">Business</option>\n                            <option value=\"Investments\">Investments</option>\n                            <option value=\"Other\">Other</option>\n                        </select>\n                        \n                        <input\n                            type=\"number\"\n                            placeholder=\"Amount\"\n                            value={editId ? editAmount : amount}\n                            onChange={(e) => (editId ? setEditAmount(e.target.value) : setAmount(e.target.value))}\n                            className=\"form-control\"\n                        />\n                        <input\n                            placeholder=\"Reference (optional)\"\n                            value={editId ? editReference : reference}\n                            onChange={(e) => (editId ? setEditReference(e.target.value) : setReference(e.target.value))}\n                            className=\"form-control\"\n                        />\n                        {editId ? (\n                            <>\n                                <button className=\"btn btn-success\" onClick={handleUpdate}>\n                                    Update\n                                </button>\n                                <button className=\"btn btn-secondary\" onClick={() => setEditId(null)}>\n                                    Cancel\n                                </button>\n                            </>\n                        ) : (\n                            <button className=\"btn btn-dark\" onClick={handleSubmit}>\n                                Submit\n                            </button>\n                        )}\n                    </div>\n                    {error && <p className=\"text-danger\">{error}</p>}\n                </div>\n\n                {/* Income Table */}\n                <div className=\"table-container\">\n                    <h3>Income List</h3>\n                    <table className=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th>Income Source</th>\n                                <th>Amount ($)</th>\n                                <th>Reference</th>\n                                <th>Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {incomes.map((item) => (\n                                <tr key={item._id}>\n                                    <td>{item.IncomeSource}</td>\n                                    <td>${item.Amount}</td>\n                                    <td>{item.reference || \"N/A\"}</td>\n                                    <td>\n                                        <button className=\"btn btn-warning\" onClick={() => handleEdit(item)}>\n                                            Edit\n                                        </button>\n                                        <button className=\"btn btn-danger\" onClick={() => handleDelete(item._id)}>\n                                            Delete\n                                        </button>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n\n                {/* Display Total Income */}\n                <div className=\"total-income\">\n                    <h4>Total Income: ${totalIncome.toFixed(2)}</h4>\n                </div>\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}