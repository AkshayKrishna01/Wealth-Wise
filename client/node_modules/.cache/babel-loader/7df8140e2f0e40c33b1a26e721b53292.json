{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aishwarya\\\\Desktop\\\\PRACTICE\\\\newwexpo\\\\expo\\\\client\\\\src\\\\components\\\\Budgetplan\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./styles.module.css\";\nimport Navigation from \"../NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BudgetPlan = () => {\n  _s();\n\n  const [budgets, setBudgets] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\"); // Form state for creating a new budget plan\n\n  const [name, setName] = useState(\"\");\n  const [total, setTotal] = useState(\"\");\n  const [spent, setSpent] = useState(\"\");\n  const [items, setItems] = useState(\"\");\n  const [icon, setIcon] = useState(\"\"); // Editing state\n\n  const [editId, setEditId] = useState(null);\n  const [editName, setEditName] = useState(\"\");\n  const [editTotal, setEditTotal] = useState(\"\");\n  const [editSpent, setEditSpent] = useState(\"\");\n  const [editItems, setEditItems] = useState(\"\");\n  const [editIcon, setEditIcon] = useState(\"\");\n  const apiUrl = \"http://localhost:8080/api\";\n  useEffect(() => {\n    fetchBudgets();\n  }, []);\n\n  const fetchBudgets = async () => {\n    try {\n      const res = await fetch(`${apiUrl}/budgetplan`);\n      if (!res.ok) throw new Error(\"Failed to fetch budget plans\");\n      const data = await res.json();\n      setBudgets(data);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const handleSubmit = async () => {\n    if (!name || !total) {\n      setError(\"Name and Total are required\");\n      return;\n    }\n\n    try {\n      const res = await fetch(`${apiUrl}/budgetplan`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name,\n          total: Number(total),\n          spent: Number(spent) || 0,\n          items: Number(items) || 0,\n          icon: icon || \"ðŸ’°\"\n        })\n      });\n      if (!res.ok) throw new Error(\"Failed to create budget plan\");\n      setMessage(\"Budget plan created successfully!\"); // Clear form fields\n\n      setName(\"\");\n      setTotal(\"\");\n      setSpent(\"\");\n      setItems(\"\");\n      setIcon(\"\");\n      fetchBudgets();\n      setTimeout(() => setMessage(\"\"), 3000);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const handleDelete = async id => {\n    if (window.confirm(\"Are you sure you want to delete this budget plan?\")) {\n      try {\n        const res = await fetch(`${apiUrl}/budgetplan/${id}`, {\n          method: \"DELETE\"\n        });\n        if (!res.ok) throw new Error(\"Failed to delete budget plan\");\n        setMessage(\"Budget plan deleted successfully\");\n        fetchBudgets();\n        setTimeout(() => setMessage(\"\"), 3000);\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  };\n\n  const handleEdit = plan => {\n    setEditId(plan._id);\n    setEditName(plan.name);\n    setEditTotal(plan.total);\n    setEditSpent(plan.spent);\n    setEditItems(plan.items);\n    setEditIcon(plan.icon);\n  };\n\n  const handleUpdate = async () => {\n    if (!editName || !editTotal) {\n      setError(\"Name and Total are required\");\n      return;\n    }\n\n    try {\n      const res = await fetch(`${apiUrl}/budgetplan/${editId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: editName,\n          total: Number(editTotal),\n          spent: Number(editSpent) || 0,\n          items: Number(editItems) || 0,\n          icon: editIcon || \"ðŸ’°\"\n        })\n      });\n      if (!res.ok) throw new Error(\"Failed to update budget plan\");\n      setMessage(\"Budget plan updated successfully\");\n      setEditId(null);\n      fetchBudgets();\n      setTimeout(() => setMessage(\"\"), 3000);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"      \", /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Budget Plans\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: editId ? \"Edit Budget Plan\" : \"Create New Budget Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.error_msg,\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 19\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.success_msg,\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [editId ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Plan Name\",\n            value: editName,\n            onChange: e => setEditName(e.target.value),\n            className: styles.formControl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Plan Name\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            className: styles.formControl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), editId ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Total Amount\",\n            value: editTotal,\n            onChange: e => setEditTotal(e.target.value),\n            className: styles.formControl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Total Amount\",\n            value: total,\n            onChange: e => setTotal(e.target.value),\n            className: styles.formControl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), editId ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Amount Spent\",\n            value: editSpent,\n            onChange: e => setEditSpent(e.target.value),\n            className: styles.formControl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Amount Spent\",\n            value: spent,\n            onChange: e => setSpent(e.target.value),\n            className: styles.formControl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), editId ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Number of Items\",\n            value: editItems,\n            onChange: e => setEditItems(e.target.value),\n            className: styles.formControl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Number of Items\",\n            value: items,\n            onChange: e => setItems(e.target.value),\n            className: styles.formControl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), editId ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Icon (optional)\",\n            value: editIcon,\n            onChange: e => setEditIcon(e.target.value),\n            className: styles.formControl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Icon (optional)\",\n            value: icon,\n            onChange: e => setIcon(e.target.value),\n            className: styles.formControl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }, this), editId ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.buttonGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.btnSuccess,\n            onClick: handleUpdate,\n            children: \"Update Plan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.btnSecondary,\n            onClick: () => setEditId(null),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.btnDark,\n          onClick: handleSubmit,\n          children: \"Create New Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.budgetGrid,\n        children: budgets.map(plan => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.budgetCard,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.budgetHeader,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.icon,\n              children: plan.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.budgetTitle,\n              children: plan.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.amount,\n              children: [\"$\", plan.total]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [plan.items, \" Item(s)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.progressBar,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.progress,\n              style: {\n                width: `${plan.spent / plan.total * 100}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.budgetInfo,\n            children: [\"$\", plan.spent, \" Spent | $\", plan.total - plan.spent, \" Remaining\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.cardButtons,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.btnWarning,\n              onClick: () => handleEdit(plan),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.btnDanger,\n              onClick: () => handleDelete(plan._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)]\n        }, plan._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(BudgetPlan, \"8v850cOqwHS0z1ZiLw6BZul5amM=\");\n\n_c = BudgetPlan;\nexport default BudgetPlan;\n\nvar _c;\n\n$RefreshReg$(_c, \"BudgetPlan\");","map":{"version":3,"sources":["C:/Users/Aishwarya/Desktop/PRACTICE/newwexpo/expo/client/src/components/Budgetplan/index.jsx"],"names":["React","useState","useEffect","styles","Navigation","BudgetPlan","budgets","setBudgets","error","setError","message","setMessage","name","setName","total","setTotal","spent","setSpent","items","setItems","icon","setIcon","editId","setEditId","editName","setEditName","editTotal","setEditTotal","editSpent","setEditSpent","editItems","setEditItems","editIcon","setEditIcon","apiUrl","fetchBudgets","res","fetch","ok","Error","data","json","err","handleSubmit","method","headers","body","JSON","stringify","Number","setTimeout","handleDelete","id","window","confirm","handleEdit","plan","_id","handleUpdate","container","formContainer","error_msg","success_msg","formGroup","e","target","value","formControl","buttonGroup","btnSuccess","btnSecondary","btnDark","budgetGrid","map","budgetCard","budgetHeader","budgetTitle","amount","progressBar","progress","width","budgetInfo","cardButtons","btnWarning","btnDanger"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styles from \"./styles.module.css\";\nimport Navigation from \"../NavBar\";\n\nconst BudgetPlan = () => {\n  const [budgets, setBudgets] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  // Form state for creating a new budget plan\n  const [name, setName] = useState(\"\");\n  const [total, setTotal] = useState(\"\");\n  const [spent, setSpent] = useState(\"\");\n  const [items, setItems] = useState(\"\");\n  const [icon, setIcon] = useState(\"\");\n\n  // Editing state\n  const [editId, setEditId] = useState(null);\n  const [editName, setEditName] = useState(\"\");\n  const [editTotal, setEditTotal] = useState(\"\");\n  const [editSpent, setEditSpent] = useState(\"\");\n  const [editItems, setEditItems] = useState(\"\");\n  const [editIcon, setEditIcon] = useState(\"\");\n\n  const apiUrl = \"http://localhost:8080/api\";\n\n  useEffect(() => {\n    fetchBudgets();\n  }, []);\n\n  const fetchBudgets = async () => {\n    try {\n      const res = await fetch(`${apiUrl}/budgetplan`);\n      if (!res.ok) throw new Error(\"Failed to fetch budget plans\");\n      const data = await res.json();\n      setBudgets(data);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const handleSubmit = async () => {\n    if (!name || !total) {\n      setError(\"Name and Total are required\");\n      return;\n    }\n    try {\n      const res = await fetch(`${apiUrl}/budgetplan`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          name,\n          total: Number(total),\n          spent: Number(spent) || 0,\n          items: Number(items) || 0,\n          icon: icon || \"ðŸ’°\",\n        }),\n      });\n      if (!res.ok) throw new Error(\"Failed to create budget plan\");\n      setMessage(\"Budget plan created successfully!\");\n      // Clear form fields\n      setName(\"\");\n      setTotal(\"\");\n      setSpent(\"\");\n      setItems(\"\");\n      setIcon(\"\");\n      fetchBudgets();\n      setTimeout(() => setMessage(\"\"), 3000);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const handleDelete = async (id) => {\n    if (window.confirm(\"Are you sure you want to delete this budget plan?\")) {\n      try {\n        const res = await fetch(`${apiUrl}/budgetplan/${id}`, {\n          method: \"DELETE\",\n        });\n        if (!res.ok) throw new Error(\"Failed to delete budget plan\");\n        setMessage(\"Budget plan deleted successfully\");\n        fetchBudgets();\n        setTimeout(() => setMessage(\"\"), 3000);\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  };\n\n  const handleEdit = (plan) => {\n    setEditId(plan._id);\n    setEditName(plan.name);\n    setEditTotal(plan.total);\n    setEditSpent(plan.spent);\n    setEditItems(plan.items);\n    setEditIcon(plan.icon);\n  };\n\n  const handleUpdate = async () => {\n    if (!editName || !editTotal) {\n      setError(\"Name and Total are required\");\n      return;\n    }\n    try {\n      const res = await fetch(`${apiUrl}/budgetplan/${editId}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          name: editName,\n          total: Number(editTotal),\n          spent: Number(editSpent) || 0,\n          items: Number(editItems) || 0,\n          icon: editIcon || \"ðŸ’°\",\n        }),\n      });\n      if (!res.ok) throw new Error(\"Failed to update budget plan\");\n      setMessage(\"Budget plan updated successfully\");\n      setEditId(null);\n      fetchBudgets();\n      setTimeout(() => setMessage(\"\"), 3000);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <>      <Navigation/>\n\n    <div className={styles.container}>\n      <h2>My Budget Plans</h2>\n      {/* Form for Create / Edit */}\n      <div className={styles.formContainer}>\n        <h3>{editId ? \"Edit Budget Plan\" : \"Create New Budget Plan\"}</h3>\n        {error && <div className={styles.error_msg}>{error}</div>}\n        {message && <div className={styles.success_msg}>{message}</div>}\n        <div className={styles.formGroup}>\n          {editId ? (\n            <input\n              type=\"text\"\n              placeholder=\"Plan Name\"\n              value={editName}\n              onChange={(e) => setEditName(e.target.value)}\n              className={styles.formControl}\n            />\n          ) : (\n            <input\n              type=\"text\"\n              placeholder=\"Plan Name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              className={styles.formControl}\n            />\n          )}\n          {editId ? (\n            <input\n              type=\"number\"\n              placeholder=\"Total Amount\"\n              value={editTotal}\n              onChange={(e) => setEditTotal(e.target.value)}\n              className={styles.formControl}\n            />\n          ) : (\n            <input\n              type=\"number\"\n              placeholder=\"Total Amount\"\n              value={total}\n              onChange={(e) => setTotal(e.target.value)}\n              className={styles.formControl}\n            />\n          )}\n          {editId ? (\n            <input\n              type=\"number\"\n              placeholder=\"Amount Spent\"\n              value={editSpent}\n              onChange={(e) => setEditSpent(e.target.value)}\n              className={styles.formControl}\n            />\n          ) : (\n            <input\n              type=\"number\"\n              placeholder=\"Amount Spent\"\n              value={spent}\n              onChange={(e) => setSpent(e.target.value)}\n              className={styles.formControl}\n            />\n          )}\n          {editId ? (\n            <input\n              type=\"number\"\n              placeholder=\"Number of Items\"\n              value={editItems}\n              onChange={(e) => setEditItems(e.target.value)}\n              className={styles.formControl}\n            />\n          ) : (\n            <input\n              type=\"number\"\n              placeholder=\"Number of Items\"\n              value={items}\n              onChange={(e) => setItems(e.target.value)}\n              className={styles.formControl}\n            />\n          )}\n          {editId ? (\n            <input\n              type=\"text\"\n              placeholder=\"Icon (optional)\"\n              value={editIcon}\n              onChange={(e) => setEditIcon(e.target.value)}\n              className={styles.formControl}\n            />\n          ) : (\n            <input\n              type=\"text\"\n              placeholder=\"Icon (optional)\"\n              value={icon}\n              onChange={(e) => setIcon(e.target.value)}\n              className={styles.formControl}\n            />\n          )}\n        </div>\n        {editId ? (\n          <div className={styles.buttonGroup}>\n            <button className={styles.btnSuccess} onClick={handleUpdate}>\n              Update Plan\n            </button>\n            <button\n              className={styles.btnSecondary}\n              onClick={() => setEditId(null)}\n            >\n              Cancel\n            </button>\n          </div>\n        ) : (\n          <button className={styles.btnDark} onClick={handleSubmit}>\n            Create New Plan\n          </button>\n        )}\n      </div>\n\n      {/* Budget Grid */}\n      <div className={styles.budgetGrid}>\n        {budgets.map((plan) => (\n          <div key={plan._id} className={styles.budgetCard}>\n            <div className={styles.budgetHeader}>\n              <span className={styles.icon}>{plan.icon}</span>\n              <span className={styles.budgetTitle}>{plan.name}</span>\n              <span className={styles.amount}>${plan.total}</span>\n            </div>\n            <p>{plan.items} Item(s)</p>\n            <div className={styles.progressBar}>\n              <div\n                className={styles.progress}\n                style={{ width: `${(plan.spent / plan.total) * 100}%` }}\n              ></div>\n            </div>\n            <p className={styles.budgetInfo}>\n              ${plan.spent} Spent | ${plan.total - plan.spent} Remaining\n            </p>\n            <div className={styles.cardButtons}>\n              <button\n                className={styles.btnWarning}\n                onClick={() => handleEdit(plan)}\n              >\n                Edit\n              </button>\n              <button\n                className={styles.btnDanger}\n                onClick={() => handleDelete(plan._id)}\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div></>\n  );\n};\n\nexport default BudgetPlan;\n"]},"metadata":{},"sourceType":"module"}